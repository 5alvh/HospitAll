package com.tfg.back.service.serviceImpl;

import com.tfg.back.mappers.ClientMapper;
import com.tfg.back.model.Client;
import com.tfg.back.model.dtos.client.ClientDtoCreate;
import com.tfg.back.repository.ClientRepository;
import com.tfg.back.service.ClientService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.Optional;

@Service
public class ClientServiceImpl implements ClientService {

    private final ClientRepository clientRepository;

    @Autowired
    public ClientServiceImpl(ClientRepository clientRepository) {
        this.clientRepository = clientRepository;
    }

    @Override
    public Client createClient(ClientDtoCreate client) {
        Client newClient = ClientMapper.toEntity(client);
        return clientRepository.save(newClient);
    }

    @Override
    public Client getClientById(Long id) {
        Optional<Client> clientCheck = clientRepository.findById(id);
        return clientCheck.orElse(null);
    }

    @Override
    public Client getClientByEmail(String email) {
        Optional<Client> clientCheck = clientRepository.findByEmail(email);
        return clientCheck.orElse(null);
    }

    @Override
    public List<Client> getAllClients() {
        return clientRepository.findAll();
    }

    @Override
    public boolean deleteClient(Long id) {
        boolean exists = clientRepository.existsById(id);
        if (exists) {
            clientRepository.deleteById(id);
            return true;
        }
        return false;
    }
}
