2025-06-10T02:10:42.329+02:00 DEBUG 21416 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table clients 
       modify column membership_level enum ('BASIC','INSURANCE_COVERED','PREMIUM','VIP') not null
2025-06-10T02:10:42.444+02:00 DEBUG 21416 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table doctors 
       modify column specialization enum ('CARDIOLOGY','NEUROLOGY','ONCOLOGY','ORTHOPEDICS','PEDIATRICS') not null
2025-06-10T02:10:42.500+02:00 DEBUG 21416 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table users 
       modify column status enum ('ACTIVE','INACTIVE','SUSPENDED') not null
2025-06-10T02:10:45.456+02:00  WARN 21416 --- [back] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-10T02:10:45.487+02:00  WARN 21416 --- [back] [restartedMain] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-06-10T02:23:28.434+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-10T02:23:28.616+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_1.email=?
2025-06-10T02:23:28.631+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        a1_0.client_id,
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=?
2025-06-10T02:23:28.671+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        d1_0.doctor_id,
        d1_1.address,
        d1_1.created_at,
        d1_1.date_of_birth,
        d1_1.email,
        d1_1.full_name,
        d1_1.hashed_password,
        d1_1.phone_number,
        d1_1.status,
        d1_1.updated_at,
        d1_1.version,
        d2_0.id,
        d2_0.contact_number,
        d2_0.created_at,
        d2_0.description,
        d2_0.head_doctor_id,
        d2_0.location,
        d2_0.name,
        d2_0.updated_at,
        d2_0.version,
        d1_0.medical_license_number,
        d1_0.specialization 
    from
        doctors d1_0 
    join
        users d1_1 
            on d1_0.doctor_id=d1_1.id 
    left join
        departments d2_0 
            on d2_0.id=d1_0.department_id 
    where
        d1_0.doctor_id=?
2025-06-10T02:23:28.692+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        pr1_0.prescribed_to_id,
        pr1_0.id,
        pr1_0.created_at,
        pr1_0.dosage,
        pr1_0.end_date,
        pr1_0.frequency,
        pr1_0.medication_name,
        pr1_0.notes,
        pr1_0.prescribed_by_id,
        pr1_0.start_date,
        pr1_0.status,
        pr1_0.updated_at,
        pr1_0.version 
    from
        medical_prescriptions pr1_0 
    where
        pr1_0.prescribed_to_id=?
2025-06-10T02:23:28.710+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        lrr1_0.patient_id,
        lrr1_0.id,
        lrr1_0.created_at,
        lrr1_0.notes,
        lrr1_0.ordered_by_id,
        lrr1_0.reference_range,
        lrr1_0.result_date,
        lrr1_0.result_value,
        lrr1_0.status,
        lrr1_0.test_name,
        lrr1_0.unit,
        lrr1_0.updated_at,
        lrr1_0.version 
    from
        lab_results lrr1_0 
    where
        lrr1_0.patient_id=?
2025-06-10T02:23:28.722+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        fw1_0.author_id,
        fw1_0.id,
        fw1_0.comment,
        fw1_0.created_at,
        fw1_0.rating,
        fw1_0.type,
        wt1_0.doctor_id,
        wt1_1.address,
        wt1_1.created_at,
        wt1_1.date_of_birth,
        wt1_1.email,
        wt1_1.full_name,
        wt1_1.hashed_password,
        wt1_1.phone_number,
        wt1_1.status,
        wt1_1.updated_at,
        wt1_1.version,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        wt1_0.medical_license_number,
        wt1_0.specialization 
    from
        feedbacks fw1_0 
    left join
        doctors wt1_0 
            on wt1_0.doctor_id=fw1_0.written_to_id 
    left join
        users wt1_1 
            on wt1_0.doctor_id=wt1_1.id 
    left join
        departments d1_0 
            on d1_0.id=wt1_0.department_id 
    where
        fw1_0.author_id=?
2025-06-10T02:23:28.879+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        n1_0.user_id,
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type 
    from
        notifications n1_0 
    where
        n1_0.user_id=?
2025-06-10T02:23:54.945+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-10T02:23:55.027+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.id=?
2025-06-10T02:23:55.412+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-10T02:23:55.420+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        d1_0.doctor_id,
        d1_1.address,
        d1_1.created_at,
        d1_1.date_of_birth,
        d1_1.email,
        d1_1.full_name,
        d1_1.hashed_password,
        d1_1.phone_number,
        d1_1.status,
        d1_1.updated_at,
        d1_1.version,
        d2_0.id,
        d2_0.contact_number,
        d2_0.created_at,
        d2_0.description,
        d2_0.head_doctor_id,
        d2_0.location,
        d2_0.name,
        d2_0.updated_at,
        d2_0.version,
        d1_0.medical_license_number,
        d1_0.specialization 
    from
        doctors d1_0 
    join
        users d1_1 
            on d1_0.doctor_id=d1_1.id 
    left join
        departments d2_0 
            on d2_0.id=d1_0.department_id 
    where
        d1_0.doctor_id=?
2025-06-10T02:25:08.720+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version 
    from
        departments d1_0
2025-06-10T02:32:17.125+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version 
    from
        departments d1_0
2025-06-10T02:33:23.695+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version 
    from
        departments d1_0
2025-06-10T02:35:35.820+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        d1_0.doctor_id 
    from
        doctors d1_0 
    join
        users d1_1 
            on d1_0.doctor_id=d1_1.id 
    where
        d1_1.email=? 
    limit
        ?
2025-06-10T02:35:35.834+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version 
    from
        departments d1_0 
    where
        d1_0.id=?
2025-06-10T02:35:36.025+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    insert 
    into
        users
        (address, created_at, date_of_birth, email, full_name, hashed_password, phone_number, status, updated_at, version, user_type) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, 'DOCTOR')
2025-06-10T02:35:36.054+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    insert 
    into
        doctors
        (department_id, medical_license_number, specialization, doctor_id) 
    values
        (?, ?, ?, ?)
2025-06-10T02:35:36.071+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    insert 
    into
        working_hours
        (day_of_week, doctor_id) 
    values
        (?, ?)
2025-06-10T02:35:36.080+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    insert 
    into
        time_intervals
        (end_time, start_time, working_hours_id) 
    values
        (?, ?, ?)
2025-06-10T02:35:36.096+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    insert 
    into
        working_hours
        (day_of_week, doctor_id) 
    values
        (?, ?)
2025-06-10T02:35:36.103+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    insert 
    into
        time_intervals
        (end_time, start_time, working_hours_id) 
    values
        (?, ?, ?)
2025-06-10T02:35:36.109+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    insert 
    into
        working_hours
        (day_of_week, doctor_id) 
    values
        (?, ?)
2025-06-10T02:35:36.114+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    insert 
    into
        time_intervals
        (end_time, start_time, working_hours_id) 
    values
        (?, ?, ?)
2025-06-10T02:35:36.118+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    insert 
    into
        working_hours
        (day_of_week, doctor_id) 
    values
        (?, ?)
2025-06-10T02:35:36.126+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    insert 
    into
        time_intervals
        (end_time, start_time, working_hours_id) 
    values
        (?, ?, ?)
2025-06-10T02:35:36.131+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    insert 
    into
        working_hours
        (day_of_week, doctor_id) 
    values
        (?, ?)
2025-06-10T02:35:36.135+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    insert 
    into
        time_intervals
        (end_time, start_time, working_hours_id) 
    values
        (?, ?, ?)
2025-06-10T02:35:36.141+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    insert 
    into
        working_hours
        (day_of_week, doctor_id) 
    values
        (?, ?)
2025-06-10T02:35:36.145+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    insert 
    into
        time_intervals
        (end_time, start_time, working_hours_id) 
    values
        (?, ?, ?)
2025-06-10T02:35:36.149+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    insert 
    into
        working_hours
        (day_of_week, doctor_id) 
    values
        (?, ?)
2025-06-10T02:35:36.156+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    insert 
    into
        time_intervals
        (end_time, start_time, working_hours_id) 
    values
        (?, ?, ?)
2025-06-10T02:37:40.713+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version 
    from
        departments d1_0
2025-06-10T02:39:08.574+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        d1_0.doctor_id 
    from
        doctors d1_0 
    join
        users d1_1 
            on d1_0.doctor_id=d1_1.id 
    where
        d1_1.email=? 
    limit
        ?
2025-06-10T02:39:08.588+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version 
    from
        departments d1_0 
    where
        d1_0.id=?
2025-06-10T02:39:08.730+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    insert 
    into
        users
        (address, created_at, date_of_birth, email, full_name, hashed_password, phone_number, status, updated_at, version, user_type) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, 'DOCTOR')
2025-06-10T02:39:08.736+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    insert 
    into
        doctors
        (department_id, medical_license_number, specialization, doctor_id) 
    values
        (?, ?, ?, ?)
2025-06-10T02:39:08.741+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    insert 
    into
        working_hours
        (day_of_week, doctor_id) 
    values
        (?, ?)
2025-06-10T02:39:08.747+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    insert 
    into
        time_intervals
        (end_time, start_time, working_hours_id) 
    values
        (?, ?, ?)
2025-06-10T02:39:08.752+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    insert 
    into
        working_hours
        (day_of_week, doctor_id) 
    values
        (?, ?)
2025-06-10T02:39:08.757+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    insert 
    into
        time_intervals
        (end_time, start_time, working_hours_id) 
    values
        (?, ?, ?)
2025-06-10T02:39:08.765+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    insert 
    into
        working_hours
        (day_of_week, doctor_id) 
    values
        (?, ?)
2025-06-10T02:39:08.770+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    insert 
    into
        time_intervals
        (end_time, start_time, working_hours_id) 
    values
        (?, ?, ?)
2025-06-10T02:39:08.776+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    insert 
    into
        working_hours
        (day_of_week, doctor_id) 
    values
        (?, ?)
2025-06-10T02:39:08.782+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    insert 
    into
        time_intervals
        (end_time, start_time, working_hours_id) 
    values
        (?, ?, ?)
2025-06-10T02:39:08.788+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    insert 
    into
        working_hours
        (day_of_week, doctor_id) 
    values
        (?, ?)
2025-06-10T02:39:08.796+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    insert 
    into
        time_intervals
        (end_time, start_time, working_hours_id) 
    values
        (?, ?, ?)
2025-06-10T02:39:08.804+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    insert 
    into
        working_hours
        (day_of_week, doctor_id) 
    values
        (?, ?)
2025-06-10T02:39:08.809+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    insert 
    into
        time_intervals
        (end_time, start_time, working_hours_id) 
    values
        (?, ?, ?)
2025-06-10T02:39:08.816+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    insert 
    into
        working_hours
        (day_of_week, doctor_id) 
    values
        (?, ?)
2025-06-10T02:39:08.822+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    insert 
    into
        time_intervals
        (end_time, start_time, working_hours_id) 
    values
        (?, ?, ?)
2025-06-10T02:39:08.826+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    insert 
    into
        time_intervals
        (end_time, start_time, working_hours_id) 
    values
        (?, ?, ?)
2025-06-10T03:06:14.979+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version 
    from
        departments d1_0
2025-06-10T03:07:22.444+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        d1_0.doctor_id 
    from
        doctors d1_0 
    join
        users d1_1 
            on d1_0.doctor_id=d1_1.id 
    where
        d1_1.email=? 
    limit
        ?
2025-06-10T03:07:22.832+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version 
    from
        departments d1_0 
    where
        d1_0.id=?
2025-06-10T03:07:22.976+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    insert 
    into
        users
        (address, created_at, date_of_birth, email, full_name, hashed_password, phone_number, status, updated_at, version, user_type) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, 'DOCTOR')
2025-06-10T03:07:22.991+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    insert 
    into
        doctors
        (department_id, medical_license_number, specialization, doctor_id) 
    values
        (?, ?, ?, ?)
2025-06-10T03:07:23.000+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    insert 
    into
        working_hours
        (day_of_week, doctor_id) 
    values
        (?, ?)
2025-06-10T03:07:23.008+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    insert 
    into
        time_intervals
        (end_time, start_time, working_hours_id) 
    values
        (?, ?, ?)
2025-06-10T03:07:23.013+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    insert 
    into
        working_hours
        (day_of_week, doctor_id) 
    values
        (?, ?)
2025-06-10T03:07:23.017+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    insert 
    into
        time_intervals
        (end_time, start_time, working_hours_id) 
    values
        (?, ?, ?)
2025-06-10T03:07:23.023+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    insert 
    into
        working_hours
        (day_of_week, doctor_id) 
    values
        (?, ?)
2025-06-10T03:07:23.030+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    insert 
    into
        time_intervals
        (end_time, start_time, working_hours_id) 
    values
        (?, ?, ?)
2025-06-10T03:07:23.035+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    insert 
    into
        working_hours
        (day_of_week, doctor_id) 
    values
        (?, ?)
2025-06-10T03:07:23.039+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    insert 
    into
        time_intervals
        (end_time, start_time, working_hours_id) 
    values
        (?, ?, ?)
2025-06-10T03:07:23.044+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    insert 
    into
        working_hours
        (day_of_week, doctor_id) 
    values
        (?, ?)
2025-06-10T03:07:23.048+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    insert 
    into
        time_intervals
        (end_time, start_time, working_hours_id) 
    values
        (?, ?, ?)
2025-06-10T03:07:23.052+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    insert 
    into
        working_hours
        (day_of_week, doctor_id) 
    values
        (?, ?)
2025-06-10T03:07:23.056+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    insert 
    into
        time_intervals
        (end_time, start_time, working_hours_id) 
    values
        (?, ?, ?)
2025-06-10T03:07:23.062+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    insert 
    into
        working_hours
        (day_of_week, doctor_id) 
    values
        (?, ?)
2025-06-10T03:07:23.066+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    insert 
    into
        time_intervals
        (end_time, start_time, working_hours_id) 
    values
        (?, ?, ?)
2025-06-10T03:09:54.954+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version 
    from
        departments d1_0
2025-06-10T03:10:47.708+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        d1_0.doctor_id 
    from
        doctors d1_0 
    join
        users d1_1 
            on d1_0.doctor_id=d1_1.id 
    where
        d1_1.email=? 
    limit
        ?
2025-06-10T03:10:47.736+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version 
    from
        departments d1_0 
    where
        d1_0.id=?
2025-06-10T03:10:47.882+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    insert 
    into
        users
        (address, created_at, date_of_birth, email, full_name, hashed_password, phone_number, status, updated_at, version, user_type) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, 'DOCTOR')
2025-06-10T03:10:47.890+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    insert 
    into
        doctors
        (department_id, medical_license_number, specialization, doctor_id) 
    values
        (?, ?, ?, ?)
2025-06-10T03:10:48.752+02:00  WARN 21416 --- [back] [http-nio-8080-exec-8] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Error: 1062, SQLState: 23000
2025-06-10T03:10:48.753+02:00 ERROR 21416 --- [back] [http-nio-8080-exec-8] o.h.engine.jdbc.spi.SqlExceptionHelper   : Duplicate entry 'ES1593574862' for key 'doctors.UKlickujod7hiva6es7ch3drek0'
2025-06-10T03:10:48.835+02:00 ERROR 21416 --- [back] [http-nio-8080-exec-8] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DataIntegrityViolationException: could not execute statement [Duplicate entry 'ES1593574862' for key 'doctors.UKlickujod7hiva6es7ch3drek0'] [insert into doctors (department_id,medical_license_number,specialization,doctor_id) values (?,?,?,?)]; SQL [insert into doctors (department_id,medical_license_number,specialization,doctor_id) values (?,?,?,?)]; constraint [doctors.UKlickujod7hiva6es7ch3drek0]] with root cause

java.sql.SQLIntegrityConstraintViolationException: Duplicate entry 'ES1593574862' for key 'doctors.UKlickujod7hiva6es7ch3drek0'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:109) ~[mysql-connector-j-9.1.0.jar:9.1.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:114) ~[mysql-connector-j-9.1.0.jar:9.1.0]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:988) ~[mysql-connector-j-9.1.0.jar:9.1.0]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1166) ~[mysql-connector-j-9.1.0.jar:9.1.0]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1101) ~[mysql-connector-j-9.1.0.jar:9.1.0]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1467) ~[mysql-connector-j-9.1.0.jar:9.1.0]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1084) ~[mysql-connector-j-9.1.0.jar:9.1.0]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61) ~[HikariCP-5.1.0.jar:na]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java) ~[HikariCP-5.1.0.jar:na]
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194) ~[hibernate-core-6.6.13.Final.jar:6.6.13.Final]
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:134) ~[hibernate-core-6.6.13.Final.jar:6.6.13.Final]
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorStandard.lambda$performNonBatchedOperations$1(MutationExecutorStandard.java:245) ~[hibernate-core-6.6.13.Final.jar:6.6.13.Final]
	at java.base/java.util.TreeMap.forEach(TreeMap.java:1317) ~[na:na]
	at org.hibernate.engine.jdbc.mutation.internal.PreparedStatementGroupStandard.forEachStatement(PreparedStatementGroupStandard.java:91) ~[hibernate-core-6.6.13.Final.jar:6.6.13.Final]
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorStandard.performNonBatchedOperations(MutationExecutorStandard.java:243) ~[hibernate-core-6.6.13.Final.jar:6.6.13.Final]
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:55) ~[hibernate-core-6.6.13.Final.jar:6.6.13.Final]
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.doStaticInserts(InsertCoordinatorStandard.java:194) ~[hibernate-core-6.6.13.Final.jar:6.6.13.Final]
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.coordinateInsert(InsertCoordinatorStandard.java:132) ~[hibernate-core-6.6.13.Final.jar:6.6.13.Final]
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.insert(InsertCoordinatorStandard.java:95) ~[hibernate-core-6.6.13.Final.jar:6.6.13.Final]
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:85) ~[hibernate-core-6.6.13.Final.jar:6.6.13.Final]
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:682) ~[hibernate-core-6.6.13.Final.jar:6.6.13.Final]
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:293) ~[hibernate-core-6.6.13.Final.jar:6.6.13.Final]
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:274) ~[hibernate-core-6.6.13.Final.jar:6.6.13.Final]
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:324) ~[hibernate-core-6.6.13.Final.jar:6.6.13.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:393) ~[hibernate-core-6.6.13.Final.jar:6.6.13.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:307) ~[hibernate-core-6.6.13.Final.jar:6.6.13.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:223) ~[hibernate-core-6.6.13.Final.jar:6.6.13.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:136) ~[hibernate-core-6.6.13.Final.jar:6.6.13.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:177) ~[hibernate-core-6.6.13.Final.jar:6.6.13.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:95) ~[hibernate-core-6.6.13.Final.jar:6.6.13.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:79) ~[hibernate-core-6.6.13.Final.jar:6.6.13.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55) ~[hibernate-core-6.6.13.Final.jar:6.6.13.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.6.13.Final.jar:6.6.13.Final]
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:761) ~[hibernate-core-6.6.13.Final.jar:6.6.13.Final]
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:745) ~[hibernate-core-6.6.13.Final.jar:6.6.13.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364) ~[spring-orm-6.2.6.jar:6.2.6]
	at jdk.proxy4/jdk.proxy4.$Proxy161.persist(Unknown Source) ~[na:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.6.jar:6.2.6]
	at jdk.proxy4/jdk.proxy4.$Proxy161.persist(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:636) ~[spring-data-jpa-3.4.5.jar:3.4.5]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.6.jar:6.2.6]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.5.jar:3.4.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.5.jar:3.4.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.5.jar:3.4.5]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.5.jar:3.4.5]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.5.jar:3.4.5]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.5.jar:3.4.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.6.jar:6.2.6]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.5.jar:3.4.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.5.jar:3.4.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.6.jar:6.2.6]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.5.jar:3.4.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.6.jar:6.2.6]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.6.jar:6.2.6]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.6.jar:6.2.6]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.6.jar:6.2.6]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.6.jar:6.2.6]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.6.jar:6.2.6]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.5.jar:3.4.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.6.jar:6.2.6]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.6.jar:6.2.6]
	at jdk.proxy4/jdk.proxy4.$Proxy175.save(Unknown Source) ~[na:na]
	at com.tfg.back.service.serviceImpl.DoctorServiceImpl.createDoctor(DoctorServiceImpl.java:78) ~[classes/:na]
	at com.tfg.back.controller.DoctorController.registerDoctor(DoctorController.java:31) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.2.6.jar:6.2.6]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986) ~[spring-webmvc-6.2.6.jar:6.2.6]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891) ~[spring-webmvc-6.2.6.jar:6.2.6]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.2.6.jar:6.2.6]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.2.6.jar:6.2.6]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.2.6.jar:6.2.6]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.2.6.jar:6.2.6]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.2.6.jar:6.2.6]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.40.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.2.6.jar:6.2.6]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.40.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110) ~[spring-web-6.2.6.jar:6.2.6]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at com.tfg.back.configuration.JwtRequestFilter.doFilterInternal(JwtRequestFilter.java:54) ~[classes/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243) ~[spring-webmvc-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238) ~[spring-security-config-6.4.5.jar:6.4.5]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278) ~[spring-web-6.2.6.jar:6.2.6]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-10T03:11:09.252+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        d1_0.doctor_id 
    from
        doctors d1_0 
    join
        users d1_1 
            on d1_0.doctor_id=d1_1.id 
    where
        d1_1.email=? 
    limit
        ?
2025-06-10T03:11:09.265+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version 
    from
        departments d1_0 
    where
        d1_0.id=?
2025-06-10T03:11:09.400+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    insert 
    into
        users
        (address, created_at, date_of_birth, email, full_name, hashed_password, phone_number, status, updated_at, version, user_type) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, 'DOCTOR')
2025-06-10T03:11:09.409+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    insert 
    into
        doctors
        (department_id, medical_license_number, specialization, doctor_id) 
    values
        (?, ?, ?, ?)
2025-06-10T03:11:09.414+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    insert 
    into
        working_hours
        (day_of_week, doctor_id) 
    values
        (?, ?)
2025-06-10T03:11:09.420+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    insert 
    into
        time_intervals
        (end_time, start_time, working_hours_id) 
    values
        (?, ?, ?)
2025-06-10T03:11:09.426+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    insert 
    into
        working_hours
        (day_of_week, doctor_id) 
    values
        (?, ?)
2025-06-10T03:11:09.431+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    insert 
    into
        time_intervals
        (end_time, start_time, working_hours_id) 
    values
        (?, ?, ?)
2025-06-10T03:11:09.436+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    insert 
    into
        working_hours
        (day_of_week, doctor_id) 
    values
        (?, ?)
2025-06-10T03:11:09.442+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    insert 
    into
        time_intervals
        (end_time, start_time, working_hours_id) 
    values
        (?, ?, ?)
2025-06-10T03:11:09.446+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    insert 
    into
        working_hours
        (day_of_week, doctor_id) 
    values
        (?, ?)
2025-06-10T03:11:09.450+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    insert 
    into
        time_intervals
        (end_time, start_time, working_hours_id) 
    values
        (?, ?, ?)
2025-06-10T03:11:09.455+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    insert 
    into
        working_hours
        (day_of_week, doctor_id) 
    values
        (?, ?)
2025-06-10T03:11:09.462+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    insert 
    into
        time_intervals
        (end_time, start_time, working_hours_id) 
    values
        (?, ?, ?)
2025-06-10T03:11:09.468+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    insert 
    into
        working_hours
        (day_of_week, doctor_id) 
    values
        (?, ?)
2025-06-10T03:11:09.475+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    insert 
    into
        time_intervals
        (end_time, start_time, working_hours_id) 
    values
        (?, ?, ?)
2025-06-10T03:11:09.480+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    insert 
    into
        working_hours
        (day_of_week, doctor_id) 
    values
        (?, ?)
2025-06-10T03:11:09.485+02:00 DEBUG 21416 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    insert 
    into
        time_intervals
        (end_time, start_time, working_hours_id) 
    values
        (?, ?, ?)
2025-06-10T03:11:59.726+02:00 DEBUG 6604 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table clients 
       modify column membership_level enum ('BASIC','INSURANCE_COVERED','PREMIUM','VIP') not null
2025-06-10T03:11:59.870+02:00 DEBUG 6604 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table doctors 
       modify column specialization enum ('CARDIOLOGY','NEUROLOGY','ONCOLOGY','ORTHOPEDICS','PEDIATRICS') not null
2025-06-10T03:11:59.933+02:00 DEBUG 6604 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table users 
       modify column status enum ('ACTIVE','INACTIVE','SUSPENDED') not null
2025-06-10T03:12:02.338+02:00  WARN 6604 --- [back] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-10T03:12:02.363+02:00  WARN 6604 --- [back] [restartedMain] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-06-10T03:12:37.853+02:00 DEBUG 6604 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version 
    from
        departments d1_0
2025-06-10T03:13:42.636+02:00 DEBUG 6604 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        d1_0.doctor_id 
    from
        doctors d1_0 
    join
        users d1_1 
            on d1_0.doctor_id=d1_1.id 
    where
        d1_1.email=? 
    limit
        ?
2025-06-10T03:13:42.665+02:00 DEBUG 6604 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version 
    from
        departments d1_0 
    where
        d1_0.id=?
2025-06-10T03:13:42.848+02:00 DEBUG 6604 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    insert 
    into
        users
        (address, created_at, date_of_birth, email, full_name, hashed_password, phone_number, status, updated_at, version, user_type) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, 'DOCTOR')
2025-06-10T03:13:42.877+02:00 DEBUG 6604 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    insert 
    into
        doctors
        (department_id, medical_license_number, specialization, doctor_id) 
    values
        (?, ?, ?, ?)
2025-06-10T03:13:42.887+02:00 DEBUG 6604 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    insert 
    into
        working_hours
        (day_of_week, doctor_id) 
    values
        (?, ?)
2025-06-10T03:13:42.901+02:00 DEBUG 6604 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    insert 
    into
        time_intervals
        (end_time, start_time, working_hours_id) 
    values
        (?, ?, ?)
2025-06-10T03:13:42.913+02:00 DEBUG 6604 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    insert 
    into
        working_hours
        (day_of_week, doctor_id) 
    values
        (?, ?)
2025-06-10T03:13:42.917+02:00 DEBUG 6604 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    insert 
    into
        time_intervals
        (end_time, start_time, working_hours_id) 
    values
        (?, ?, ?)
2025-06-10T03:13:42.926+02:00 DEBUG 6604 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    insert 
    into
        working_hours
        (day_of_week, doctor_id) 
    values
        (?, ?)
2025-06-10T03:13:42.932+02:00 DEBUG 6604 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    insert 
    into
        time_intervals
        (end_time, start_time, working_hours_id) 
    values
        (?, ?, ?)
2025-06-10T03:13:42.940+02:00 DEBUG 6604 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    insert 
    into
        working_hours
        (day_of_week, doctor_id) 
    values
        (?, ?)
2025-06-10T03:13:42.945+02:00 DEBUG 6604 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    insert 
    into
        time_intervals
        (end_time, start_time, working_hours_id) 
    values
        (?, ?, ?)
2025-06-10T03:13:42.951+02:00 DEBUG 6604 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    insert 
    into
        working_hours
        (day_of_week, doctor_id) 
    values
        (?, ?)
2025-06-10T03:13:42.960+02:00 DEBUG 6604 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    insert 
    into
        time_intervals
        (end_time, start_time, working_hours_id) 
    values
        (?, ?, ?)
2025-06-10T03:13:42.966+02:00 DEBUG 6604 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    insert 
    into
        working_hours
        (day_of_week, doctor_id) 
    values
        (?, ?)
2025-06-10T03:13:42.973+02:00 DEBUG 6604 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    insert 
    into
        time_intervals
        (end_time, start_time, working_hours_id) 
    values
        (?, ?, ?)
2025-06-10T03:13:42.978+02:00 DEBUG 6604 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    insert 
    into
        working_hours
        (day_of_week, doctor_id) 
    values
        (?, ?)
2025-06-10T03:13:42.983+02:00 DEBUG 6604 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    insert 
    into
        time_intervals
        (end_time, start_time, working_hours_id) 
    values
        (?, ?, ?)
2025-06-10T03:13:44.431+02:00 DEBUG 6604 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-10T03:13:44.595+02:00 DEBUG 6604 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-10T03:13:49.522+02:00 DEBUG 6604 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-10T03:13:49.529+02:00 DEBUG 6604 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version 
    from
        departments d1_0 
    where
        d1_0.id=?
2025-06-10T03:13:49.540+02:00 DEBUG 6604 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        d1_0.doctor_id,
        d1_1.address,
        d1_1.created_at,
        d1_1.date_of_birth,
        d1_1.email,
        d1_1.full_name,
        d1_1.hashed_password,
        d1_1.phone_number,
        d1_1.status,
        d1_1.updated_at,
        d1_1.version,
        d1_0.department_id,
        d1_0.medical_license_number,
        d1_0.specialization 
    from
        doctors d1_0 
    join
        users d1_1 
            on d1_0.doctor_id=d1_1.id 
    where
        d1_1.email=?
2025-06-10T03:13:49.545+02:00 DEBUG 6604 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version 
    from
        departments d1_0 
    where
        d1_0.id=?
2025-06-10T03:13:49.553+02:00 DEBUG 6604 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        a1_0.doctor_id,
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.doctor_id=?
2025-06-10T03:13:49.567+02:00 DEBUG 6604 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        pg1_0.prescribed_by_id,
        pg1_0.id,
        pg1_0.created_at,
        pg1_0.dosage,
        pg1_0.end_date,
        pg1_0.frequency,
        pg1_0.medication_name,
        pg1_0.notes,
        pg1_0.prescribed_to_id,
        pg1_0.start_date,
        pg1_0.status,
        pg1_0.updated_at,
        pg1_0.version 
    from
        medical_prescriptions pg1_0 
    where
        pg1_0.prescribed_by_id=?
2025-06-10T03:13:49.576+02:00 DEBUG 6604 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        fr1_0.written_to_id,
        fr1_0.id,
        fr1_0.author_id,
        a1_0.client_id,
        a1_1.address,
        a1_1.created_at,
        a1_1.date_of_birth,
        a1_1.email,
        a1_1.full_name,
        a1_1.hashed_password,
        a1_1.phone_number,
        a1_1.status,
        a1_1.updated_at,
        a1_1.version,
        a1_0.blood_type,
        a1_0.contact_name,
        a1_0.contact_phone,
        a1_0.relationship,
        a1_0.membership_level,
        fr1_0.comment,
        fr1_0.created_at,
        fr1_0.rating,
        fr1_0.type 
    from
        feedbacks fr1_0 
    left join
        clients a1_0 
            on a1_0.client_id=fr1_0.author_id 
    left join
        users a1_1 
            on a1_0.client_id=a1_1.id 
    where
        fr1_0.written_to_id=?
2025-06-10T03:13:49.604+02:00 DEBUG 6604 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        wh1_0.doctor_id,
        wh1_0.id,
        wh1_0.day_of_week 
    from
        working_hours wh1_0 
    where
        wh1_0.doctor_id=?
2025-06-10T03:13:49.616+02:00 DEBUG 6604 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        ti1_0.working_hours_id,
        ti1_0.id,
        ti1_0.end_time,
        ti1_0.start_time 
    from
        time_intervals ti1_0 
    where
        ti1_0.working_hours_id=?
2025-06-10T03:13:49.626+02:00 DEBUG 6604 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        ti1_0.working_hours_id,
        ti1_0.id,
        ti1_0.end_time,
        ti1_0.start_time 
    from
        time_intervals ti1_0 
    where
        ti1_0.working_hours_id=?
2025-06-10T03:13:49.631+02:00 DEBUG 6604 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        ti1_0.working_hours_id,
        ti1_0.id,
        ti1_0.end_time,
        ti1_0.start_time 
    from
        time_intervals ti1_0 
    where
        ti1_0.working_hours_id=?
2025-06-10T03:13:49.636+02:00 DEBUG 6604 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        ti1_0.working_hours_id,
        ti1_0.id,
        ti1_0.end_time,
        ti1_0.start_time 
    from
        time_intervals ti1_0 
    where
        ti1_0.working_hours_id=?
2025-06-10T03:13:49.641+02:00 DEBUG 6604 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        ti1_0.working_hours_id,
        ti1_0.id,
        ti1_0.end_time,
        ti1_0.start_time 
    from
        time_intervals ti1_0 
    where
        ti1_0.working_hours_id=?
2025-06-10T03:13:49.645+02:00 DEBUG 6604 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        ti1_0.working_hours_id,
        ti1_0.id,
        ti1_0.end_time,
        ti1_0.start_time 
    from
        time_intervals ti1_0 
    where
        ti1_0.working_hours_id=?
2025-06-10T03:13:49.649+02:00 DEBUG 6604 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        ti1_0.working_hours_id,
        ti1_0.id,
        ti1_0.end_time,
        ti1_0.start_time 
    from
        time_intervals ti1_0 
    where
        ti1_0.working_hours_id=?
2025-06-10T03:13:49.675+02:00 DEBUG 6604 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-10T03:13:49.683+02:00 DEBUG 6604 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version 
    from
        departments d1_0 
    where
        d1_0.id=?
2025-06-10T03:13:49.714+02:00 DEBUG 6604 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        count(distinct a1_0.client_id) 
    from
        appointments a1_0 
    where
        a1_0.doctor_id=?
2025-06-10T03:26:05.691+02:00 DEBUG 16476 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table clients 
       modify column membership_level enum ('BASIC','INSURANCE_COVERED','PREMIUM','VIP') not null
2025-06-10T03:26:05.893+02:00 DEBUG 16476 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table doctors 
       modify column specialization enum ('CARDIOLOGY','NEUROLOGY','ONCOLOGY','ORTHOPEDICS','PEDIATRICS') not null
2025-06-10T03:26:06.045+02:00 DEBUG 16476 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table users 
       modify column status enum ('ACTIVE','INACTIVE','SUSPENDED') not null
2025-06-10T03:26:11.014+02:00  WARN 16476 --- [back] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-10T03:26:11.052+02:00  WARN 16476 --- [back] [restartedMain] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-06-10T03:28:19.112+02:00 DEBUG 16476 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        c1_0.client_id 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_1.email=? 
    limit
        ?
2025-06-10T03:28:19.183+02:00  WARN 16476 --- [back] [http-nio-8080-exec-2] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [com.tfg.back.exceptions.user.UserAlreadyExistsException: User with email idslhddnn@gmail.com already exists]
2025-06-10T03:28:49.442+02:00 DEBUG 16476 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        c1_0.client_id 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_1.email=? 
    limit
        ?
2025-06-10T03:28:49.659+02:00 DEBUG 16476 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    insert 
    into
        users
        (address, created_at, date_of_birth, email, full_name, hashed_password, phone_number, status, updated_at, version, user_type) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, 'CLIENT')
2025-06-10T03:28:50.359+02:00  WARN 16476 --- [back] [http-nio-8080-exec-4] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Error: 1062, SQLState: 23000
2025-06-10T03:28:50.360+02:00 ERROR 16476 --- [back] [http-nio-8080-exec-4] o.h.engine.jdbc.spi.SqlExceptionHelper   : Duplicate entry 'rababsalah2004@gmail.com' for key 'users.UK6dotkott2kjsp8vw4d0m25fb7'
2025-06-10T03:28:50.380+02:00 ERROR 16476 --- [back] [http-nio-8080-exec-4] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DataIntegrityViolationException: could not execute statement [Duplicate entry 'rababsalah2004@gmail.com' for key 'users.UK6dotkott2kjsp8vw4d0m25fb7'] [insert into users (address,created_at,date_of_birth,email,full_name,hashed_password,phone_number,status,updated_at,version,user_type) values (?,?,?,?,?,?,?,?,?,?,'CLIENT')]; SQL [insert into users (address,created_at,date_of_birth,email,full_name,hashed_password,phone_number,status,updated_at,version,user_type) values (?,?,?,?,?,?,?,?,?,?,'CLIENT')]; constraint [users.UK6dotkott2kjsp8vw4d0m25fb7]] with root cause

java.sql.SQLIntegrityConstraintViolationException: Duplicate entry 'rababsalah2004@gmail.com' for key 'users.UK6dotkott2kjsp8vw4d0m25fb7'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:109) ~[mysql-connector-j-9.1.0.jar:9.1.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:114) ~[mysql-connector-j-9.1.0.jar:9.1.0]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:988) ~[mysql-connector-j-9.1.0.jar:9.1.0]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1166) ~[mysql-connector-j-9.1.0.jar:9.1.0]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1101) ~[mysql-connector-j-9.1.0.jar:9.1.0]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1467) ~[mysql-connector-j-9.1.0.jar:9.1.0]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1084) ~[mysql-connector-j-9.1.0.jar:9.1.0]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61) ~[HikariCP-5.1.0.jar:na]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java) ~[HikariCP-5.1.0.jar:na]
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194) ~[hibernate-core-6.6.13.Final.jar:6.6.13.Final]
	at org.hibernate.id.insert.GetGeneratedKeysDelegate.performMutation(GetGeneratedKeysDelegate.java:116) ~[hibernate-core-6.6.13.Final.jar:6.6.13.Final]
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorStandard.performNonBatchedOperations(MutationExecutorStandard.java:233) ~[hibernate-core-6.6.13.Final.jar:6.6.13.Final]
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:55) ~[hibernate-core-6.6.13.Final.jar:6.6.13.Final]
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.doStaticInserts(InsertCoordinatorStandard.java:194) ~[hibernate-core-6.6.13.Final.jar:6.6.13.Final]
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.coordinateInsert(InsertCoordinatorStandard.java:132) ~[hibernate-core-6.6.13.Final.jar:6.6.13.Final]
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.insert(InsertCoordinatorStandard.java:95) ~[hibernate-core-6.6.13.Final.jar:6.6.13.Final]
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:85) ~[hibernate-core-6.6.13.Final.jar:6.6.13.Final]
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:682) ~[hibernate-core-6.6.13.Final.jar:6.6.13.Final]
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:293) ~[hibernate-core-6.6.13.Final.jar:6.6.13.Final]
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:274) ~[hibernate-core-6.6.13.Final.jar:6.6.13.Final]
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:324) ~[hibernate-core-6.6.13.Final.jar:6.6.13.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:393) ~[hibernate-core-6.6.13.Final.jar:6.6.13.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:307) ~[hibernate-core-6.6.13.Final.jar:6.6.13.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:223) ~[hibernate-core-6.6.13.Final.jar:6.6.13.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:136) ~[hibernate-core-6.6.13.Final.jar:6.6.13.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:177) ~[hibernate-core-6.6.13.Final.jar:6.6.13.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:95) ~[hibernate-core-6.6.13.Final.jar:6.6.13.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:79) ~[hibernate-core-6.6.13.Final.jar:6.6.13.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55) ~[hibernate-core-6.6.13.Final.jar:6.6.13.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.6.13.Final.jar:6.6.13.Final]
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:761) ~[hibernate-core-6.6.13.Final.jar:6.6.13.Final]
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:745) ~[hibernate-core-6.6.13.Final.jar:6.6.13.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364) ~[spring-orm-6.2.6.jar:6.2.6]
	at jdk.proxy4/jdk.proxy4.$Proxy161.persist(Unknown Source) ~[na:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320) ~[spring-orm-6.2.6.jar:6.2.6]
	at jdk.proxy4/jdk.proxy4.$Proxy161.persist(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:636) ~[spring-data-jpa-3.4.5.jar:3.4.5]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.6.jar:6.2.6]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.4.5.jar:3.4.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.4.5.jar:3.4.5]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.4.5.jar:3.4.5]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515) ~[spring-data-commons-3.4.5.jar:3.4.5]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284) ~[spring-data-commons-3.4.5.jar:3.4.5]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731) ~[spring-data-commons-3.4.5.jar:3.4.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.6.jar:6.2.6]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174) ~[spring-data-commons-3.4.5.jar:3.4.5]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149) ~[spring-data-commons-3.4.5.jar:3.4.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.6.jar:6.2.6]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69) ~[spring-data-commons-3.4.5.jar:3.4.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.6.jar:6.2.6]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.6.jar:6.2.6]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.6.jar:6.2.6]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.6.jar:6.2.6]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.2.6.jar:6.2.6]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.6.jar:6.2.6]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.4.5.jar:3.4.5]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.6.jar:6.2.6]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.2.6.jar:6.2.6]
	at jdk.proxy4/jdk.proxy4.$Proxy174.save(Unknown Source) ~[na:na]
	at com.tfg.back.service.serviceImpl.ClientServiceImpl.createClient(ClientServiceImpl.java:75) ~[classes/:na]
	at com.tfg.back.controller.ClientController.registerClient(ClientController.java:51) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.6.jar:6.2.6]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.6.jar:6.2.6]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.6.jar:6.2.6]
	at org.springframework.validation.beanvalidation.MethodValidationInterceptor.invoke(MethodValidationInterceptor.java:174) ~[spring-context-6.2.6.jar:6.2.6]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.6.jar:6.2.6]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728) ~[spring-aop-6.2.6.jar:6.2.6]
	at com.tfg.back.controller.ClientController$$SpringCGLIB$$0.registerClient(<generated>) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.2.6.jar:6.2.6]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986) ~[spring-webmvc-6.2.6.jar:6.2.6]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891) ~[spring-webmvc-6.2.6.jar:6.2.6]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.2.6.jar:6.2.6]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.2.6.jar:6.2.6]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.2.6.jar:6.2.6]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.2.6.jar:6.2.6]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.2.6.jar:6.2.6]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.40.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.2.6.jar:6.2.6]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.40.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110) ~[spring-web-6.2.6.jar:6.2.6]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at com.tfg.back.configuration.JwtRequestFilter.doFilterInternal(JwtRequestFilter.java:54) ~[classes/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243) ~[spring-webmvc-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238) ~[spring-security-config-6.4.5.jar:6.4.5]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278) ~[spring-web-6.2.6.jar:6.2.6]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-10T03:29:56.521+02:00 DEBUG 16476 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        c1_0.client_id 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_1.email=? 
    limit
        ?
2025-06-10T03:29:56.650+02:00 DEBUG 16476 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    insert 
    into
        users
        (address, created_at, date_of_birth, email, full_name, hashed_password, phone_number, status, updated_at, version, user_type) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, 'CLIENT')
2025-06-10T03:29:56.668+02:00 DEBUG 16476 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    insert 
    into
        clients
        (blood_type, contact_name, contact_phone, relationship, membership_level, client_id) 
    values
        (?, ?, ?, ?, ?, ?)
2025-06-10T03:29:56.713+02:00 DEBUG 16476 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    insert 
    into
        notifications
        (date, message, seen, title, type, user_id) 
    values
        (?, ?, ?, ?, ?, ?)
2025-06-10T03:29:57.987+02:00 DEBUG 16476 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-10T03:29:58.140+02:00 DEBUG 16476 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-10T03:31:19.457+02:00 DEBUG 16476 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-10T03:31:19.600+02:00 DEBUG 16476 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-10T03:31:23.323+02:00 DEBUG 16476 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-10T03:31:23.342+02:00 DEBUG 16476 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_1.email=?
2025-06-10T03:31:23.353+02:00 DEBUG 16476 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        a1_0.client_id,
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=?
2025-06-10T03:31:23.366+02:00 DEBUG 16476 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        pr1_0.prescribed_to_id,
        pr1_0.id,
        pr1_0.created_at,
        pr1_0.dosage,
        pr1_0.end_date,
        pr1_0.frequency,
        pr1_0.medication_name,
        pr1_0.notes,
        pr1_0.prescribed_by_id,
        pr1_0.start_date,
        pr1_0.status,
        pr1_0.updated_at,
        pr1_0.version 
    from
        medical_prescriptions pr1_0 
    where
        pr1_0.prescribed_to_id=?
2025-06-10T03:31:23.373+02:00 DEBUG 16476 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        lrr1_0.patient_id,
        lrr1_0.id,
        lrr1_0.created_at,
        lrr1_0.notes,
        lrr1_0.ordered_by_id,
        lrr1_0.reference_range,
        lrr1_0.result_date,
        lrr1_0.result_value,
        lrr1_0.status,
        lrr1_0.test_name,
        lrr1_0.unit,
        lrr1_0.updated_at,
        lrr1_0.version 
    from
        lab_results lrr1_0 
    where
        lrr1_0.patient_id=?
2025-06-10T03:31:23.381+02:00 DEBUG 16476 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        fw1_0.author_id,
        fw1_0.id,
        fw1_0.comment,
        fw1_0.created_at,
        fw1_0.rating,
        fw1_0.type,
        wt1_0.doctor_id,
        wt1_1.address,
        wt1_1.created_at,
        wt1_1.date_of_birth,
        wt1_1.email,
        wt1_1.full_name,
        wt1_1.hashed_password,
        wt1_1.phone_number,
        wt1_1.status,
        wt1_1.updated_at,
        wt1_1.version,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        wt1_0.medical_license_number,
        wt1_0.specialization 
    from
        feedbacks fw1_0 
    left join
        doctors wt1_0 
            on wt1_0.doctor_id=fw1_0.written_to_id 
    left join
        users wt1_1 
            on wt1_0.doctor_id=wt1_1.id 
    left join
        departments d1_0 
            on d1_0.id=wt1_0.department_id 
    where
        fw1_0.author_id=?
2025-06-10T03:31:23.416+02:00 DEBUG 16476 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        n1_0.user_id,
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type 
    from
        notifications n1_0 
    where
        n1_0.user_id=?
2025-06-10T03:32:39.359+02:00 DEBUG 16476 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-10T03:32:39.388+02:00 DEBUG 16476 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_1.email=?
2025-06-10T03:32:39.398+02:00 DEBUG 16476 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        a1_0.client_id,
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=?
2025-06-10T03:32:39.406+02:00 DEBUG 16476 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        pr1_0.prescribed_to_id,
        pr1_0.id,
        pr1_0.created_at,
        pr1_0.dosage,
        pr1_0.end_date,
        pr1_0.frequency,
        pr1_0.medication_name,
        pr1_0.notes,
        pr1_0.prescribed_by_id,
        pr1_0.start_date,
        pr1_0.status,
        pr1_0.updated_at,
        pr1_0.version 
    from
        medical_prescriptions pr1_0 
    where
        pr1_0.prescribed_to_id=?
2025-06-10T03:32:39.412+02:00 DEBUG 16476 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        lrr1_0.patient_id,
        lrr1_0.id,
        lrr1_0.created_at,
        lrr1_0.notes,
        lrr1_0.ordered_by_id,
        lrr1_0.reference_range,
        lrr1_0.result_date,
        lrr1_0.result_value,
        lrr1_0.status,
        lrr1_0.test_name,
        lrr1_0.unit,
        lrr1_0.updated_at,
        lrr1_0.version 
    from
        lab_results lrr1_0 
    where
        lrr1_0.patient_id=?
2025-06-10T03:32:39.417+02:00 DEBUG 16476 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        fw1_0.author_id,
        fw1_0.id,
        fw1_0.comment,
        fw1_0.created_at,
        fw1_0.rating,
        fw1_0.type,
        wt1_0.doctor_id,
        wt1_1.address,
        wt1_1.created_at,
        wt1_1.date_of_birth,
        wt1_1.email,
        wt1_1.full_name,
        wt1_1.hashed_password,
        wt1_1.phone_number,
        wt1_1.status,
        wt1_1.updated_at,
        wt1_1.version,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        wt1_0.medical_license_number,
        wt1_0.specialization 
    from
        feedbacks fw1_0 
    left join
        doctors wt1_0 
            on wt1_0.doctor_id=fw1_0.written_to_id 
    left join
        users wt1_1 
            on wt1_0.doctor_id=wt1_1.id 
    left join
        departments d1_0 
            on d1_0.id=wt1_0.department_id 
    where
        fw1_0.author_id=?
2025-06-10T03:32:39.425+02:00 DEBUG 16476 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        n1_0.user_id,
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type 
    from
        notifications n1_0 
    where
        n1_0.user_id=?
2025-06-10T03:51:20.191+02:00 DEBUG 5916 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table clients 
       modify column membership_level enum ('BASIC','INSURANCE_COVERED','PREMIUM','VIP') not null
2025-06-10T03:51:20.290+02:00 DEBUG 5916 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table doctors 
       modify column specialization enum ('CARDIOLOGY','NEUROLOGY','ONCOLOGY','ORTHOPEDICS','PEDIATRICS') not null
2025-06-10T03:51:20.348+02:00 DEBUG 5916 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table users 
       modify column status enum ('ACTIVE','INACTIVE','SUSPENDED') not null
2025-06-10T03:51:23.033+02:00  WARN 5916 --- [back] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-10T03:51:23.062+02:00  WARN 5916 --- [back] [restartedMain] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-06-10T03:51:43.991+02:00 DEBUG 5916 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version 
    from
        departments d1_0
2025-06-10T03:51:44.045+02:00 DEBUG 5916 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-10T03:51:44.098+02:00 DEBUG 5916 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_1.email=?
2025-06-10T03:51:44.109+02:00 DEBUG 5916 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        a1_0.client_id,
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=?
2025-06-10T03:51:44.126+02:00 DEBUG 5916 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        pr1_0.prescribed_to_id,
        pr1_0.id,
        pr1_0.created_at,
        pr1_0.dosage,
        pr1_0.end_date,
        pr1_0.frequency,
        pr1_0.medication_name,
        pr1_0.notes,
        pr1_0.prescribed_by_id,
        pr1_0.start_date,
        pr1_0.status,
        pr1_0.updated_at,
        pr1_0.version 
    from
        medical_prescriptions pr1_0 
    where
        pr1_0.prescribed_to_id=?
2025-06-10T03:51:44.136+02:00 DEBUG 5916 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        lrr1_0.patient_id,
        lrr1_0.id,
        lrr1_0.created_at,
        lrr1_0.notes,
        lrr1_0.ordered_by_id,
        lrr1_0.reference_range,
        lrr1_0.result_date,
        lrr1_0.result_value,
        lrr1_0.status,
        lrr1_0.test_name,
        lrr1_0.unit,
        lrr1_0.updated_at,
        lrr1_0.version 
    from
        lab_results lrr1_0 
    where
        lrr1_0.patient_id=?
2025-06-10T03:51:44.147+02:00 DEBUG 5916 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        fw1_0.author_id,
        fw1_0.id,
        fw1_0.comment,
        fw1_0.created_at,
        fw1_0.rating,
        fw1_0.type,
        wt1_0.doctor_id,
        wt1_1.address,
        wt1_1.created_at,
        wt1_1.date_of_birth,
        wt1_1.email,
        wt1_1.full_name,
        wt1_1.hashed_password,
        wt1_1.phone_number,
        wt1_1.status,
        wt1_1.updated_at,
        wt1_1.version,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        wt1_0.medical_license_number,
        wt1_0.specialization 
    from
        feedbacks fw1_0 
    left join
        doctors wt1_0 
            on wt1_0.doctor_id=fw1_0.written_to_id 
    left join
        users wt1_1 
            on wt1_0.doctor_id=wt1_1.id 
    left join
        departments d1_0 
            on d1_0.id=wt1_0.department_id 
    where
        fw1_0.author_id=?
2025-06-10T03:51:44.194+02:00 DEBUG 5916 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        n1_0.user_id,
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type 
    from
        notifications n1_0 
    where
        n1_0.user_id=?
2025-06-10T03:51:52.919+02:00 DEBUG 5916 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-10T03:51:52.992+02:00 DEBUG 5916 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version 
    from
        departments d1_0 
    where
        d1_0.id=?
2025-06-10T03:51:53.012+02:00 DEBUG 5916 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        d1_0.doctor_id,
        d1_1.address,
        d1_1.created_at,
        d1_1.date_of_birth,
        d1_1.email,
        d1_1.full_name,
        d1_1.hashed_password,
        d1_1.phone_number,
        d1_1.status,
        d1_1.updated_at,
        d1_1.version,
        d1_0.department_id,
        d1_0.medical_license_number,
        d1_0.specialization 
    from
        doctors d1_0 
    join
        users d1_1 
            on d1_0.doctor_id=d1_1.id 
    join
        working_hours wh1_0 
            on d1_0.doctor_id=wh1_0.doctor_id 
    where
        d1_0.department_id=? 
        and wh1_0.day_of_week=?
2025-06-10T03:51:57.935+02:00 DEBUG 5916 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-10T03:51:57.967+02:00 DEBUG 5916 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        d1_0.doctor_id,
        d1_1.address,
        d1_1.created_at,
        d1_1.date_of_birth,
        d1_1.email,
        d1_1.full_name,
        d1_1.hashed_password,
        d1_1.phone_number,
        d1_1.status,
        d1_1.updated_at,
        d1_1.version,
        d2_0.id,
        d2_0.contact_number,
        d2_0.created_at,
        d2_0.description,
        d2_0.head_doctor_id,
        d2_0.location,
        d2_0.name,
        d2_0.updated_at,
        d2_0.version,
        d1_0.medical_license_number,
        d1_0.specialization 
    from
        doctors d1_0 
    join
        users d1_1 
            on d1_0.doctor_id=d1_1.id 
    left join
        departments d2_0 
            on d2_0.id=d1_0.department_id 
    where
        d1_0.doctor_id=?
2025-06-10T03:51:57.996+02:00 DEBUG 5916 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        wh1_0.doctor_id,
        wh1_0.id,
        wh1_0.day_of_week 
    from
        working_hours wh1_0 
    where
        wh1_0.doctor_id=?
2025-06-10T03:51:58.011+02:00 DEBUG 5916 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ti1_0.working_hours_id,
        ti1_0.id,
        ti1_0.end_time,
        ti1_0.start_time 
    from
        time_intervals ti1_0 
    where
        ti1_0.working_hours_id=?
2025-06-10T03:51:58.056+02:00 DEBUG 5916 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.doctor_id=? 
        and date(a1_0.appointment_date_time)=?
2025-06-10T03:52:12.657+02:00 DEBUG 5916 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-10T03:52:12.682+02:00 DEBUG 5916 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        doctors d1_0 
            on d1_0.doctor_id=a1_0.doctor_id 
    where
        d1_0.doctor_id=? 
        and a1_0.appointment_date_time=? 
    limit
        ?
2025-06-10T03:52:12.705+02:00 DEBUG 5916 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        d1_0.doctor_id,
        d1_1.address,
        d1_1.created_at,
        d1_1.date_of_birth,
        d1_1.email,
        d1_1.full_name,
        d1_1.hashed_password,
        d1_1.phone_number,
        d1_1.status,
        d1_1.updated_at,
        d1_1.version,
        d2_0.id,
        d2_0.contact_number,
        d2_0.created_at,
        d2_0.description,
        d2_0.head_doctor_id,
        d2_0.location,
        d2_0.name,
        d2_0.updated_at,
        d2_0.version,
        d1_0.medical_license_number,
        d1_0.specialization 
    from
        doctors d1_0 
    join
        users d1_1 
            on d1_0.doctor_id=d1_1.id 
    left join
        departments d2_0 
            on d2_0.id=d1_0.department_id 
    where
        d1_0.doctor_id=?
2025-06-10T03:52:12.718+02:00 DEBUG 5916 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_1.email=?
2025-06-10T03:52:12.752+02:00 DEBUG 5916 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    insert 
    into
        notifications
        (date, message, seen, title, type, user_id) 
    values
        (?, ?, ?, ?, ?, ?)
2025-06-10T03:52:12.831+02:00 DEBUG 5916 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    insert 
    into
        appointments
        (appointment_date_time, client_id, created_at, department_id, diagnosis, doctor_id, reason, status, type, updated_at, version) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-06-10T03:52:16.311+02:00 DEBUG 5916 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-10T03:52:16.329+02:00 DEBUG 5916 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_1.email=?
2025-06-10T03:52:16.340+02:00 DEBUG 5916 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        a1_0.client_id,
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=?
2025-06-10T03:52:16.353+02:00 DEBUG 5916 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        d1_0.doctor_id,
        d1_1.address,
        d1_1.created_at,
        d1_1.date_of_birth,
        d1_1.email,
        d1_1.full_name,
        d1_1.hashed_password,
        d1_1.phone_number,
        d1_1.status,
        d1_1.updated_at,
        d1_1.version,
        d2_0.id,
        d2_0.contact_number,
        d2_0.created_at,
        d2_0.description,
        d2_0.head_doctor_id,
        d2_0.location,
        d2_0.name,
        d2_0.updated_at,
        d2_0.version,
        d1_0.medical_license_number,
        d1_0.specialization 
    from
        doctors d1_0 
    join
        users d1_1 
            on d1_0.doctor_id=d1_1.id 
    left join
        departments d2_0 
            on d2_0.id=d1_0.department_id 
    where
        d1_0.doctor_id=?
2025-06-10T03:52:16.365+02:00 DEBUG 5916 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        pr1_0.prescribed_to_id,
        pr1_0.id,
        pr1_0.created_at,
        pr1_0.dosage,
        pr1_0.end_date,
        pr1_0.frequency,
        pr1_0.medication_name,
        pr1_0.notes,
        pr1_0.prescribed_by_id,
        pr1_0.start_date,
        pr1_0.status,
        pr1_0.updated_at,
        pr1_0.version 
    from
        medical_prescriptions pr1_0 
    where
        pr1_0.prescribed_to_id=?
2025-06-10T03:52:16.373+02:00 DEBUG 5916 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        lrr1_0.patient_id,
        lrr1_0.id,
        lrr1_0.created_at,
        lrr1_0.notes,
        lrr1_0.ordered_by_id,
        lrr1_0.reference_range,
        lrr1_0.result_date,
        lrr1_0.result_value,
        lrr1_0.status,
        lrr1_0.test_name,
        lrr1_0.unit,
        lrr1_0.updated_at,
        lrr1_0.version 
    from
        lab_results lrr1_0 
    where
        lrr1_0.patient_id=?
2025-06-10T03:52:16.380+02:00 DEBUG 5916 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        fw1_0.author_id,
        fw1_0.id,
        fw1_0.comment,
        fw1_0.created_at,
        fw1_0.rating,
        fw1_0.type,
        wt1_0.doctor_id,
        wt1_1.address,
        wt1_1.created_at,
        wt1_1.date_of_birth,
        wt1_1.email,
        wt1_1.full_name,
        wt1_1.hashed_password,
        wt1_1.phone_number,
        wt1_1.status,
        wt1_1.updated_at,
        wt1_1.version,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        wt1_0.medical_license_number,
        wt1_0.specialization 
    from
        feedbacks fw1_0 
    left join
        doctors wt1_0 
            on wt1_0.doctor_id=fw1_0.written_to_id 
    left join
        users wt1_1 
            on wt1_0.doctor_id=wt1_1.id 
    left join
        departments d1_0 
            on d1_0.id=wt1_0.department_id 
    where
        fw1_0.author_id=?
2025-06-10T03:52:16.396+02:00 DEBUG 5916 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        n1_0.user_id,
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type 
    from
        notifications n1_0 
    where
        n1_0.user_id=?
2025-06-10T03:52:49.557+02:00 DEBUG 5916 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-10T03:52:49.583+02:00 DEBUG 5916 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_1.email=?
2025-06-10T03:52:49.595+02:00 DEBUG 5916 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        a1_0.client_id,
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=?
2025-06-10T03:52:49.617+02:00 DEBUG 5916 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        d1_0.doctor_id,
        d1_1.address,
        d1_1.created_at,
        d1_1.date_of_birth,
        d1_1.email,
        d1_1.full_name,
        d1_1.hashed_password,
        d1_1.phone_number,
        d1_1.status,
        d1_1.updated_at,
        d1_1.version,
        d2_0.id,
        d2_0.contact_number,
        d2_0.created_at,
        d2_0.description,
        d2_0.head_doctor_id,
        d2_0.location,
        d2_0.name,
        d2_0.updated_at,
        d2_0.version,
        d1_0.medical_license_number,
        d1_0.specialization 
    from
        doctors d1_0 
    join
        users d1_1 
            on d1_0.doctor_id=d1_1.id 
    left join
        departments d2_0 
            on d2_0.id=d1_0.department_id 
    where
        d1_0.doctor_id=?
2025-06-10T03:52:49.639+02:00 DEBUG 5916 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        pr1_0.prescribed_to_id,
        pr1_0.id,
        pr1_0.created_at,
        pr1_0.dosage,
        pr1_0.end_date,
        pr1_0.frequency,
        pr1_0.medication_name,
        pr1_0.notes,
        pr1_0.prescribed_by_id,
        pr1_0.start_date,
        pr1_0.status,
        pr1_0.updated_at,
        pr1_0.version 
    from
        medical_prescriptions pr1_0 
    where
        pr1_0.prescribed_to_id=?
2025-06-10T03:52:49.655+02:00 DEBUG 5916 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        lrr1_0.patient_id,
        lrr1_0.id,
        lrr1_0.created_at,
        lrr1_0.notes,
        lrr1_0.ordered_by_id,
        lrr1_0.reference_range,
        lrr1_0.result_date,
        lrr1_0.result_value,
        lrr1_0.status,
        lrr1_0.test_name,
        lrr1_0.unit,
        lrr1_0.updated_at,
        lrr1_0.version 
    from
        lab_results lrr1_0 
    where
        lrr1_0.patient_id=?
2025-06-10T03:52:49.688+02:00 DEBUG 5916 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        fw1_0.author_id,
        fw1_0.id,
        fw1_0.comment,
        fw1_0.created_at,
        fw1_0.rating,
        fw1_0.type,
        wt1_0.doctor_id,
        wt1_1.address,
        wt1_1.created_at,
        wt1_1.date_of_birth,
        wt1_1.email,
        wt1_1.full_name,
        wt1_1.hashed_password,
        wt1_1.phone_number,
        wt1_1.status,
        wt1_1.updated_at,
        wt1_1.version,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        wt1_0.medical_license_number,
        wt1_0.specialization 
    from
        feedbacks fw1_0 
    left join
        doctors wt1_0 
            on wt1_0.doctor_id=fw1_0.written_to_id 
    left join
        users wt1_1 
            on wt1_0.doctor_id=wt1_1.id 
    left join
        departments d1_0 
            on d1_0.id=wt1_0.department_id 
    where
        fw1_0.author_id=?
2025-06-10T03:52:49.711+02:00 DEBUG 5916 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        n1_0.user_id,
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type 
    from
        notifications n1_0 
    where
        n1_0.user_id=?
2025-06-10T03:52:51.794+02:00 DEBUG 5916 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-10T03:52:51.873+02:00 DEBUG 5916 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_1.email=?
2025-06-10T03:52:51.896+02:00 DEBUG 5916 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        a1_0.client_id,
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=?
2025-06-10T03:52:51.910+02:00 DEBUG 5916 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        d1_0.doctor_id,
        d1_1.address,
        d1_1.created_at,
        d1_1.date_of_birth,
        d1_1.email,
        d1_1.full_name,
        d1_1.hashed_password,
        d1_1.phone_number,
        d1_1.status,
        d1_1.updated_at,
        d1_1.version,
        d2_0.id,
        d2_0.contact_number,
        d2_0.created_at,
        d2_0.description,
        d2_0.head_doctor_id,
        d2_0.location,
        d2_0.name,
        d2_0.updated_at,
        d2_0.version,
        d1_0.medical_license_number,
        d1_0.specialization 
    from
        doctors d1_0 
    join
        users d1_1 
            on d1_0.doctor_id=d1_1.id 
    left join
        departments d2_0 
            on d2_0.id=d1_0.department_id 
    where
        d1_0.doctor_id=?
2025-06-10T03:52:51.927+02:00 DEBUG 5916 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        pr1_0.prescribed_to_id,
        pr1_0.id,
        pr1_0.created_at,
        pr1_0.dosage,
        pr1_0.end_date,
        pr1_0.frequency,
        pr1_0.medication_name,
        pr1_0.notes,
        pr1_0.prescribed_by_id,
        pr1_0.start_date,
        pr1_0.status,
        pr1_0.updated_at,
        pr1_0.version 
    from
        medical_prescriptions pr1_0 
    where
        pr1_0.prescribed_to_id=?
2025-06-10T03:52:51.941+02:00 DEBUG 5916 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        lrr1_0.patient_id,
        lrr1_0.id,
        lrr1_0.created_at,
        lrr1_0.notes,
        lrr1_0.ordered_by_id,
        lrr1_0.reference_range,
        lrr1_0.result_date,
        lrr1_0.result_value,
        lrr1_0.status,
        lrr1_0.test_name,
        lrr1_0.unit,
        lrr1_0.updated_at,
        lrr1_0.version 
    from
        lab_results lrr1_0 
    where
        lrr1_0.patient_id=?
2025-06-10T03:52:51.957+02:00 DEBUG 5916 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        fw1_0.author_id,
        fw1_0.id,
        fw1_0.comment,
        fw1_0.created_at,
        fw1_0.rating,
        fw1_0.type,
        wt1_0.doctor_id,
        wt1_1.address,
        wt1_1.created_at,
        wt1_1.date_of_birth,
        wt1_1.email,
        wt1_1.full_name,
        wt1_1.hashed_password,
        wt1_1.phone_number,
        wt1_1.status,
        wt1_1.updated_at,
        wt1_1.version,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        wt1_0.medical_license_number,
        wt1_0.specialization 
    from
        feedbacks fw1_0 
    left join
        doctors wt1_0 
            on wt1_0.doctor_id=fw1_0.written_to_id 
    left join
        users wt1_1 
            on wt1_0.doctor_id=wt1_1.id 
    left join
        departments d1_0 
            on d1_0.id=wt1_0.department_id 
    where
        fw1_0.author_id=?
2025-06-10T03:52:51.974+02:00 DEBUG 5916 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        n1_0.user_id,
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type 
    from
        notifications n1_0 
    where
        n1_0.user_id=?
2025-06-10T03:53:42.910+02:00 DEBUG 5916 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-10T03:53:56.975+02:00 DEBUG 5916 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-10T03:54:05.824+02:00 DEBUG 5916 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-10T03:54:35.949+02:00 DEBUG 5916 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-10T03:54:46.362+02:00 DEBUG 5916 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-10T03:54:46.510+02:00 DEBUG 5916 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    update
        users 
    set
        address=?,
        date_of_birth=?,
        email=?,
        full_name=?,
        hashed_password=?,
        phone_number=?,
        status=?,
        updated_at=?,
        version=? 
    where
        id=? 
        and version=?
2025-06-10T03:54:58.502+02:00 DEBUG 5916 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-10T03:55:50.157+02:00 DEBUG 11372 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table clients 
       modify column membership_level enum ('BASIC','INSURANCE_COVERED','PREMIUM','VIP') not null
2025-06-10T03:55:50.200+02:00 DEBUG 11372 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table doctors 
       modify column specialization enum ('CARDIOLOGY','NEUROLOGY','ONCOLOGY','ORTHOPEDICS','PEDIATRICS') not null
2025-06-10T03:55:50.236+02:00 DEBUG 11372 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table users 
       modify column status enum ('ACTIVE','INACTIVE','SUSPENDED') not null
2025-06-10T03:55:52.442+02:00  WARN 11372 --- [back] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-10T03:55:52.468+02:00  WARN 11372 --- [back] [restartedMain] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-06-10T03:56:06.732+02:00 DEBUG 11372 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-10T03:58:11.541+02:00 DEBUG 20036 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table clients 
       modify column membership_level enum ('BASIC','INSURANCE_COVERED','PREMIUM','VIP') not null
2025-06-10T03:58:11.714+02:00 DEBUG 20036 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table doctors 
       modify column specialization enum ('CARDIOLOGY','NEUROLOGY','ONCOLOGY','ORTHOPEDICS','PEDIATRICS') not null
2025-06-10T03:58:11.752+02:00 DEBUG 20036 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table users 
       modify column status enum ('ACTIVE','INACTIVE','SUSPENDED') not null
2025-06-10T03:58:14.488+02:00  WARN 20036 --- [back] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-10T03:58:14.510+02:00  WARN 20036 --- [back] [restartedMain] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-06-10T03:58:25.420+02:00 DEBUG 20036 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-10T03:58:48.208+02:00 DEBUG 20036 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-10T03:58:48.361+02:00 DEBUG 20036 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    update
        users 
    set
        address=?,
        date_of_birth=?,
        email=?,
        full_name=?,
        hashed_password=?,
        phone_number=?,
        status=?,
        updated_at=?,
        version=? 
    where
        id=? 
        and version=?
2025-06-10T03:59:00.427+02:00 DEBUG 20036 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-10T03:59:12.407+02:00 DEBUG 20036 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-10T03:59:23.955+02:00 DEBUG 20036 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-10T03:59:54.630+02:00 DEBUG 20036 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        c1_0.client_id 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_1.email=? 
    limit
        ?
2025-06-10T03:59:54.783+02:00 DEBUG 20036 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    insert 
    into
        users
        (address, created_at, date_of_birth, email, full_name, hashed_password, phone_number, status, updated_at, version, user_type) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, 'CLIENT')
2025-06-10T03:59:54.805+02:00 DEBUG 20036 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    insert 
    into
        clients
        (blood_type, contact_name, contact_phone, relationship, membership_level, client_id) 
    values
        (?, ?, ?, ?, ?, ?)
2025-06-10T03:59:54.837+02:00 DEBUG 20036 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    insert 
    into
        notifications
        (date, message, seen, title, type, user_id) 
    values
        (?, ?, ?, ?, ?, ?)
2025-06-10T03:59:55.749+02:00 DEBUG 20036 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-10T03:59:55.884+02:00 DEBUG 20036 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-10T04:00:00.579+02:00 DEBUG 20036 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-10T04:00:00.594+02:00 DEBUG 20036 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_1.email=?
2025-06-10T04:00:00.609+02:00 DEBUG 20036 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        a1_0.client_id,
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=?
2025-06-10T04:00:00.619+02:00 DEBUG 20036 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        pr1_0.prescribed_to_id,
        pr1_0.id,
        pr1_0.created_at,
        pr1_0.dosage,
        pr1_0.end_date,
        pr1_0.frequency,
        pr1_0.medication_name,
        pr1_0.notes,
        pr1_0.prescribed_by_id,
        pr1_0.start_date,
        pr1_0.status,
        pr1_0.updated_at,
        pr1_0.version 
    from
        medical_prescriptions pr1_0 
    where
        pr1_0.prescribed_to_id=?
2025-06-10T04:00:00.625+02:00 DEBUG 20036 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        lrr1_0.patient_id,
        lrr1_0.id,
        lrr1_0.created_at,
        lrr1_0.notes,
        lrr1_0.ordered_by_id,
        lrr1_0.reference_range,
        lrr1_0.result_date,
        lrr1_0.result_value,
        lrr1_0.status,
        lrr1_0.test_name,
        lrr1_0.unit,
        lrr1_0.updated_at,
        lrr1_0.version 
    from
        lab_results lrr1_0 
    where
        lrr1_0.patient_id=?
2025-06-10T04:00:00.631+02:00 DEBUG 20036 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        fw1_0.author_id,
        fw1_0.id,
        fw1_0.comment,
        fw1_0.created_at,
        fw1_0.rating,
        fw1_0.type,
        wt1_0.doctor_id,
        wt1_1.address,
        wt1_1.created_at,
        wt1_1.date_of_birth,
        wt1_1.email,
        wt1_1.full_name,
        wt1_1.hashed_password,
        wt1_1.phone_number,
        wt1_1.status,
        wt1_1.updated_at,
        wt1_1.version,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        wt1_0.medical_license_number,
        wt1_0.specialization 
    from
        feedbacks fw1_0 
    left join
        doctors wt1_0 
            on wt1_0.doctor_id=fw1_0.written_to_id 
    left join
        users wt1_1 
            on wt1_0.doctor_id=wt1_1.id 
    left join
        departments d1_0 
            on d1_0.id=wt1_0.department_id 
    where
        fw1_0.author_id=?
2025-06-10T04:00:00.662+02:00 DEBUG 20036 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        n1_0.user_id,
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type 
    from
        notifications n1_0 
    where
        n1_0.user_id=?
2025-06-10T04:00:06.897+02:00 DEBUG 20036 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-10T04:00:06.904+02:00 DEBUG 20036 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version 
    from
        departments d1_0
2025-06-10T04:00:06.926+02:00 DEBUG 20036 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_1.email=?
2025-06-10T04:00:06.935+02:00 DEBUG 20036 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        a1_0.client_id,
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=?
2025-06-10T04:00:06.943+02:00 DEBUG 20036 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        pr1_0.prescribed_to_id,
        pr1_0.id,
        pr1_0.created_at,
        pr1_0.dosage,
        pr1_0.end_date,
        pr1_0.frequency,
        pr1_0.medication_name,
        pr1_0.notes,
        pr1_0.prescribed_by_id,
        pr1_0.start_date,
        pr1_0.status,
        pr1_0.updated_at,
        pr1_0.version 
    from
        medical_prescriptions pr1_0 
    where
        pr1_0.prescribed_to_id=?
2025-06-10T04:00:06.950+02:00 DEBUG 20036 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        lrr1_0.patient_id,
        lrr1_0.id,
        lrr1_0.created_at,
        lrr1_0.notes,
        lrr1_0.ordered_by_id,
        lrr1_0.reference_range,
        lrr1_0.result_date,
        lrr1_0.result_value,
        lrr1_0.status,
        lrr1_0.test_name,
        lrr1_0.unit,
        lrr1_0.updated_at,
        lrr1_0.version 
    from
        lab_results lrr1_0 
    where
        lrr1_0.patient_id=?
2025-06-10T04:00:06.960+02:00 DEBUG 20036 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        fw1_0.author_id,
        fw1_0.id,
        fw1_0.comment,
        fw1_0.created_at,
        fw1_0.rating,
        fw1_0.type,
        wt1_0.doctor_id,
        wt1_1.address,
        wt1_1.created_at,
        wt1_1.date_of_birth,
        wt1_1.email,
        wt1_1.full_name,
        wt1_1.hashed_password,
        wt1_1.phone_number,
        wt1_1.status,
        wt1_1.updated_at,
        wt1_1.version,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        wt1_0.medical_license_number,
        wt1_0.specialization 
    from
        feedbacks fw1_0 
    left join
        doctors wt1_0 
            on wt1_0.doctor_id=fw1_0.written_to_id 
    left join
        users wt1_1 
            on wt1_0.doctor_id=wt1_1.id 
    left join
        departments d1_0 
            on d1_0.id=wt1_0.department_id 
    where
        fw1_0.author_id=?
2025-06-10T04:00:06.975+02:00 DEBUG 20036 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        n1_0.user_id,
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type 
    from
        notifications n1_0 
    where
        n1_0.user_id=?
2025-06-10T04:00:12.129+02:00 DEBUG 20036 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-10T04:00:12.155+02:00 DEBUG 20036 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version 
    from
        departments d1_0 
    where
        d1_0.id=?
2025-06-10T04:00:12.176+02:00 DEBUG 20036 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        d1_0.doctor_id,
        d1_1.address,
        d1_1.created_at,
        d1_1.date_of_birth,
        d1_1.email,
        d1_1.full_name,
        d1_1.hashed_password,
        d1_1.phone_number,
        d1_1.status,
        d1_1.updated_at,
        d1_1.version,
        d1_0.department_id,
        d1_0.medical_license_number,
        d1_0.specialization 
    from
        doctors d1_0 
    join
        users d1_1 
            on d1_0.doctor_id=d1_1.id 
    join
        working_hours wh1_0 
            on d1_0.doctor_id=wh1_0.doctor_id 
    where
        d1_0.department_id=? 
        and wh1_0.day_of_week=?
2025-06-10T04:00:16.384+02:00 DEBUG 20036 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-10T04:00:16.415+02:00 DEBUG 20036 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        d1_0.doctor_id,
        d1_1.address,
        d1_1.created_at,
        d1_1.date_of_birth,
        d1_1.email,
        d1_1.full_name,
        d1_1.hashed_password,
        d1_1.phone_number,
        d1_1.status,
        d1_1.updated_at,
        d1_1.version,
        d2_0.id,
        d2_0.contact_number,
        d2_0.created_at,
        d2_0.description,
        d2_0.head_doctor_id,
        d2_0.location,
        d2_0.name,
        d2_0.updated_at,
        d2_0.version,
        d1_0.medical_license_number,
        d1_0.specialization 
    from
        doctors d1_0 
    join
        users d1_1 
            on d1_0.doctor_id=d1_1.id 
    left join
        departments d2_0 
            on d2_0.id=d1_0.department_id 
    where
        d1_0.doctor_id=?
2025-06-10T04:00:16.432+02:00 DEBUG 20036 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        wh1_0.doctor_id,
        wh1_0.id,
        wh1_0.day_of_week 
    from
        working_hours wh1_0 
    where
        wh1_0.doctor_id=?
2025-06-10T04:00:16.442+02:00 DEBUG 20036 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        ti1_0.working_hours_id,
        ti1_0.id,
        ti1_0.end_time,
        ti1_0.start_time 
    from
        time_intervals ti1_0 
    where
        ti1_0.working_hours_id=?
2025-06-10T04:00:16.465+02:00 DEBUG 20036 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.doctor_id=? 
        and date(a1_0.appointment_date_time)=?
2025-06-10T04:00:28.541+02:00 DEBUG 20036 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-10T04:00:28.560+02:00 DEBUG 20036 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        doctors d1_0 
            on d1_0.doctor_id=a1_0.doctor_id 
    where
        d1_0.doctor_id=? 
        and a1_0.appointment_date_time=? 
    limit
        ?
2025-06-10T04:00:28.570+02:00 DEBUG 20036 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        d1_0.doctor_id,
        d1_1.address,
        d1_1.created_at,
        d1_1.date_of_birth,
        d1_1.email,
        d1_1.full_name,
        d1_1.hashed_password,
        d1_1.phone_number,
        d1_1.status,
        d1_1.updated_at,
        d1_1.version,
        d2_0.id,
        d2_0.contact_number,
        d2_0.created_at,
        d2_0.description,
        d2_0.head_doctor_id,
        d2_0.location,
        d2_0.name,
        d2_0.updated_at,
        d2_0.version,
        d1_0.medical_license_number,
        d1_0.specialization 
    from
        doctors d1_0 
    join
        users d1_1 
            on d1_0.doctor_id=d1_1.id 
    left join
        departments d2_0 
            on d2_0.id=d1_0.department_id 
    where
        d1_0.doctor_id=?
2025-06-10T04:00:28.587+02:00 DEBUG 20036 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_1.email=?
2025-06-10T04:00:28.596+02:00 DEBUG 20036 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    insert 
    into
        notifications
        (date, message, seen, title, type, user_id) 
    values
        (?, ?, ?, ?, ?, ?)
2025-06-10T04:00:28.616+02:00 DEBUG 20036 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    insert 
    into
        appointments
        (appointment_date_time, client_id, created_at, department_id, diagnosis, doctor_id, reason, status, type, updated_at, version) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-06-10T04:00:31.612+02:00 DEBUG 20036 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-10T04:00:31.628+02:00 DEBUG 20036 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_1.email=?
2025-06-10T04:00:31.639+02:00 DEBUG 20036 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        a1_0.client_id,
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=?
2025-06-10T04:00:31.646+02:00 DEBUG 20036 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        d1_0.doctor_id,
        d1_1.address,
        d1_1.created_at,
        d1_1.date_of_birth,
        d1_1.email,
        d1_1.full_name,
        d1_1.hashed_password,
        d1_1.phone_number,
        d1_1.status,
        d1_1.updated_at,
        d1_1.version,
        d2_0.id,
        d2_0.contact_number,
        d2_0.created_at,
        d2_0.description,
        d2_0.head_doctor_id,
        d2_0.location,
        d2_0.name,
        d2_0.updated_at,
        d2_0.version,
        d1_0.medical_license_number,
        d1_0.specialization 
    from
        doctors d1_0 
    join
        users d1_1 
            on d1_0.doctor_id=d1_1.id 
    left join
        departments d2_0 
            on d2_0.id=d1_0.department_id 
    where
        d1_0.doctor_id=?
2025-06-10T04:00:31.655+02:00 DEBUG 20036 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        pr1_0.prescribed_to_id,
        pr1_0.id,
        pr1_0.created_at,
        pr1_0.dosage,
        pr1_0.end_date,
        pr1_0.frequency,
        pr1_0.medication_name,
        pr1_0.notes,
        pr1_0.prescribed_by_id,
        pr1_0.start_date,
        pr1_0.status,
        pr1_0.updated_at,
        pr1_0.version 
    from
        medical_prescriptions pr1_0 
    where
        pr1_0.prescribed_to_id=?
2025-06-10T04:00:31.662+02:00 DEBUG 20036 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        lrr1_0.patient_id,
        lrr1_0.id,
        lrr1_0.created_at,
        lrr1_0.notes,
        lrr1_0.ordered_by_id,
        lrr1_0.reference_range,
        lrr1_0.result_date,
        lrr1_0.result_value,
        lrr1_0.status,
        lrr1_0.test_name,
        lrr1_0.unit,
        lrr1_0.updated_at,
        lrr1_0.version 
    from
        lab_results lrr1_0 
    where
        lrr1_0.patient_id=?
2025-06-10T04:00:31.668+02:00 DEBUG 20036 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        fw1_0.author_id,
        fw1_0.id,
        fw1_0.comment,
        fw1_0.created_at,
        fw1_0.rating,
        fw1_0.type,
        wt1_0.doctor_id,
        wt1_1.address,
        wt1_1.created_at,
        wt1_1.date_of_birth,
        wt1_1.email,
        wt1_1.full_name,
        wt1_1.hashed_password,
        wt1_1.phone_number,
        wt1_1.status,
        wt1_1.updated_at,
        wt1_1.version,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        wt1_0.medical_license_number,
        wt1_0.specialization 
    from
        feedbacks fw1_0 
    left join
        doctors wt1_0 
            on wt1_0.doctor_id=fw1_0.written_to_id 
    left join
        users wt1_1 
            on wt1_0.doctor_id=wt1_1.id 
    left join
        departments d1_0 
            on d1_0.id=wt1_0.department_id 
    where
        fw1_0.author_id=?
2025-06-10T04:00:31.677+02:00 DEBUG 20036 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        n1_0.user_id,
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type 
    from
        notifications n1_0 
    where
        n1_0.user_id=?
2025-06-10T04:03:42.271+02:00 DEBUG 22632 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table clients 
       modify column membership_level enum ('BASIC','INSURANCE_COVERED','PREMIUM','VIP') not null
2025-06-10T04:03:42.429+02:00 DEBUG 22632 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table doctors 
       modify column specialization enum ('CARDIOLOGY','NEUROLOGY','ONCOLOGY','ORTHOPEDICS','PEDIATRICS') not null
2025-06-10T04:03:42.471+02:00 DEBUG 22632 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table users 
       modify column status enum ('ACTIVE','INACTIVE','SUSPENDED') not null
2025-06-10T04:03:45.521+02:00  WARN 22632 --- [back] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-10T04:03:45.556+02:00  WARN 22632 --- [back] [restartedMain] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-06-10T04:04:45.457+02:00 DEBUG 22632 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version 
    from
        departments d1_0
2025-06-10T04:04:45.505+02:00 DEBUG 22632 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-10T04:04:45.561+02:00 DEBUG 22632 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_1.email=?
2025-06-10T04:04:45.572+02:00 DEBUG 22632 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        a1_0.client_id,
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=?
2025-06-10T04:04:45.604+02:00 DEBUG 22632 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        d1_0.doctor_id,
        d1_1.address,
        d1_1.created_at,
        d1_1.date_of_birth,
        d1_1.email,
        d1_1.full_name,
        d1_1.hashed_password,
        d1_1.phone_number,
        d1_1.status,
        d1_1.updated_at,
        d1_1.version,
        d2_0.id,
        d2_0.contact_number,
        d2_0.created_at,
        d2_0.description,
        d2_0.head_doctor_id,
        d2_0.location,
        d2_0.name,
        d2_0.updated_at,
        d2_0.version,
        d1_0.medical_license_number,
        d1_0.specialization 
    from
        doctors d1_0 
    join
        users d1_1 
            on d1_0.doctor_id=d1_1.id 
    left join
        departments d2_0 
            on d2_0.id=d1_0.department_id 
    where
        d1_0.doctor_id=?
2025-06-10T04:04:45.616+02:00 DEBUG 22632 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        pr1_0.prescribed_to_id,
        pr1_0.id,
        pr1_0.created_at,
        pr1_0.dosage,
        pr1_0.end_date,
        pr1_0.frequency,
        pr1_0.medication_name,
        pr1_0.notes,
        pr1_0.prescribed_by_id,
        pr1_0.start_date,
        pr1_0.status,
        pr1_0.updated_at,
        pr1_0.version 
    from
        medical_prescriptions pr1_0 
    where
        pr1_0.prescribed_to_id=?
2025-06-10T04:04:45.626+02:00 DEBUG 22632 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        lrr1_0.patient_id,
        lrr1_0.id,
        lrr1_0.created_at,
        lrr1_0.notes,
        lrr1_0.ordered_by_id,
        lrr1_0.reference_range,
        lrr1_0.result_date,
        lrr1_0.result_value,
        lrr1_0.status,
        lrr1_0.test_name,
        lrr1_0.unit,
        lrr1_0.updated_at,
        lrr1_0.version 
    from
        lab_results lrr1_0 
    where
        lrr1_0.patient_id=?
2025-06-10T04:04:45.637+02:00 DEBUG 22632 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        fw1_0.author_id,
        fw1_0.id,
        fw1_0.comment,
        fw1_0.created_at,
        fw1_0.rating,
        fw1_0.type,
        wt1_0.doctor_id,
        wt1_1.address,
        wt1_1.created_at,
        wt1_1.date_of_birth,
        wt1_1.email,
        wt1_1.full_name,
        wt1_1.hashed_password,
        wt1_1.phone_number,
        wt1_1.status,
        wt1_1.updated_at,
        wt1_1.version,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        wt1_0.medical_license_number,
        wt1_0.specialization 
    from
        feedbacks fw1_0 
    left join
        doctors wt1_0 
            on wt1_0.doctor_id=fw1_0.written_to_id 
    left join
        users wt1_1 
            on wt1_0.doctor_id=wt1_1.id 
    left join
        departments d1_0 
            on d1_0.id=wt1_0.department_id 
    where
        fw1_0.author_id=?
2025-06-10T04:04:45.679+02:00 DEBUG 22632 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        n1_0.user_id,
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type 
    from
        notifications n1_0 
    where
        n1_0.user_id=?
2025-06-10T04:04:51.706+02:00 DEBUG 22632 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-10T04:04:51.771+02:00 DEBUG 22632 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version 
    from
        departments d1_0 
    where
        d1_0.id=?
2025-06-10T04:04:51.794+02:00 DEBUG 22632 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        d1_0.doctor_id,
        d1_1.address,
        d1_1.created_at,
        d1_1.date_of_birth,
        d1_1.email,
        d1_1.full_name,
        d1_1.hashed_password,
        d1_1.phone_number,
        d1_1.status,
        d1_1.updated_at,
        d1_1.version,
        d1_0.department_id,
        d1_0.medical_license_number,
        d1_0.specialization 
    from
        doctors d1_0 
    join
        users d1_1 
            on d1_0.doctor_id=d1_1.id 
    join
        working_hours wh1_0 
            on d1_0.doctor_id=wh1_0.doctor_id 
    where
        d1_0.department_id=? 
        and wh1_0.day_of_week=?
2025-06-10T04:04:55.161+02:00 DEBUG 22632 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-10T04:04:55.180+02:00 DEBUG 22632 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        d1_0.doctor_id,
        d1_1.address,
        d1_1.created_at,
        d1_1.date_of_birth,
        d1_1.email,
        d1_1.full_name,
        d1_1.hashed_password,
        d1_1.phone_number,
        d1_1.status,
        d1_1.updated_at,
        d1_1.version,
        d2_0.id,
        d2_0.contact_number,
        d2_0.created_at,
        d2_0.description,
        d2_0.head_doctor_id,
        d2_0.location,
        d2_0.name,
        d2_0.updated_at,
        d2_0.version,
        d1_0.medical_license_number,
        d1_0.specialization 
    from
        doctors d1_0 
    join
        users d1_1 
            on d1_0.doctor_id=d1_1.id 
    left join
        departments d2_0 
            on d2_0.id=d1_0.department_id 
    where
        d1_0.doctor_id=?
2025-06-10T04:04:55.195+02:00 DEBUG 22632 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        wh1_0.doctor_id,
        wh1_0.id,
        wh1_0.day_of_week 
    from
        working_hours wh1_0 
    where
        wh1_0.doctor_id=?
2025-06-10T04:04:55.202+02:00 DEBUG 22632 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        ti1_0.working_hours_id,
        ti1_0.id,
        ti1_0.end_time,
        ti1_0.start_time 
    from
        time_intervals ti1_0 
    where
        ti1_0.working_hours_id=?
2025-06-10T04:04:55.218+02:00 DEBUG 22632 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.doctor_id=? 
        and date(a1_0.appointment_date_time)=?
2025-06-10T04:04:59.422+02:00 DEBUG 22632 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-10T04:04:59.440+02:00 DEBUG 22632 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        d1_0.doctor_id,
        d1_1.address,
        d1_1.created_at,
        d1_1.date_of_birth,
        d1_1.email,
        d1_1.full_name,
        d1_1.hashed_password,
        d1_1.phone_number,
        d1_1.status,
        d1_1.updated_at,
        d1_1.version,
        d2_0.id,
        d2_0.contact_number,
        d2_0.created_at,
        d2_0.description,
        d2_0.head_doctor_id,
        d2_0.location,
        d2_0.name,
        d2_0.updated_at,
        d2_0.version,
        d1_0.medical_license_number,
        d1_0.specialization 
    from
        doctors d1_0 
    join
        users d1_1 
            on d1_0.doctor_id=d1_1.id 
    left join
        departments d2_0 
            on d2_0.id=d1_0.department_id 
    where
        d1_0.doctor_id=?
2025-06-10T04:04:59.453+02:00 DEBUG 22632 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        wh1_0.doctor_id,
        wh1_0.id,
        wh1_0.day_of_week 
    from
        working_hours wh1_0 
    where
        wh1_0.doctor_id=?
2025-06-10T04:04:59.459+02:00 DEBUG 22632 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        ti1_0.working_hours_id,
        ti1_0.id,
        ti1_0.end_time,
        ti1_0.start_time 
    from
        time_intervals ti1_0 
    where
        ti1_0.working_hours_id=?
2025-06-10T04:04:59.468+02:00 DEBUG 22632 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.doctor_id=? 
        and date(a1_0.appointment_date_time)=?
2025-06-10T04:05:17.438+02:00 DEBUG 22632 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-10T04:05:17.463+02:00 DEBUG 22632 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        a1_0.id 
    from
        appointments a1_0 
    left join
        doctors d1_0 
            on d1_0.doctor_id=a1_0.doctor_id 
    where
        d1_0.doctor_id=? 
        and a1_0.appointment_date_time=? 
    limit
        ?
2025-06-10T04:05:17.473+02:00 DEBUG 22632 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        d1_0.doctor_id,
        d1_1.address,
        d1_1.created_at,
        d1_1.date_of_birth,
        d1_1.email,
        d1_1.full_name,
        d1_1.hashed_password,
        d1_1.phone_number,
        d1_1.status,
        d1_1.updated_at,
        d1_1.version,
        d2_0.id,
        d2_0.contact_number,
        d2_0.created_at,
        d2_0.description,
        d2_0.head_doctor_id,
        d2_0.location,
        d2_0.name,
        d2_0.updated_at,
        d2_0.version,
        d1_0.medical_license_number,
        d1_0.specialization 
    from
        doctors d1_0 
    join
        users d1_1 
            on d1_0.doctor_id=d1_1.id 
    left join
        departments d2_0 
            on d2_0.id=d1_0.department_id 
    where
        d1_0.doctor_id=?
2025-06-10T04:05:17.487+02:00 DEBUG 22632 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_1.email=?
2025-06-10T04:05:17.525+02:00 DEBUG 22632 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    insert 
    into
        notifications
        (date, message, seen, title, type, user_id) 
    values
        (?, ?, ?, ?, ?, ?)
2025-06-10T04:05:17.589+02:00 DEBUG 22632 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    insert 
    into
        appointments
        (appointment_date_time, client_id, created_at, department_id, diagnosis, doctor_id, reason, status, type, updated_at, version) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-06-10T04:05:20.767+02:00 DEBUG 22632 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-10T04:05:20.796+02:00 DEBUG 22632 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_1.email=?
2025-06-10T04:05:20.809+02:00 DEBUG 22632 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        a1_0.client_id,
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=?
2025-06-10T04:05:20.824+02:00 DEBUG 22632 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        d1_0.doctor_id,
        d1_1.address,
        d1_1.created_at,
        d1_1.date_of_birth,
        d1_1.email,
        d1_1.full_name,
        d1_1.hashed_password,
        d1_1.phone_number,
        d1_1.status,
        d1_1.updated_at,
        d1_1.version,
        d2_0.id,
        d2_0.contact_number,
        d2_0.created_at,
        d2_0.description,
        d2_0.head_doctor_id,
        d2_0.location,
        d2_0.name,
        d2_0.updated_at,
        d2_0.version,
        d1_0.medical_license_number,
        d1_0.specialization 
    from
        doctors d1_0 
    join
        users d1_1 
            on d1_0.doctor_id=d1_1.id 
    left join
        departments d2_0 
            on d2_0.id=d1_0.department_id 
    where
        d1_0.doctor_id=?
2025-06-10T04:05:20.840+02:00 DEBUG 22632 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        d1_0.doctor_id,
        d1_1.address,
        d1_1.created_at,
        d1_1.date_of_birth,
        d1_1.email,
        d1_1.full_name,
        d1_1.hashed_password,
        d1_1.phone_number,
        d1_1.status,
        d1_1.updated_at,
        d1_1.version,
        d2_0.id,
        d2_0.contact_number,
        d2_0.created_at,
        d2_0.description,
        d2_0.head_doctor_id,
        d2_0.location,
        d2_0.name,
        d2_0.updated_at,
        d2_0.version,
        d1_0.medical_license_number,
        d1_0.specialization 
    from
        doctors d1_0 
    join
        users d1_1 
            on d1_0.doctor_id=d1_1.id 
    left join
        departments d2_0 
            on d2_0.id=d1_0.department_id 
    where
        d1_0.doctor_id=?
2025-06-10T04:05:20.854+02:00 DEBUG 22632 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        pr1_0.prescribed_to_id,
        pr1_0.id,
        pr1_0.created_at,
        pr1_0.dosage,
        pr1_0.end_date,
        pr1_0.frequency,
        pr1_0.medication_name,
        pr1_0.notes,
        pr1_0.prescribed_by_id,
        pr1_0.start_date,
        pr1_0.status,
        pr1_0.updated_at,
        pr1_0.version 
    from
        medical_prescriptions pr1_0 
    where
        pr1_0.prescribed_to_id=?
2025-06-10T04:05:20.862+02:00 DEBUG 22632 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        lrr1_0.patient_id,
        lrr1_0.id,
        lrr1_0.created_at,
        lrr1_0.notes,
        lrr1_0.ordered_by_id,
        lrr1_0.reference_range,
        lrr1_0.result_date,
        lrr1_0.result_value,
        lrr1_0.status,
        lrr1_0.test_name,
        lrr1_0.unit,
        lrr1_0.updated_at,
        lrr1_0.version 
    from
        lab_results lrr1_0 
    where
        lrr1_0.patient_id=?
2025-06-10T04:05:20.870+02:00 DEBUG 22632 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        fw1_0.author_id,
        fw1_0.id,
        fw1_0.comment,
        fw1_0.created_at,
        fw1_0.rating,
        fw1_0.type,
        wt1_0.doctor_id,
        wt1_1.address,
        wt1_1.created_at,
        wt1_1.date_of_birth,
        wt1_1.email,
        wt1_1.full_name,
        wt1_1.hashed_password,
        wt1_1.phone_number,
        wt1_1.status,
        wt1_1.updated_at,
        wt1_1.version,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        wt1_0.medical_license_number,
        wt1_0.specialization 
    from
        feedbacks fw1_0 
    left join
        doctors wt1_0 
            on wt1_0.doctor_id=fw1_0.written_to_id 
    left join
        users wt1_1 
            on wt1_0.doctor_id=wt1_1.id 
    left join
        departments d1_0 
            on d1_0.id=wt1_0.department_id 
    where
        fw1_0.author_id=?
2025-06-10T04:05:20.889+02:00 DEBUG 22632 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        n1_0.user_id,
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type 
    from
        notifications n1_0 
    where
        n1_0.user_id=?
2025-06-10T04:07:42.638+02:00 DEBUG 22632 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-10T04:07:42.661+02:00 DEBUG 22632 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.id=?
2025-06-10T04:07:43.011+02:00 DEBUG 22632 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-10T04:07:43.017+02:00 DEBUG 22632 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        d1_0.doctor_id,
        d1_1.address,
        d1_1.created_at,
        d1_1.date_of_birth,
        d1_1.email,
        d1_1.full_name,
        d1_1.hashed_password,
        d1_1.phone_number,
        d1_1.status,
        d1_1.updated_at,
        d1_1.version,
        d2_0.id,
        d2_0.contact_number,
        d2_0.created_at,
        d2_0.description,
        d2_0.head_doctor_id,
        d2_0.location,
        d2_0.name,
        d2_0.updated_at,
        d2_0.version,
        d1_0.medical_license_number,
        d1_0.specialization 
    from
        doctors d1_0 
    join
        users d1_1 
            on d1_0.doctor_id=d1_1.id 
    left join
        departments d2_0 
            on d2_0.id=d1_0.department_id 
    where
        d1_0.doctor_id=?
