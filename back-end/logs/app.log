2025-06-20T00:48:10.218+02:00 DEBUG 18984 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table clients 
       modify column membership_level enum ('BASIC','INSURANCE_COVERED','PREMIUM','VIP') not null
2025-06-20T00:48:10.763+02:00 DEBUG 18984 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table doctors 
       modify column specialization enum ('CARDIOLOGY','NEUROLOGY','ONCOLOGY','ORTHOPEDICS','PEDIATRICS') not null
2025-06-20T00:48:10.945+02:00 DEBUG 18984 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table users 
       modify column status enum ('ACTIVE','INACTIVE','SUSPENDED') not null
2025-06-20T00:48:14.005+02:00  WARN 18984 --- [back] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-20T00:48:14.027+02:00  WARN 18984 --- [back] [restartedMain] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-06-20T00:48:23.171+02:00 ERROR 18984 --- [back] [http-nio-8080-exec-3] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception

io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-06-19T21:21:34Z. Current time: 2025-06-19T22:48:23Z, a difference of 5209168 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427) ~[jjwt-impl-0.11.5.jar:0.11.5]
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529) ~[jjwt-impl-0.11.5.jar:0.11.5]
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589) ~[jjwt-impl-0.11.5.jar:0.11.5]
	at com.tfg.back.utils.JwtUtil.extractUsername(JwtUtil.java:36) ~[classes/:na]
	at com.tfg.back.configuration.JwtRequestFilter.doFilterInternal(JwtRequestFilter.java:40) ~[classes/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243) ~[spring-webmvc-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238) ~[spring-security-config-6.4.5.jar:6.4.5]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278) ~[spring-web-6.2.6.jar:6.2.6]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-20T00:48:23.341+02:00 ERROR 18984 --- [back] [http-nio-8080-exec-4] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception

io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-06-19T21:21:34Z. Current time: 2025-06-19T22:48:23Z, a difference of 5209338 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427) ~[jjwt-impl-0.11.5.jar:0.11.5]
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529) ~[jjwt-impl-0.11.5.jar:0.11.5]
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589) ~[jjwt-impl-0.11.5.jar:0.11.5]
	at com.tfg.back.utils.JwtUtil.extractUsername(JwtUtil.java:36) ~[classes/:na]
	at com.tfg.back.configuration.JwtRequestFilter.doFilterInternal(JwtRequestFilter.java:40) ~[classes/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243) ~[spring-webmvc-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238) ~[spring-security-config-6.4.5.jar:6.4.5]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278) ~[spring-web-6.2.6.jar:6.2.6]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-20T00:49:05.288+02:00 DEBUG 18984 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        c1_0.client_id 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_1.email=? 
    limit
        ?
2025-06-20T00:49:05.526+02:00 DEBUG 18984 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    insert 
    into
        users
        (address, created_at, date_of_birth, email, full_name, hashed_password, phone_number, status, updated_at, version, user_type, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, 'CLIENT', ?)
2025-06-20T00:49:05.663+02:00 DEBUG 18984 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    insert 
    into
        clients
        (blood_type, contact_name, contact_phone, relationship, membership_level, client_id) 
    values
        (?, ?, ?, ?, ?, ?)
2025-06-20T00:49:05.707+02:00 DEBUG 18984 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    insert 
    into
        notifications
        (date, message, seen, title, type, user_id) 
    values
        (?, ?, ?, ?, ?, ?)
2025-06-20T00:49:07.134+02:00 DEBUG 18984 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-20T00:49:07.336+02:00  WARN 18984 --- [back] [http-nio-8080-exec-6] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [java.lang.IllegalArgumentException: Invalid UUID string: idslhddnssssn@gmail.com]
2025-06-20T00:52:53.295+02:00 DEBUG 11864 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table clients 
       modify column membership_level enum ('BASIC','INSURANCE_COVERED','PREMIUM','VIP') not null
2025-06-20T00:52:53.369+02:00 DEBUG 11864 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table doctors 
       modify column specialization enum ('CARDIOLOGY','NEUROLOGY','ONCOLOGY','ORTHOPEDICS','PEDIATRICS') not null
2025-06-20T00:52:53.419+02:00 DEBUG 11864 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table users 
       modify column status enum ('ACTIVE','INACTIVE','SUSPENDED') not null
2025-06-20T00:52:55.389+02:00  WARN 11864 --- [back] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-20T00:52:55.409+02:00  WARN 11864 --- [back] [restartedMain] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-06-20T00:53:47.825+02:00 DEBUG 11864 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        c1_0.client_id 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_1.email=? 
    limit
        ?
2025-06-20T00:53:48.000+02:00 DEBUG 11864 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    insert 
    into
        users
        (address, created_at, date_of_birth, email, full_name, hashed_password, phone_number, status, updated_at, version, user_type, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, 'CLIENT', ?)
2025-06-20T00:53:48.012+02:00 DEBUG 11864 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    insert 
    into
        clients
        (blood_type, contact_name, contact_phone, relationship, membership_level, client_id) 
    values
        (?, ?, ?, ?, ?, ?)
2025-06-20T00:53:48.034+02:00 DEBUG 11864 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    insert 
    into
        notifications
        (date, message, seen, title, type, user_id) 
    values
        (?, ?, ?, ?, ?, ?)
2025-06-20T00:53:49.654+02:00 DEBUG 11864 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-20T00:55:36.431+02:00 DEBUG 11864 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        c1_0.client_id 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_1.email=? 
    limit
        ?
2025-06-20T00:55:36.551+02:00 DEBUG 11864 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    insert 
    into
        users
        (address, created_at, date_of_birth, email, full_name, hashed_password, phone_number, status, updated_at, version, user_type, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, 'CLIENT', ?)
2025-06-20T00:55:36.556+02:00 DEBUG 11864 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    insert 
    into
        clients
        (blood_type, contact_name, contact_phone, relationship, membership_level, client_id) 
    values
        (?, ?, ?, ?, ?, ?)
2025-06-20T00:55:36.593+02:00 DEBUG 11864 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    insert 
    into
        notifications
        (date, message, seen, title, type, user_id) 
    values
        (?, ?, ?, ?, ?, ?)
2025-06-20T00:55:37.661+02:00 DEBUG 11864 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-20T00:57:10.818+02:00  WARN 11864 --- [back] [http-nio-8080-exec-8] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `java.util.UUID` from String "idslhasdawdawdaddnn@gmail.com": UUID has to be represented by standard 36-char representation]
2025-06-20T01:04:05.210+02:00 DEBUG 17004 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table clients 
       modify column membership_level enum ('BASIC','INSURANCE_COVERED','PREMIUM','VIP') not null
2025-06-20T01:04:05.344+02:00 DEBUG 17004 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table doctors 
       modify column specialization enum ('CARDIOLOGY','NEUROLOGY','ONCOLOGY','ORTHOPEDICS','PEDIATRICS') not null
2025-06-20T01:04:05.401+02:00 DEBUG 17004 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table users 
       modify column status enum ('ACTIVE','INACTIVE','SUSPENDED') not null
2025-06-20T01:04:07.127+02:00  WARN 17004 --- [back] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-20T01:04:07.137+02:00  WARN 17004 --- [back] [restartedMain] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-06-20T01:04:15.476+02:00  WARN 17004 --- [back] [http-nio-8080-exec-2] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `java.util.UUID` from String "idslhasdawdawdaddnn@gmail.com": UUID has to be represented by standard 36-char representation]
2025-06-20T01:05:48.742+02:00 DEBUG 10744 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table clients 
       modify column membership_level enum ('BASIC','INSURANCE_COVERED','PREMIUM','VIP') not null
2025-06-20T01:05:48.892+02:00 DEBUG 10744 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table doctors 
       modify column specialization enum ('CARDIOLOGY','NEUROLOGY','ONCOLOGY','ORTHOPEDICS','PEDIATRICS') not null
2025-06-20T01:05:49.031+02:00 DEBUG 10744 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table users 
       modify column status enum ('ACTIVE','INACTIVE','SUSPENDED') not null
2025-06-20T01:05:50.867+02:00  WARN 10744 --- [back] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-20T01:05:50.886+02:00  WARN 10744 --- [back] [restartedMain] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-06-20T01:05:57.826+02:00  WARN 10744 --- [back] [http-nio-8080-exec-3] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `java.util.UUID` from String "idslhasdawdawdaddnn@gmail.com": UUID has to be represented by standard 36-char representation]
2025-06-20T01:10:42.145+02:00 DEBUG 24128 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table clients 
       modify column membership_level enum ('BASIC','INSURANCE_COVERED','PREMIUM','VIP') not null
2025-06-20T01:10:42.294+02:00 DEBUG 24128 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table doctors 
       modify column specialization enum ('CARDIOLOGY','NEUROLOGY','ONCOLOGY','ORTHOPEDICS','PEDIATRICS') not null
2025-06-20T01:10:42.336+02:00 DEBUG 24128 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table users 
       modify column status enum ('ACTIVE','INACTIVE','SUSPENDED') not null
2025-06-20T01:10:44.059+02:00  WARN 24128 --- [back] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-20T01:10:44.076+02:00  WARN 24128 --- [back] [restartedMain] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-06-20T01:10:48.553+02:00 DEBUG 24128 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-20T01:10:48.770+02:00  WARN 24128 --- [back] [http-nio-8080-exec-2] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [java.lang.IllegalArgumentException: Invalid UUID string: idslhasdawdawdaddnn@gmail.com]
2025-06-20T01:13:46.420+02:00 DEBUG 7032 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table clients 
       modify column membership_level enum ('BASIC','INSURANCE_COVERED','PREMIUM','VIP') not null
2025-06-20T01:13:46.473+02:00 DEBUG 7032 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table doctors 
       modify column specialization enum ('CARDIOLOGY','NEUROLOGY','ONCOLOGY','ORTHOPEDICS','PEDIATRICS') not null
2025-06-20T01:13:46.557+02:00 DEBUG 7032 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table users 
       modify column status enum ('ACTIVE','INACTIVE','SUSPENDED') not null
2025-06-20T01:13:48.329+02:00  WARN 7032 --- [back] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-20T01:13:48.349+02:00  WARN 7032 --- [back] [restartedMain] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-06-20T01:13:51.575+02:00 DEBUG 7032 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-20T01:13:51.747+02:00 DEBUG 7032 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-20T01:13:55.611+02:00 DEBUG 7032 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-20T01:13:55.652+02:00 DEBUG 7032 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_1.email=?
2025-06-20T01:13:55.716+02:00 DEBUG 7032 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-20T01:13:55.744+02:00 DEBUG 7032 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        c1_1.full_name 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_1.email=?
2025-06-20T01:13:55.763+02:00 DEBUG 7032 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    join
        clients c1_0 
            on c1_0.client_id=a1_0.client_id 
    left join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_1.email=? 
        and a1_0.status<>'CANCELLED' 
    order by
        a1_0.appointment_date_time desc 
    limit
        ?
2025-06-20T01:13:55.783+02:00 DEBUG 7032 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    join
        clients pt1_0 
            on pt1_0.client_id=mp1_0.prescribed_to_id 
    left join
        users pt1_1 
            on pt1_0.client_id=pt1_1.id 
    where
        pt1_1.email=? 
    order by
        mp1_0.created_at desc 
    limit
        ?
2025-06-20T01:13:55.795+02:00 DEBUG 7032 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.email=? 
        and not(n1_0.seen) 
    order by
        n1_0.date desc 
    limit
        ?
2025-06-20T01:14:04.902+02:00 DEBUG 7032 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-20T01:14:04.999+02:00 DEBUG 7032 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_1.email=?
2025-06-20T01:14:05.069+02:00 DEBUG 7032 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-20T01:14:05.093+02:00 DEBUG 7032 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        c1_1.full_name 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_1.email=?
2025-06-20T01:14:05.098+02:00 DEBUG 7032 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    join
        clients c1_0 
            on c1_0.client_id=a1_0.client_id 
    left join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_1.email=? 
        and a1_0.status<>'CANCELLED' 
    order by
        a1_0.appointment_date_time desc 
    limit
        ?
2025-06-20T01:14:05.113+02:00 DEBUG 7032 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    join
        clients pt1_0 
            on pt1_0.client_id=mp1_0.prescribed_to_id 
    left join
        users pt1_1 
            on pt1_0.client_id=pt1_1.id 
    where
        pt1_1.email=? 
    order by
        mp1_0.created_at desc 
    limit
        ?
2025-06-20T01:14:05.129+02:00 DEBUG 7032 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.email=? 
        and not(n1_0.seen) 
    order by
        n1_0.date desc 
    limit
        ?
2025-06-20T01:14:07.312+02:00 DEBUG 7032 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-20T01:14:07.349+02:00 DEBUG 7032 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_1.email=?
2025-06-20T01:14:10.541+02:00 DEBUG 7032 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-20T01:14:10.562+02:00 DEBUG 7032 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    left join
        clients c1_0 
            on c1_0.client_id=a1_0.client_id 
    left join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_1.email=?
2025-06-20T01:14:12.456+02:00 DEBUG 7032 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-20T01:14:12.457+02:00 DEBUG 7032 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-20T01:14:12.476+02:00 DEBUG 7032 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    left join
        clients pt1_0 
            on pt1_0.client_id=mp1_0.prescribed_to_id 
    left join
        users pt1_1 
            on pt1_0.client_id=pt1_1.id 
    where
        pt1_1.email=?
2025-06-20T01:14:12.482+02:00 DEBUG 7032 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        lr1_0.id,
        lr1_0.created_at,
        lr1_0.notes,
        lr1_0.ordered_by_id,
        lr1_0.patient_id,
        lr1_0.reference_range,
        lr1_0.result_date,
        lr1_0.result_value,
        lr1_0.status,
        lr1_0.test_name,
        lr1_0.unit,
        lr1_0.updated_at,
        lr1_0.version 
    from
        lab_results lr1_0 
    left join
        clients p1_0 
            on p1_0.client_id=lr1_0.patient_id 
    left join
        users p1_1 
            on p1_0.client_id=p1_1.id 
    where
        p1_1.email=?
2025-06-20T01:14:14.783+02:00 DEBUG 7032 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-20T01:14:14.797+02:00 DEBUG 7032 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.email=?
2025-06-20T01:14:17.368+02:00 DEBUG 7032 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-20T01:14:17.381+02:00 DEBUG 7032 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        fb1_0.id,
        fb1_0.author_id,
        fb1_0.comment,
        fb1_0.created_at,
        fb1_0.rating,
        fb1_0.type,
        fb1_0.written_to_id 
    from
        feedbacks fb1_0 
    join
        clients a1_0 
            on a1_0.client_id=fb1_0.author_id 
    join
        users a1_1 
            on a1_0.client_id=a1_1.id 
    where
        a1_1.email=?
2025-06-20T01:14:43.510+02:00 DEBUG 7032 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-20T01:14:43.537+02:00 DEBUG 7032 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    left join
        clients c1_0 
            on c1_0.client_id=a1_0.client_id 
    left join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_1.email=?
2025-06-20T01:15:34.914+02:00 DEBUG 17492 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table clients 
       modify column membership_level enum ('BASIC','INSURANCE_COVERED','PREMIUM','VIP') not null
2025-06-20T01:15:34.942+02:00 DEBUG 17492 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table doctors 
       modify column specialization enum ('CARDIOLOGY','NEUROLOGY','ONCOLOGY','ORTHOPEDICS','PEDIATRICS') not null
2025-06-20T01:15:35.087+02:00 DEBUG 17492 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table users 
       modify column status enum ('ACTIVE','INACTIVE','SUSPENDED') not null
2025-06-20T01:15:36.784+02:00  WARN 17492 --- [back] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-20T01:15:36.803+02:00  WARN 17492 --- [back] [restartedMain] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-06-20T01:15:52.385+02:00 DEBUG 17492 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-20T01:15:52.498+02:00 DEBUG 17492 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_1.email=?
2025-06-20T01:15:52.606+02:00 DEBUG 17492 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-20T01:15:52.634+02:00 DEBUG 17492 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        c1_1.full_name 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_1.email=?
2025-06-20T01:15:52.661+02:00 DEBUG 17492 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    join
        clients c1_0 
            on c1_0.client_id=a1_0.client_id 
    left join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_1.email=? 
        and a1_0.status<>'CANCELLED' 
    order by
        a1_0.appointment_date_time desc 
    limit
        ?
2025-06-20T01:15:52.685+02:00 DEBUG 17492 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    join
        clients pt1_0 
            on pt1_0.client_id=mp1_0.prescribed_to_id 
    left join
        users pt1_1 
            on pt1_0.client_id=pt1_1.id 
    where
        pt1_1.email=? 
    order by
        mp1_0.created_at desc 
    limit
        ?
2025-06-20T01:15:52.702+02:00 DEBUG 17492 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.email=? 
        and not(n1_0.seen) 
    order by
        n1_0.date desc 
    limit
        ?
2025-06-20T01:15:54.473+02:00 DEBUG 17492 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-20T01:15:54.523+02:00 DEBUG 17492 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    left join
        clients c1_0 
            on c1_0.client_id=a1_0.client_id 
    left join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_1.email=?
2025-06-20T01:24:06.992+02:00 DEBUG 23644 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table clients 
       modify column membership_level enum ('BASIC','INSURANCE_COVERED','PREMIUM','VIP') not null
2025-06-20T01:24:07.070+02:00 DEBUG 23644 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table doctors 
       modify column specialization enum ('CARDIOLOGY','NEUROLOGY','ONCOLOGY','ORTHOPEDICS','PEDIATRICS') not null
2025-06-20T01:24:07.101+02:00 DEBUG 23644 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table users 
       modify column status enum ('ACTIVE','INACTIVE','SUSPENDED') not null
2025-06-20T01:24:08.875+02:00  WARN 23644 --- [back] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-20T01:24:08.892+02:00  WARN 23644 --- [back] [restartedMain] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-06-20T01:24:12.991+02:00 DEBUG 23644 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-20T01:24:13.106+02:00 DEBUG 23644 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_1.email=?
2025-06-20T01:24:25.717+02:00 DEBUG 23644 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-20T01:24:25.850+02:00 DEBUG 23644 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-20T01:24:29.450+02:00 DEBUG 23644 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-20T01:24:29.471+02:00 DEBUG 23644 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_1.email=?
2025-06-20T01:24:29.514+02:00 DEBUG 23644 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-20T01:24:29.541+02:00 DEBUG 23644 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        c1_1.full_name 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_1.email=?
2025-06-20T01:24:29.555+02:00 DEBUG 23644 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    join
        clients c1_0 
            on c1_0.client_id=a1_0.client_id 
    left join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_1.email=? 
        and a1_0.status<>'CANCELLED' 
    order by
        a1_0.appointment_date_time desc 
    limit
        ?
2025-06-20T01:24:29.567+02:00 DEBUG 23644 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    join
        clients pt1_0 
            on pt1_0.client_id=mp1_0.prescribed_to_id 
    left join
        users pt1_1 
            on pt1_0.client_id=pt1_1.id 
    where
        pt1_1.email=? 
    order by
        mp1_0.created_at desc 
    limit
        ?
2025-06-20T01:24:29.578+02:00 DEBUG 23644 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.email=? 
        and not(n1_0.seen) 
    order by
        n1_0.date desc 
    limit
        ?
2025-06-20T01:27:10.816+02:00 DEBUG 3048 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table clients 
       modify column membership_level enum ('BASIC','INSURANCE_COVERED','PREMIUM','VIP') not null
2025-06-20T01:27:10.994+02:00 DEBUG 3048 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table doctors 
       modify column specialization enum ('CARDIOLOGY','NEUROLOGY','ONCOLOGY','ORTHOPEDICS','PEDIATRICS') not null
2025-06-20T01:27:11.036+02:00 DEBUG 3048 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table users 
       modify column status enum ('ACTIVE','INACTIVE','SUSPENDED') not null
2025-06-20T01:27:12.742+02:00  WARN 3048 --- [back] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-20T01:27:12.762+02:00  WARN 3048 --- [back] [restartedMain] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-06-20T01:27:22.125+02:00 DEBUG 3048 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-20T01:27:22.230+02:00 DEBUG 3048 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_1.email=?
2025-06-20T01:27:56.139+02:00 DEBUG 3048 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-20T01:27:56.312+02:00 DEBUG 3048 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-20T01:28:00.806+02:00 DEBUG 3048 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-20T01:28:00.822+02:00 DEBUG 3048 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_1.email=?
2025-06-20T01:28:00.855+02:00 DEBUG 3048 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-20T01:28:00.871+02:00 DEBUG 3048 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        c1_1.full_name 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_1.email=?
2025-06-20T01:28:00.880+02:00 DEBUG 3048 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    join
        clients c1_0 
            on c1_0.client_id=a1_0.client_id 
    left join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_1.email=? 
        and a1_0.status<>'CANCELLED' 
    order by
        a1_0.appointment_date_time desc 
    limit
        ?
2025-06-20T01:28:00.890+02:00 DEBUG 3048 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    join
        clients pt1_0 
            on pt1_0.client_id=mp1_0.prescribed_to_id 
    left join
        users pt1_1 
            on pt1_0.client_id=pt1_1.id 
    where
        pt1_1.email=? 
    order by
        mp1_0.created_at desc 
    limit
        ?
2025-06-20T01:28:00.901+02:00 DEBUG 3048 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.email=? 
        and not(n1_0.seen) 
    order by
        n1_0.date desc 
    limit
        ?
2025-06-20T01:29:59.221+02:00 DEBUG 16944 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table clients 
       modify column membership_level enum ('BASIC','INSURANCE_COVERED','PREMIUM','VIP') not null
2025-06-20T01:29:59.313+02:00 DEBUG 16944 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table doctors 
       modify column specialization enum ('CARDIOLOGY','NEUROLOGY','ONCOLOGY','ORTHOPEDICS','PEDIATRICS') not null
2025-06-20T01:29:59.356+02:00 DEBUG 16944 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table users 
       modify column status enum ('ACTIVE','INACTIVE','SUSPENDED') not null
2025-06-20T01:30:01.026+02:00  WARN 16944 --- [back] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-20T01:30:01.041+02:00  WARN 16944 --- [back] [restartedMain] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-06-20T01:31:39.061+02:00 DEBUG 16944 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-20T01:31:40.542+02:00 DEBUG 16944 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-20T01:31:40.658+02:00 DEBUG 16944 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-20T01:31:48.526+02:00 DEBUG 16944 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-20T01:31:48.638+02:00 DEBUG 16944 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-20T01:31:52.250+02:00 DEBUG 16944 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-20T01:31:52.264+02:00 ERROR 16944 --- [back] [http-nio-8080-exec-9] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception

org.springframework.security.core.userdetails.UsernameNotFoundException: User not found
	at com.tfg.back.service.serviceImpl.MyUserDetailsService.lambda$loadUserByUsername$0(MyUserDetailsService.java:25) ~[classes/:na]
	at java.base/java.util.Optional.orElseThrow(Optional.java:403) ~[na:na]
	at com.tfg.back.service.serviceImpl.MyUserDetailsService.loadUserByUsername(MyUserDetailsService.java:25) ~[classes/:na]
	at com.tfg.back.configuration.JwtRequestFilter.doFilterInternal(JwtRequestFilter.java:44) ~[classes/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243) ~[spring-webmvc-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238) ~[spring-security-config-6.4.5.jar:6.4.5]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278) ~[spring-web-6.2.6.jar:6.2.6]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-20T01:33:47.510+02:00 DEBUG 11384 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table clients 
       modify column membership_level enum ('BASIC','INSURANCE_COVERED','PREMIUM','VIP') not null
2025-06-20T01:33:47.660+02:00 DEBUG 11384 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table doctors 
       modify column specialization enum ('CARDIOLOGY','NEUROLOGY','ONCOLOGY','ORTHOPEDICS','PEDIATRICS') not null
2025-06-20T01:33:47.689+02:00 DEBUG 11384 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table users 
       modify column status enum ('ACTIVE','INACTIVE','SUSPENDED') not null
2025-06-20T01:33:49.403+02:00  WARN 11384 --- [back] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-20T01:33:49.424+02:00  WARN 11384 --- [back] [restartedMain] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-06-20T01:33:58.736+02:00 DEBUG 11384 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-20T01:33:58.898+02:00 DEBUG 11384 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-20T01:33:58.908+02:00 ERROR 11384 --- [back] [http-nio-8080-exec-3] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.NoSuchElementException] with root cause

java.util.NoSuchElementException: null
	at java.base/java.util.ImmutableCollections$ListItr.next(ImmutableCollections.java:382) ~[na:na]
	at com.tfg.back.utils.JwtUtil.generateToken(JwtUtil.java:23) ~[classes/:na]
	at com.tfg.back.controller.AuthController.login(AuthController.java:55) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.2.6.jar:6.2.6]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986) ~[spring-webmvc-6.2.6.jar:6.2.6]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891) ~[spring-webmvc-6.2.6.jar:6.2.6]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.2.6.jar:6.2.6]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.2.6.jar:6.2.6]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.2.6.jar:6.2.6]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.2.6.jar:6.2.6]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.2.6.jar:6.2.6]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.40.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.2.6.jar:6.2.6]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.40.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110) ~[spring-web-6.2.6.jar:6.2.6]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at com.tfg.back.configuration.JwtRequestFilter.doFilterInternal(JwtRequestFilter.java:54) ~[classes/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243) ~[spring-webmvc-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238) ~[spring-security-config-6.4.5.jar:6.4.5]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278) ~[spring-web-6.2.6.jar:6.2.6]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-20T01:34:23.152+02:00 DEBUG 11384 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        c1_0.client_id 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_1.email=? 
    limit
        ?
2025-06-20T01:34:23.306+02:00 DEBUG 11384 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    insert 
    into
        users
        (address, created_at, date_of_birth, email, full_name, hashed_password, phone_number, status, updated_at, version, user_type, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, 'CLIENT', ?)
2025-06-20T01:34:23.316+02:00 DEBUG 11384 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    insert 
    into
        clients
        (blood_type, contact_name, contact_phone, relationship, membership_level, client_id) 
    values
        (?, ?, ?, ?, ?, ?)
2025-06-20T01:34:23.338+02:00 DEBUG 11384 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    insert 
    into
        notifications
        (date, message, seen, title, type, user_id) 
    values
        (?, ?, ?, ?, ?, ?)
2025-06-20T01:34:25.656+02:00 DEBUG 11384 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-20T01:34:25.768+02:00 DEBUG 11384 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-20T01:34:25.775+02:00 ERROR 11384 --- [back] [http-nio-8080-exec-8] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.NoSuchElementException] with root cause

java.util.NoSuchElementException: null
	at java.base/java.util.ImmutableCollections$ListItr.next(ImmutableCollections.java:382) ~[na:na]
	at com.tfg.back.utils.JwtUtil.generateToken(JwtUtil.java:23) ~[classes/:na]
	at com.tfg.back.service.serviceImpl.LoginService.login(LoginService.java:45) ~[classes/:na]
	at com.tfg.back.controller.ClientController.registerClient(ClientController.java:56) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.6.jar:6.2.6]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.6.jar:6.2.6]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.6.jar:6.2.6]
	at org.springframework.validation.beanvalidation.MethodValidationInterceptor.invoke(MethodValidationInterceptor.java:174) ~[spring-context-6.2.6.jar:6.2.6]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.6.jar:6.2.6]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728) ~[spring-aop-6.2.6.jar:6.2.6]
	at com.tfg.back.controller.ClientController$$SpringCGLIB$$0.registerClient(<generated>) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.2.6.jar:6.2.6]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986) ~[spring-webmvc-6.2.6.jar:6.2.6]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891) ~[spring-webmvc-6.2.6.jar:6.2.6]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.2.6.jar:6.2.6]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.2.6.jar:6.2.6]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.2.6.jar:6.2.6]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.2.6.jar:6.2.6]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.2.6.jar:6.2.6]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.40.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.2.6.jar:6.2.6]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.40.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110) ~[spring-web-6.2.6.jar:6.2.6]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at com.tfg.back.configuration.JwtRequestFilter.doFilterInternal(JwtRequestFilter.java:54) ~[classes/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243) ~[spring-webmvc-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238) ~[spring-security-config-6.4.5.jar:6.4.5]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278) ~[spring-web-6.2.6.jar:6.2.6]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-20T01:36:43.481+02:00 DEBUG 20284 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table clients 
       modify column membership_level enum ('BASIC','INSURANCE_COVERED','PREMIUM','VIP') not null
2025-06-20T01:36:43.702+02:00 DEBUG 20284 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table doctors 
       modify column specialization enum ('CARDIOLOGY','NEUROLOGY','ONCOLOGY','ORTHOPEDICS','PEDIATRICS') not null
2025-06-20T01:36:43.815+02:00 DEBUG 20284 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table users 
       modify column status enum ('ACTIVE','INACTIVE','SUSPENDED') not null
2025-06-20T01:36:45.546+02:00  WARN 20284 --- [back] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-20T01:36:45.565+02:00  WARN 20284 --- [back] [restartedMain] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-06-20T01:36:58.098+02:00 DEBUG 20284 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        c1_0.client_id 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_1.email=? 
    limit
        ?
2025-06-20T01:36:58.285+02:00 DEBUG 20284 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    insert 
    into
        users
        (address, created_at, date_of_birth, email, full_name, hashed_password, phone_number, status, updated_at, version, user_type, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, 'CLIENT', ?)
2025-06-20T01:36:58.296+02:00 DEBUG 20284 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    insert 
    into
        clients
        (blood_type, contact_name, contact_phone, relationship, membership_level, client_id) 
    values
        (?, ?, ?, ?, ?, ?)
2025-06-20T01:36:58.317+02:00 DEBUG 20284 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    insert 
    into
        notifications
        (date, message, seen, title, type, user_id) 
    values
        (?, ?, ?, ?, ?, ?)
2025-06-20T01:36:59.528+02:00 DEBUG 20284 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-20T01:36:59.670+02:00 DEBUG 20284 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-20T01:37:04.491+02:00 DEBUG 20284 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-20T01:37:04.504+02:00 ERROR 20284 --- [back] [http-nio-8080-exec-3] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception

org.springframework.security.core.userdetails.UsernameNotFoundException: User not found
	at com.tfg.back.service.serviceImpl.MyUserDetailsService.lambda$loadUserByUsername$0(MyUserDetailsService.java:25) ~[classes/:na]
	at java.base/java.util.Optional.orElseThrow(Optional.java:403) ~[na:na]
	at com.tfg.back.service.serviceImpl.MyUserDetailsService.loadUserByUsername(MyUserDetailsService.java:25) ~[classes/:na]
	at com.tfg.back.configuration.JwtRequestFilter.doFilterInternal(JwtRequestFilter.java:44) ~[classes/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243) ~[spring-webmvc-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238) ~[spring-security-config-6.4.5.jar:6.4.5]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278) ~[spring-web-6.2.6.jar:6.2.6]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-20T01:38:25.926+02:00 DEBUG 20284 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-20T01:38:26.045+02:00 DEBUG 20284 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-20T01:38:29.622+02:00 DEBUG 20284 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-20T01:38:29.636+02:00 ERROR 20284 --- [back] [http-nio-8080-exec-9] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception

org.springframework.security.core.userdetails.UsernameNotFoundException: User not found
	at com.tfg.back.service.serviceImpl.MyUserDetailsService.lambda$loadUserByUsername$0(MyUserDetailsService.java:25) ~[classes/:na]
	at java.base/java.util.Optional.orElseThrow(Optional.java:403) ~[na:na]
	at com.tfg.back.service.serviceImpl.MyUserDetailsService.loadUserByUsername(MyUserDetailsService.java:25) ~[classes/:na]
	at com.tfg.back.configuration.JwtRequestFilter.doFilterInternal(JwtRequestFilter.java:44) ~[classes/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243) ~[spring-webmvc-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238) ~[spring-security-config-6.4.5.jar:6.4.5]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278) ~[spring-web-6.2.6.jar:6.2.6]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-20T01:42:17.919+02:00 DEBUG 6648 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table clients 
       modify column membership_level enum ('BASIC','INSURANCE_COVERED','PREMIUM','VIP') not null
2025-06-20T01:42:18.063+02:00 DEBUG 6648 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table doctors 
       modify column specialization enum ('CARDIOLOGY','NEUROLOGY','ONCOLOGY','ORTHOPEDICS','PEDIATRICS') not null
2025-06-20T01:42:18.093+02:00 DEBUG 6648 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table users 
       modify column status enum ('ACTIVE','INACTIVE','SUSPENDED') not null
2025-06-20T01:42:19.760+02:00  WARN 6648 --- [back] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-20T01:42:19.777+02:00  WARN 6648 --- [back] [restartedMain] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-06-20T01:42:23.207+02:00 DEBUG 6648 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-20T01:42:23.411+02:00 DEBUG 6648 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-20T01:42:27.174+02:00 DEBUG 6648 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-20T01:42:27.184+02:00 ERROR 6648 --- [back] [http-nio-8080-exec-4] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception

org.springframework.security.core.userdetails.UsernameNotFoundException: User not found
	at com.tfg.back.service.serviceImpl.MyUserDetailsService.lambda$loadUserByUsername$0(MyUserDetailsService.java:25) ~[classes/:na]
	at java.base/java.util.Optional.orElseThrow(Optional.java:403) ~[na:na]
	at com.tfg.back.service.serviceImpl.MyUserDetailsService.loadUserByUsername(MyUserDetailsService.java:25) ~[classes/:na]
	at com.tfg.back.configuration.JwtRequestFilter.doFilterInternal(JwtRequestFilter.java:44) ~[classes/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243) ~[spring-webmvc-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238) ~[spring-security-config-6.4.5.jar:6.4.5]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278) ~[spring-web-6.2.6.jar:6.2.6]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-20T01:45:24.954+02:00 DEBUG 24044 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table clients 
       modify column membership_level enum ('BASIC','INSURANCE_COVERED','PREMIUM','VIP') not null
2025-06-20T01:45:25.000+02:00 DEBUG 24044 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table doctors 
       modify column specialization enum ('CARDIOLOGY','NEUROLOGY','ONCOLOGY','ORTHOPEDICS','PEDIATRICS') not null
2025-06-20T01:45:25.031+02:00 DEBUG 24044 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table users 
       modify column status enum ('ACTIVE','INACTIVE','SUSPENDED') not null
2025-06-20T01:45:26.705+02:00  WARN 24044 --- [back] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-20T01:45:26.721+02:00  WARN 24044 --- [back] [restartedMain] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-06-20T01:45:34.865+02:00 DEBUG 24044 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-20T01:45:35.084+02:00 DEBUG 24044 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-20T01:45:38.964+02:00 DEBUG 24044 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-20T01:45:38.979+02:00 ERROR 24044 --- [back] [http-nio-8080-exec-7] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception

org.springframework.security.core.userdetails.UsernameNotFoundException: User not found
	at com.tfg.back.service.serviceImpl.MyUserDetailsService.lambda$loadUserByUsername$0(MyUserDetailsService.java:21) ~[classes/:na]
	at java.base/java.util.Optional.orElseThrow(Optional.java:403) ~[na:na]
	at com.tfg.back.service.serviceImpl.MyUserDetailsService.loadUserByUsername(MyUserDetailsService.java:21) ~[classes/:na]
	at com.tfg.back.configuration.JwtRequestFilter.doFilterInternal(JwtRequestFilter.java:44) ~[classes/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.4.5.jar:6.4.5]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243) ~[spring-webmvc-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238) ~[spring-security-config-6.4.5.jar:6.4.5]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278) ~[spring-web-6.2.6.jar:6.2.6]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.6.jar:6.2.6]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.6.jar:6.2.6]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.40.jar:10.1.40]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-20T01:52:46.653+02:00 DEBUG 20976 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table clients 
       modify column membership_level enum ('BASIC','INSURANCE_COVERED','PREMIUM','VIP') not null
2025-06-20T01:52:46.836+02:00 DEBUG 20976 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table doctors 
       modify column specialization enum ('CARDIOLOGY','NEUROLOGY','ONCOLOGY','ORTHOPEDICS','PEDIATRICS') not null
2025-06-20T01:52:46.889+02:00 DEBUG 20976 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table users 
       modify column status enum ('ACTIVE','INACTIVE','SUSPENDED') not null
2025-06-20T01:52:48.727+02:00  WARN 20976 --- [back] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-20T01:52:48.750+02:00  WARN 20976 --- [back] [restartedMain] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-06-20T01:53:00.511+02:00 DEBUG 20976 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-20T01:53:00.716+02:00 DEBUG 20976 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-20T01:53:04.707+02:00 DEBUG 20976 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T01:53:04.833+02:00 DEBUG 20976 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_1.email=?
2025-06-20T01:53:04.867+02:00  WARN 20976 --- [back] [http-nio-8080-exec-4] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [com.tfg.back.exceptions.user.UserNotFoundException: User not found with EMAIL: c72aa133-39f6-4617-9f36-887519ec84d8]
2025-06-20T01:57:06.767+02:00 DEBUG 20088 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table clients 
       modify column membership_level enum ('BASIC','INSURANCE_COVERED','PREMIUM','VIP') not null
2025-06-20T01:57:06.816+02:00 DEBUG 20088 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table doctors 
       modify column specialization enum ('CARDIOLOGY','NEUROLOGY','ONCOLOGY','ORTHOPEDICS','PEDIATRICS') not null
2025-06-20T01:57:06.848+02:00 DEBUG 20088 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table users 
       modify column status enum ('ACTIVE','INACTIVE','SUSPENDED') not null
2025-06-20T01:57:08.572+02:00  WARN 20088 --- [back] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-20T01:57:08.587+02:00  WARN 20088 --- [back] [restartedMain] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-06-20T01:57:20.499+02:00 DEBUG 20088 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-20T01:57:20.669+02:00 DEBUG 20088 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        u1_2.department_id,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    where
        u1_0.email=?
2025-06-20T01:57:24.433+02:00 DEBUG 20088 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T01:57:24.471+02:00 DEBUG 20088 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T01:57:24.537+02:00 DEBUG 20088 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T01:57:24.574+02:00 DEBUG 20088 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        c1_1.full_name 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_1.email=?
2025-06-20T01:57:24.588+02:00 DEBUG 20088 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    join
        clients c1_0 
            on c1_0.client_id=a1_0.client_id 
    left join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_1.email=? 
        and a1_0.status<>'CANCELLED' 
    order by
        a1_0.appointment_date_time desc 
    limit
        ?
2025-06-20T01:57:24.599+02:00 DEBUG 20088 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    join
        clients pt1_0 
            on pt1_0.client_id=mp1_0.prescribed_to_id 
    left join
        users pt1_1 
            on pt1_0.client_id=pt1_1.id 
    where
        pt1_1.email=? 
    order by
        mp1_0.created_at desc 
    limit
        ?
2025-06-20T01:57:24.609+02:00 DEBUG 20088 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.email=? 
        and not(n1_0.seen) 
    order by
        n1_0.date desc 
    limit
        ?
2025-06-20T01:57:35.784+02:00 DEBUG 20088 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T01:57:35.815+02:00 DEBUG 20088 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T01:57:40.359+02:00 DEBUG 20088 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T01:57:40.383+02:00 DEBUG 20088 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    left join
        clients c1_0 
            on c1_0.client_id=a1_0.client_id 
    left join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_1.email=?
2025-06-20T01:57:42.635+02:00 DEBUG 20088 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T01:57:42.636+02:00 DEBUG 20088 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T01:57:42.664+02:00 DEBUG 20088 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    left join
        clients pt1_0 
            on pt1_0.client_id=mp1_0.prescribed_to_id 
    left join
        users pt1_1 
            on pt1_0.client_id=pt1_1.id 
    where
        pt1_1.email=?
2025-06-20T01:57:42.664+02:00 DEBUG 20088 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        lr1_0.id,
        lr1_0.created_at,
        lr1_0.notes,
        lr1_0.ordered_by_id,
        lr1_0.patient_id,
        lr1_0.reference_range,
        lr1_0.result_date,
        lr1_0.result_value,
        lr1_0.status,
        lr1_0.test_name,
        lr1_0.unit,
        lr1_0.updated_at,
        lr1_0.version 
    from
        lab_results lr1_0 
    left join
        clients p1_0 
            on p1_0.client_id=lr1_0.patient_id 
    left join
        users p1_1 
            on p1_0.client_id=p1_1.id 
    where
        p1_1.email=?
2025-06-20T01:57:43.743+02:00 DEBUG 20088 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T01:57:43.788+02:00 DEBUG 20088 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.email=?
2025-06-20T01:58:07.180+02:00 DEBUG 20088 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T01:58:07.203+02:00 DEBUG 20088 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        fb1_0.id,
        fb1_0.author_id,
        fb1_0.comment,
        fb1_0.created_at,
        fb1_0.rating,
        fb1_0.type,
        fb1_0.written_to_id 
    from
        feedbacks fb1_0 
    join
        clients a1_0 
            on a1_0.client_id=fb1_0.author_id 
    join
        users a1_1 
            on a1_0.client_id=a1_1.id 
    where
        a1_1.email=?
2025-06-20T01:58:10.566+02:00 DEBUG 20088 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T01:58:10.614+02:00 DEBUG 20088 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        fb1_0.id,
        fb1_0.author_id,
        fb1_0.comment,
        fb1_0.created_at,
        fb1_0.rating,
        fb1_0.type,
        fb1_0.written_to_id 
    from
        feedbacks fb1_0 
    join
        clients a1_0 
            on a1_0.client_id=fb1_0.author_id 
    join
        users a1_1 
            on a1_0.client_id=a1_1.id 
    where
        a1_1.email=?
2025-06-20T01:58:20.389+02:00 DEBUG 20088 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T01:58:20.445+02:00 DEBUG 20088 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_1.email=?
2025-06-20T01:58:20.474+02:00  WARN 20088 --- [back] [http-nio-8080-exec-1] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [com.tfg.back.exceptions.user.UserNotFoundException: User not found with EMAIL: c72aa133-39f6-4617-9f36-887519ec84d8]
2025-06-20T01:58:26.895+02:00 DEBUG 20088 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T01:58:26.919+02:00 DEBUG 20088 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        c1_1.full_name 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_1.email=?
2025-06-20T01:58:26.925+02:00 DEBUG 20088 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    join
        clients c1_0 
            on c1_0.client_id=a1_0.client_id 
    left join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_1.email=? 
        and a1_0.status<>'CANCELLED' 
    order by
        a1_0.appointment_date_time desc 
    limit
        ?
2025-06-20T01:58:26.932+02:00 DEBUG 20088 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    join
        clients pt1_0 
            on pt1_0.client_id=mp1_0.prescribed_to_id 
    left join
        users pt1_1 
            on pt1_0.client_id=pt1_1.id 
    where
        pt1_1.email=? 
    order by
        mp1_0.created_at desc 
    limit
        ?
2025-06-20T01:58:26.938+02:00 DEBUG 20088 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.email=? 
        and not(n1_0.seen) 
    order by
        n1_0.date desc 
    limit
        ?
2025-06-20T01:58:29.378+02:00 DEBUG 20088 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T01:58:29.425+02:00 DEBUG 20088 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T01:58:59.012+02:00 DEBUG 20088 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T01:58:59.031+02:00 DEBUG 20088 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        c1_1.full_name 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_1.email=?
2025-06-20T01:58:59.036+02:00 DEBUG 20088 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    join
        clients c1_0 
            on c1_0.client_id=a1_0.client_id 
    left join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_1.email=? 
        and a1_0.status<>'CANCELLED' 
    order by
        a1_0.appointment_date_time desc 
    limit
        ?
2025-06-20T01:58:59.041+02:00 DEBUG 20088 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    join
        clients pt1_0 
            on pt1_0.client_id=mp1_0.prescribed_to_id 
    left join
        users pt1_1 
            on pt1_0.client_id=pt1_1.id 
    where
        pt1_1.email=? 
    order by
        mp1_0.created_at desc 
    limit
        ?
2025-06-20T01:58:59.046+02:00 DEBUG 20088 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.email=? 
        and not(n1_0.seen) 
    order by
        n1_0.date desc 
    limit
        ?
2025-06-20T01:59:01.263+02:00 DEBUG 20088 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T01:59:01.298+02:00 DEBUG 20088 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    left join
        clients c1_0 
            on c1_0.client_id=a1_0.client_id 
    left join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_1.email=?
2025-06-20T01:59:04.306+02:00 DEBUG 20088 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T01:59:04.310+02:00 DEBUG 20088 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T01:59:04.330+02:00 DEBUG 20088 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    left join
        clients pt1_0 
            on pt1_0.client_id=mp1_0.prescribed_to_id 
    left join
        users pt1_1 
            on pt1_0.client_id=pt1_1.id 
    where
        pt1_1.email=?
2025-06-20T01:59:04.336+02:00 DEBUG 20088 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        lr1_0.id,
        lr1_0.created_at,
        lr1_0.notes,
        lr1_0.ordered_by_id,
        lr1_0.patient_id,
        lr1_0.reference_range,
        lr1_0.result_date,
        lr1_0.result_value,
        lr1_0.status,
        lr1_0.test_name,
        lr1_0.unit,
        lr1_0.updated_at,
        lr1_0.version 
    from
        lab_results lr1_0 
    left join
        clients p1_0 
            on p1_0.client_id=lr1_0.patient_id 
    left join
        users p1_1 
            on p1_0.client_id=p1_1.id 
    where
        p1_1.email=?
2025-06-20T01:59:05.551+02:00 DEBUG 20088 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T01:59:05.576+02:00 DEBUG 20088 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.email=?
2025-06-20T01:59:07.268+02:00 DEBUG 20088 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T01:59:07.305+02:00 DEBUG 20088 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        fb1_0.id,
        fb1_0.author_id,
        fb1_0.comment,
        fb1_0.created_at,
        fb1_0.rating,
        fb1_0.type,
        fb1_0.written_to_id 
    from
        feedbacks fb1_0 
    join
        clients a1_0 
            on a1_0.client_id=fb1_0.author_id 
    join
        users a1_1 
            on a1_0.client_id=a1_1.id 
    where
        a1_1.email=?
2025-06-20T01:59:09.581+02:00 DEBUG 20088 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T01:59:09.628+02:00 DEBUG 20088 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        c1_1.full_name 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_1.email=?
2025-06-20T01:59:09.638+02:00 DEBUG 20088 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    join
        clients c1_0 
            on c1_0.client_id=a1_0.client_id 
    left join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_1.email=? 
        and a1_0.status<>'CANCELLED' 
    order by
        a1_0.appointment_date_time desc 
    limit
        ?
2025-06-20T01:59:09.648+02:00 DEBUG 20088 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    join
        clients pt1_0 
            on pt1_0.client_id=mp1_0.prescribed_to_id 
    left join
        users pt1_1 
            on pt1_0.client_id=pt1_1.id 
    where
        pt1_1.email=? 
    order by
        mp1_0.created_at desc 
    limit
        ?
2025-06-20T01:59:09.658+02:00 DEBUG 20088 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.email=? 
        and not(n1_0.seen) 
    order by
        n1_0.date desc 
    limit
        ?
2025-06-20T01:59:18.703+02:00 DEBUG 20088 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T01:59:18.732+02:00 DEBUG 20088 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T02:00:47.635+02:00 DEBUG 17492 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table clients 
       modify column membership_level enum ('BASIC','INSURANCE_COVERED','PREMIUM','VIP') not null
2025-06-20T02:00:47.849+02:00 DEBUG 17492 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table doctors 
       modify column specialization enum ('CARDIOLOGY','NEUROLOGY','ONCOLOGY','ORTHOPEDICS','PEDIATRICS') not null
2025-06-20T02:00:48.015+02:00 DEBUG 17492 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table users 
       modify column status enum ('ACTIVE','INACTIVE','SUSPENDED') not null
2025-06-20T02:00:49.975+02:00  WARN 17492 --- [back] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-20T02:00:49.986+02:00  WARN 17492 --- [back] [restartedMain] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-06-20T02:01:17.118+02:00 DEBUG 17492 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:01:17.233+02:00 DEBUG 17492 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T02:01:17.334+02:00 DEBUG 17492 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:01:17.382+02:00  WARN 17492 --- [back] [http-nio-8080-exec-4] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.dao.InvalidDataAccessApiUsageException: Argument [c72aa133-39f6-4617-9f36-887519ec84d8] of type [java.lang.String] did not match parameter type [java.util.UUID (n/a)]]
2025-06-20T02:04:05.476+02:00 DEBUG 4656 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table clients 
       modify column membership_level enum ('BASIC','INSURANCE_COVERED','PREMIUM','VIP') not null
2025-06-20T02:04:05.507+02:00 DEBUG 4656 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table doctors 
       modify column specialization enum ('CARDIOLOGY','NEUROLOGY','ONCOLOGY','ORTHOPEDICS','PEDIATRICS') not null
2025-06-20T02:04:05.575+02:00 DEBUG 4656 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table users 
       modify column status enum ('ACTIVE','INACTIVE','SUSPENDED') not null
2025-06-20T02:04:07.290+02:00  WARN 4656 --- [back] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-20T02:04:07.305+02:00  WARN 4656 --- [back] [restartedMain] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-06-20T02:04:47.875+02:00 DEBUG 4656 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:04:47.986+02:00 DEBUG 4656 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T02:04:48.091+02:00 DEBUG 4656 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:04:48.174+02:00 DEBUG 4656 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        c1_1.full_name 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T02:04:48.191+02:00 DEBUG 4656 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=? 
        and a1_0.status<>'CANCELLED' 
    order by
        a1_0.appointment_date_time desc 
    limit
        ?
2025-06-20T02:04:48.218+02:00 DEBUG 4656 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    where
        mp1_0.prescribed_to_id=? 
    order by
        mp1_0.created_at desc 
    limit
        ?
2025-06-20T02:04:48.245+02:00 DEBUG 4656 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=? 
        and not(n1_0.seen) 
    order by
        n1_0.date desc 
    limit
        ?
2025-06-20T02:04:51.948+02:00 DEBUG 4656 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:04:51.983+02:00 DEBUG 4656 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T02:04:52.704+02:00 DEBUG 4656 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:04:52.727+02:00 DEBUG 4656 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    left join
        clients c1_0 
            on c1_0.client_id=a1_0.client_id 
    left join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_1.email=?
2025-06-20T02:04:53.923+02:00 DEBUG 4656 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:04:53.923+02:00 DEBUG 4656 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:04:53.951+02:00 DEBUG 4656 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    left join
        clients pt1_0 
            on pt1_0.client_id=mp1_0.prescribed_to_id 
    left join
        users pt1_1 
            on pt1_0.client_id=pt1_1.id 
    where
        pt1_1.email=?
2025-06-20T02:04:53.951+02:00 DEBUG 4656 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        lr1_0.id,
        lr1_0.created_at,
        lr1_0.notes,
        lr1_0.ordered_by_id,
        lr1_0.patient_id,
        lr1_0.reference_range,
        lr1_0.result_date,
        lr1_0.result_value,
        lr1_0.status,
        lr1_0.test_name,
        lr1_0.unit,
        lr1_0.updated_at,
        lr1_0.version 
    from
        lab_results lr1_0 
    left join
        clients p1_0 
            on p1_0.client_id=lr1_0.patient_id 
    left join
        users p1_1 
            on p1_0.client_id=p1_1.id 
    where
        p1_1.email=?
2025-06-20T02:20:01.197+02:00 DEBUG 4656 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:20:01.231+02:00 DEBUG 4656 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.email=?
2025-06-20T02:20:02.125+02:00 DEBUG 4656 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:20:02.125+02:00 DEBUG 4656 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:20:02.166+02:00 DEBUG 4656 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        lr1_0.id,
        lr1_0.created_at,
        lr1_0.notes,
        lr1_0.ordered_by_id,
        lr1_0.patient_id,
        lr1_0.reference_range,
        lr1_0.result_date,
        lr1_0.result_value,
        lr1_0.status,
        lr1_0.test_name,
        lr1_0.unit,
        lr1_0.updated_at,
        lr1_0.version 
    from
        lab_results lr1_0 
    left join
        clients p1_0 
            on p1_0.client_id=lr1_0.patient_id 
    left join
        users p1_1 
            on p1_0.client_id=p1_1.id 
    where
        p1_1.email=?
2025-06-20T02:20:02.167+02:00 DEBUG 4656 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    left join
        clients pt1_0 
            on pt1_0.client_id=mp1_0.prescribed_to_id 
    left join
        users pt1_1 
            on pt1_0.client_id=pt1_1.id 
    where
        pt1_1.email=?
2025-06-20T02:20:02.428+02:00 DEBUG 4656 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:20:02.476+02:00 DEBUG 4656 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    left join
        clients c1_0 
            on c1_0.client_id=a1_0.client_id 
    left join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_1.email=?
2025-06-20T02:20:06.779+02:00 DEBUG 4656 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:20:06.779+02:00 DEBUG 4656 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:20:06.810+02:00 DEBUG 4656 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        lr1_0.id,
        lr1_0.created_at,
        lr1_0.notes,
        lr1_0.ordered_by_id,
        lr1_0.patient_id,
        lr1_0.reference_range,
        lr1_0.result_date,
        lr1_0.result_value,
        lr1_0.status,
        lr1_0.test_name,
        lr1_0.unit,
        lr1_0.updated_at,
        lr1_0.version 
    from
        lab_results lr1_0 
    left join
        clients p1_0 
            on p1_0.client_id=lr1_0.patient_id 
    left join
        users p1_1 
            on p1_0.client_id=p1_1.id 
    where
        p1_1.email=?
2025-06-20T02:20:06.810+02:00 DEBUG 4656 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    left join
        clients pt1_0 
            on pt1_0.client_id=mp1_0.prescribed_to_id 
    left join
        users pt1_1 
            on pt1_0.client_id=pt1_1.id 
    where
        pt1_1.email=?
2025-06-20T02:22:47.109+02:00 DEBUG 4656 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:22:47.149+02:00 DEBUG 4656 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        fb1_0.id,
        fb1_0.author_id,
        fb1_0.comment,
        fb1_0.created_at,
        fb1_0.rating,
        fb1_0.type,
        fb1_0.written_to_id 
    from
        feedbacks fb1_0 
    join
        clients a1_0 
            on a1_0.client_id=fb1_0.author_id 
    join
        users a1_1 
            on a1_0.client_id=a1_1.id 
    where
        a1_1.email=?
2025-06-20T02:22:48.934+02:00 DEBUG 4656 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:22:48.960+02:00 DEBUG 4656 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        fb1_0.id,
        fb1_0.author_id,
        fb1_0.comment,
        fb1_0.created_at,
        fb1_0.rating,
        fb1_0.type,
        fb1_0.written_to_id 
    from
        feedbacks fb1_0 
    join
        clients a1_0 
            on a1_0.client_id=fb1_0.author_id 
    join
        users a1_1 
            on a1_0.client_id=a1_1.id 
    where
        a1_1.email=?
2025-06-20T02:25:25.700+02:00 DEBUG 4656 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:25:25.721+02:00 DEBUG 4656 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.email=?
2025-06-20T02:25:26.451+02:00 DEBUG 4656 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:25:26.451+02:00 DEBUG 4656 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:25:26.473+02:00 DEBUG 4656 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        lr1_0.id,
        lr1_0.created_at,
        lr1_0.notes,
        lr1_0.ordered_by_id,
        lr1_0.patient_id,
        lr1_0.reference_range,
        lr1_0.result_date,
        lr1_0.result_value,
        lr1_0.status,
        lr1_0.test_name,
        lr1_0.unit,
        lr1_0.updated_at,
        lr1_0.version 
    from
        lab_results lr1_0 
    left join
        clients p1_0 
            on p1_0.client_id=lr1_0.patient_id 
    left join
        users p1_1 
            on p1_0.client_id=p1_1.id 
    where
        p1_1.email=?
2025-06-20T02:25:26.473+02:00 DEBUG 4656 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    left join
        clients pt1_0 
            on pt1_0.client_id=mp1_0.prescribed_to_id 
    left join
        users pt1_1 
            on pt1_0.client_id=pt1_1.id 
    where
        pt1_1.email=?
2025-06-20T02:26:00.358+02:00 DEBUG 4656 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:26:00.409+02:00 DEBUG 4656 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.email=?
2025-06-20T02:26:01.266+02:00 DEBUG 4656 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:26:01.267+02:00 DEBUG 4656 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:26:01.320+02:00 DEBUG 4656 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    left join
        clients pt1_0 
            on pt1_0.client_id=mp1_0.prescribed_to_id 
    left join
        users pt1_1 
            on pt1_0.client_id=pt1_1.id 
    where
        pt1_1.email=?
2025-06-20T02:26:01.323+02:00 DEBUG 4656 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        lr1_0.id,
        lr1_0.created_at,
        lr1_0.notes,
        lr1_0.ordered_by_id,
        lr1_0.patient_id,
        lr1_0.reference_range,
        lr1_0.result_date,
        lr1_0.result_value,
        lr1_0.status,
        lr1_0.test_name,
        lr1_0.unit,
        lr1_0.updated_at,
        lr1_0.version 
    from
        lab_results lr1_0 
    left join
        clients p1_0 
            on p1_0.client_id=lr1_0.patient_id 
    left join
        users p1_1 
            on p1_0.client_id=p1_1.id 
    where
        p1_1.email=?
2025-06-20T02:27:49.640+02:00 DEBUG 18292 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table clients 
       modify column membership_level enum ('BASIC','INSURANCE_COVERED','PREMIUM','VIP') not null
2025-06-20T02:27:49.815+02:00 DEBUG 18292 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table doctors 
       modify column specialization enum ('CARDIOLOGY','NEUROLOGY','ONCOLOGY','ORTHOPEDICS','PEDIATRICS') not null
2025-06-20T02:27:49.843+02:00 DEBUG 18292 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table users 
       modify column status enum ('ACTIVE','INACTIVE','SUSPENDED') not null
2025-06-20T02:27:51.540+02:00  WARN 18292 --- [back] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-20T02:27:51.560+02:00  WARN 18292 --- [back] [restartedMain] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-06-20T02:27:58.840+02:00 DEBUG 18292 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:27:58.951+02:00 DEBUG 18292 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T02:27:59.047+02:00 DEBUG 18292 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:27:59.122+02:00 DEBUG 18292 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        c1_1.full_name 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T02:27:59.137+02:00 DEBUG 18292 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=? 
        and a1_0.status<>'CANCELLED' 
    order by
        a1_0.appointment_date_time desc 
    limit
        ?
2025-06-20T02:27:59.147+02:00 DEBUG 18292 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    where
        mp1_0.prescribed_to_id=? 
    order by
        mp1_0.created_at desc 
    limit
        ?
2025-06-20T02:27:59.170+02:00 DEBUG 18292 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=? 
        and not(n1_0.seen) 
    order by
        n1_0.date desc 
    limit
        ?
2025-06-20T02:28:00.058+02:00 DEBUG 18292 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:28:00.084+02:00 DEBUG 18292 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=?
2025-06-20T02:28:02.133+02:00 DEBUG 18292 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:28:02.165+02:00 DEBUG 18292 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        fb1_0.id,
        fb1_0.author_id,
        fb1_0.comment,
        fb1_0.created_at,
        fb1_0.rating,
        fb1_0.type,
        fb1_0.written_to_id 
    from
        feedbacks fb1_0 
    join
        clients a1_0 
            on a1_0.client_id=fb1_0.author_id 
    join
        users a1_1 
            on a1_0.client_id=a1_1.id 
    where
        a1_1.email=?
2025-06-20T02:28:03.864+02:00 DEBUG 18292 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:28:03.887+02:00 DEBUG 18292 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        fb1_0.id,
        fb1_0.author_id,
        fb1_0.comment,
        fb1_0.created_at,
        fb1_0.rating,
        fb1_0.type,
        fb1_0.written_to_id 
    from
        feedbacks fb1_0 
    join
        clients a1_0 
            on a1_0.client_id=fb1_0.author_id 
    join
        users a1_1 
            on a1_0.client_id=a1_1.id 
    where
        a1_1.email=?
2025-06-20T02:29:56.320+02:00 DEBUG 18208 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table clients 
       modify column membership_level enum ('BASIC','INSURANCE_COVERED','PREMIUM','VIP') not null
2025-06-20T02:29:56.495+02:00 DEBUG 18208 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table doctors 
       modify column specialization enum ('CARDIOLOGY','NEUROLOGY','ONCOLOGY','ORTHOPEDICS','PEDIATRICS') not null
2025-06-20T02:29:56.566+02:00 DEBUG 18208 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table users 
       modify column status enum ('ACTIVE','INACTIVE','SUSPENDED') not null
2025-06-20T02:29:58.351+02:00  WARN 18208 --- [back] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-20T02:29:58.369+02:00  WARN 18208 --- [back] [restartedMain] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-06-20T02:30:08.609+02:00 DEBUG 18208 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:30:08.719+02:00 DEBUG 18208 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T02:30:08.818+02:00 DEBUG 18208 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:30:08.890+02:00 DEBUG 18208 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        c1_1.full_name 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T02:30:08.906+02:00 DEBUG 18208 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=? 
        and a1_0.status<>'CANCELLED' 
    order by
        a1_0.appointment_date_time desc 
    limit
        ?
2025-06-20T02:30:08.916+02:00 DEBUG 18208 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    where
        mp1_0.prescribed_to_id=? 
    order by
        mp1_0.created_at desc 
    limit
        ?
2025-06-20T02:30:08.940+02:00 DEBUG 18208 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=? 
        and not(n1_0.seen) 
    order by
        n1_0.date desc 
    limit
        ?
2025-06-20T02:30:09.843+02:00 DEBUG 18208 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:30:09.872+02:00 DEBUG 18208 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T02:30:11.074+02:00 DEBUG 18208 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:30:11.099+02:00 DEBUG 18208 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    left join
        clients c1_0 
            on c1_0.client_id=a1_0.client_id 
    where
        c1_0.client_id=?
2025-06-20T02:30:12.629+02:00 DEBUG 18208 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:30:12.629+02:00 DEBUG 18208 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:30:12.652+02:00 DEBUG 18208 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        lr1_0.id,
        lr1_0.created_at,
        lr1_0.notes,
        lr1_0.ordered_by_id,
        lr1_0.patient_id,
        lr1_0.reference_range,
        lr1_0.result_date,
        lr1_0.result_value,
        lr1_0.status,
        lr1_0.test_name,
        lr1_0.unit,
        lr1_0.updated_at,
        lr1_0.version 
    from
        lab_results lr1_0 
    left join
        clients p1_0 
            on p1_0.client_id=lr1_0.patient_id 
    where
        p1_0.client_id=?
2025-06-20T02:30:12.740+02:00 DEBUG 18208 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    left join
        clients pt1_0 
            on pt1_0.client_id=mp1_0.prescribed_to_id 
    where
        pt1_0.client_id=?
2025-06-20T02:30:15.044+02:00 DEBUG 18208 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:30:15.065+02:00 DEBUG 18208 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=?
2025-06-20T02:30:16.833+02:00 DEBUG 18208 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:30:16.851+02:00 DEBUG 18208 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=?
2025-06-20T02:30:17.900+02:00 DEBUG 18208 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:30:17.978+02:00 DEBUG 18208 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T02:30:18.008+02:00  WARN 18208 --- [back] [http-nio-8080-exec-6] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [com.tfg.back.exceptions.user.UnauthorizedToPerformThisAction: Client with email: c72aa133-39f6-4617-9f36-887519ec84d8 is not authorized to perform this action]
2025-06-20T02:30:19.819+02:00 DEBUG 18208 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:30:19.843+02:00 DEBUG 18208 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        c1_1.full_name 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T02:30:19.848+02:00 DEBUG 18208 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=? 
        and a1_0.status<>'CANCELLED' 
    order by
        a1_0.appointment_date_time desc 
    limit
        ?
2025-06-20T02:30:19.853+02:00 DEBUG 18208 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    where
        mp1_0.prescribed_to_id=? 
    order by
        mp1_0.created_at desc 
    limit
        ?
2025-06-20T02:30:19.864+02:00 DEBUG 18208 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=? 
        and not(n1_0.seen) 
    order by
        n1_0.date desc 
    limit
        ?
2025-06-20T02:30:21.475+02:00 DEBUG 18208 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:30:21.510+02:00 DEBUG 18208 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T02:30:21.560+02:00 DEBUG 18208 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:30:21.588+02:00 DEBUG 18208 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        c1_1.full_name 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T02:30:21.599+02:00 DEBUG 18208 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=? 
        and a1_0.status<>'CANCELLED' 
    order by
        a1_0.appointment_date_time desc 
    limit
        ?
2025-06-20T02:30:21.610+02:00 DEBUG 18208 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    where
        mp1_0.prescribed_to_id=? 
    order by
        mp1_0.created_at desc 
    limit
        ?
2025-06-20T02:30:21.621+02:00 DEBUG 18208 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=? 
        and not(n1_0.seen) 
    order by
        n1_0.date desc 
    limit
        ?
2025-06-20T02:30:24.051+02:00 DEBUG 18208 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:30:24.093+02:00 DEBUG 18208 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=?
2025-06-20T02:30:42.740+02:00 DEBUG 18208 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:30:42.804+02:00 DEBUG 18208 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T02:30:42.829+02:00  WARN 18208 --- [back] [http-nio-8080-exec-9] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [com.tfg.back.exceptions.user.UnauthorizedToPerformThisAction: Client with email: c72aa133-39f6-4617-9f36-887519ec84d8 is not authorized to perform this action]
2025-06-20T02:32:37.851+02:00 DEBUG 12320 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table clients 
       modify column membership_level enum ('BASIC','INSURANCE_COVERED','PREMIUM','VIP') not null
2025-06-20T02:32:38.031+02:00 DEBUG 12320 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table doctors 
       modify column specialization enum ('CARDIOLOGY','NEUROLOGY','ONCOLOGY','ORTHOPEDICS','PEDIATRICS') not null
2025-06-20T02:32:38.067+02:00 DEBUG 12320 --- [back] [restartedMain] org.hibernate.SQL                        : 
    alter table users 
       modify column status enum ('ACTIVE','INACTIVE','SUSPENDED') not null
2025-06-20T02:32:39.733+02:00  WARN 12320 --- [back] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-20T02:32:39.751+02:00  WARN 12320 --- [back] [restartedMain] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-06-20T02:32:42.563+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:32:42.695+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T02:32:42.804+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:32:42.880+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        c1_1.full_name 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T02:32:42.903+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=? 
        and a1_0.status<>'CANCELLED' 
    order by
        a1_0.appointment_date_time desc 
    limit
        ?
2025-06-20T02:32:42.922+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    where
        mp1_0.prescribed_to_id=? 
    order by
        mp1_0.created_at desc 
    limit
        ?
2025-06-20T02:32:42.949+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=? 
        and not(n1_0.seen) 
    order by
        n1_0.date desc 
    limit
        ?
2025-06-20T02:32:43.744+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:32:43.763+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=?
2025-06-20T02:32:44.806+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:32:44.857+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T02:32:44.881+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    where
        n1_0.id=?
2025-06-20T02:32:44.960+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    update
        notifications 
    set
        date=?,
        message=?,
        seen=?,
        title=?,
        type=?,
        user_id=? 
    where
        id=?
2025-06-20T02:32:46.530+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:32:46.558+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T02:32:46.632+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:32:46.699+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        c1_1.full_name 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T02:32:46.709+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=? 
        and a1_0.status<>'CANCELLED' 
    order by
        a1_0.appointment_date_time desc 
    limit
        ?
2025-06-20T02:32:46.723+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    where
        mp1_0.prescribed_to_id=? 
    order by
        mp1_0.created_at desc 
    limit
        ?
2025-06-20T02:32:46.739+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=? 
        and not(n1_0.seen) 
    order by
        n1_0.date desc 
    limit
        ?
2025-06-20T02:33:59.391+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:33:59.421+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T02:34:01.093+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:34:01.115+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    left join
        clients c1_0 
            on c1_0.client_id=a1_0.client_id 
    where
        c1_0.client_id=?
2025-06-20T02:34:01.721+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:34:01.721+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:34:01.752+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    left join
        clients pt1_0 
            on pt1_0.client_id=mp1_0.prescribed_to_id 
    where
        pt1_0.client_id=?
2025-06-20T02:34:01.755+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        lr1_0.id,
        lr1_0.created_at,
        lr1_0.notes,
        lr1_0.ordered_by_id,
        lr1_0.patient_id,
        lr1_0.reference_range,
        lr1_0.result_date,
        lr1_0.result_value,
        lr1_0.status,
        lr1_0.test_name,
        lr1_0.unit,
        lr1_0.updated_at,
        lr1_0.version 
    from
        lab_results lr1_0 
    left join
        clients p1_0 
            on p1_0.client_id=lr1_0.patient_id 
    where
        p1_0.client_id=?
2025-06-20T02:34:02.857+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:34:02.880+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    left join
        clients c1_0 
            on c1_0.client_id=a1_0.client_id 
    where
        c1_0.client_id=?
2025-06-20T02:34:03.305+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:34:03.308+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:34:03.335+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        lr1_0.id,
        lr1_0.created_at,
        lr1_0.notes,
        lr1_0.ordered_by_id,
        lr1_0.patient_id,
        lr1_0.reference_range,
        lr1_0.result_date,
        lr1_0.result_value,
        lr1_0.status,
        lr1_0.test_name,
        lr1_0.unit,
        lr1_0.updated_at,
        lr1_0.version 
    from
        lab_results lr1_0 
    left join
        clients p1_0 
            on p1_0.client_id=lr1_0.patient_id 
    where
        p1_0.client_id=?
2025-06-20T02:34:03.337+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    left join
        clients pt1_0 
            on pt1_0.client_id=mp1_0.prescribed_to_id 
    where
        pt1_0.client_id=?
2025-06-20T02:34:03.706+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:34:03.729+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=?
2025-06-20T02:34:06.799+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:34:06.816+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        fb1_0.id,
        fb1_0.author_id,
        fb1_0.comment,
        fb1_0.created_at,
        fb1_0.rating,
        fb1_0.type,
        fb1_0.written_to_id 
    from
        feedbacks fb1_0 
    join
        clients a1_0 
            on a1_0.client_id=fb1_0.author_id 
    where
        a1_0.client_id=?
2025-06-20T02:34:06.823+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T02:34:07.211+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:34:07.243+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=?
2025-06-20T02:34:08.215+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:34:08.267+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        fb1_0.id,
        fb1_0.author_id,
        fb1_0.comment,
        fb1_0.created_at,
        fb1_0.rating,
        fb1_0.type,
        fb1_0.written_to_id 
    from
        feedbacks fb1_0 
    join
        clients a1_0 
            on a1_0.client_id=fb1_0.author_id 
    where
        a1_0.client_id=?
2025-06-20T02:34:08.278+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T02:34:14.329+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:34:14.419+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T02:34:14.452+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    insert 
    into
        feedbacks
        (author_id, comment, created_at, rating, type, written_to_id) 
    values
        (?, ?, ?, ?, ?, ?)
2025-06-20T02:34:17.328+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:34:17.371+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=?
2025-06-20T02:34:18.196+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:34:18.245+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        c1_1.full_name 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T02:34:18.256+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=? 
        and a1_0.status<>'CANCELLED' 
    order by
        a1_0.appointment_date_time desc 
    limit
        ?
2025-06-20T02:34:18.269+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    where
        mp1_0.prescribed_to_id=? 
    order by
        mp1_0.created_at desc 
    limit
        ?
2025-06-20T02:34:18.280+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=? 
        and not(n1_0.seen) 
    order by
        n1_0.date desc 
    limit
        ?
2025-06-20T02:51:48.362+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:51:48.418+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T02:51:49.016+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:51:49.036+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    left join
        clients c1_0 
            on c1_0.client_id=a1_0.client_id 
    where
        c1_0.client_id=?
2025-06-20T02:51:49.571+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:51:49.571+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:51:49.593+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    left join
        clients pt1_0 
            on pt1_0.client_id=mp1_0.prescribed_to_id 
    where
        pt1_0.client_id=?
2025-06-20T02:51:49.597+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        lr1_0.id,
        lr1_0.created_at,
        lr1_0.notes,
        lr1_0.ordered_by_id,
        lr1_0.patient_id,
        lr1_0.reference_range,
        lr1_0.result_date,
        lr1_0.result_value,
        lr1_0.status,
        lr1_0.test_name,
        lr1_0.unit,
        lr1_0.updated_at,
        lr1_0.version 
    from
        lab_results lr1_0 
    left join
        clients p1_0 
            on p1_0.client_id=lr1_0.patient_id 
    where
        p1_0.client_id=?
2025-06-20T02:51:50.149+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:51:50.178+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=?
2025-06-20T02:51:51.135+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:51:51.156+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        fb1_0.id,
        fb1_0.author_id,
        fb1_0.comment,
        fb1_0.created_at,
        fb1_0.rating,
        fb1_0.type,
        fb1_0.written_to_id 
    from
        feedbacks fb1_0 
    join
        clients a1_0 
            on a1_0.client_id=fb1_0.author_id 
    where
        a1_0.client_id=?
2025-06-20T02:51:51.161+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T02:51:52.902+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:51:52.915+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        fb1_0.id,
        fb1_0.author_id,
        fb1_0.comment,
        fb1_0.created_at,
        fb1_0.rating,
        fb1_0.type,
        fb1_0.written_to_id 
    from
        feedbacks fb1_0 
    join
        clients a1_0 
            on a1_0.client_id=fb1_0.author_id 
    where
        a1_0.client_id=?
2025-06-20T02:51:52.922+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T02:51:53.713+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:51:53.729+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=?
2025-06-20T02:51:54.127+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:51:54.128+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:51:54.144+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    left join
        clients pt1_0 
            on pt1_0.client_id=mp1_0.prescribed_to_id 
    where
        pt1_0.client_id=?
2025-06-20T02:51:54.146+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        lr1_0.id,
        lr1_0.created_at,
        lr1_0.notes,
        lr1_0.ordered_by_id,
        lr1_0.patient_id,
        lr1_0.reference_range,
        lr1_0.result_date,
        lr1_0.result_value,
        lr1_0.status,
        lr1_0.test_name,
        lr1_0.unit,
        lr1_0.updated_at,
        lr1_0.version 
    from
        lab_results lr1_0 
    left join
        clients p1_0 
            on p1_0.client_id=lr1_0.patient_id 
    where
        p1_0.client_id=?
2025-06-20T02:51:54.565+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:51:54.588+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    left join
        clients c1_0 
            on c1_0.client_id=a1_0.client_id 
    where
        c1_0.client_id=?
2025-06-20T02:51:55.097+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:51:55.119+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T02:51:55.586+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:51:55.607+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        c1_1.full_name 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T02:51:55.611+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=? 
        and a1_0.status<>'CANCELLED' 
    order by
        a1_0.appointment_date_time desc 
    limit
        ?
2025-06-20T02:51:55.615+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    where
        mp1_0.prescribed_to_id=? 
    order by
        mp1_0.created_at desc 
    limit
        ?
2025-06-20T02:51:55.625+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=? 
        and not(n1_0.seen) 
    order by
        n1_0.date desc 
    limit
        ?
2025-06-20T02:51:56.465+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:51:56.490+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T02:51:56.945+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:51:56.959+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    left join
        clients c1_0 
            on c1_0.client_id=a1_0.client_id 
    where
        c1_0.client_id=?
2025-06-20T02:52:07.368+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:52:07.368+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:52:07.387+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    left join
        clients pt1_0 
            on pt1_0.client_id=mp1_0.prescribed_to_id 
    where
        pt1_0.client_id=?
2025-06-20T02:52:07.387+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        lr1_0.id,
        lr1_0.created_at,
        lr1_0.notes,
        lr1_0.ordered_by_id,
        lr1_0.patient_id,
        lr1_0.reference_range,
        lr1_0.result_date,
        lr1_0.result_value,
        lr1_0.status,
        lr1_0.test_name,
        lr1_0.unit,
        lr1_0.updated_at,
        lr1_0.version 
    from
        lab_results lr1_0 
    left join
        clients p1_0 
            on p1_0.client_id=lr1_0.patient_id 
    where
        p1_0.client_id=?
2025-06-20T02:52:08.080+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:52:08.108+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=?
2025-06-20T02:53:08.647+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:53:08.667+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        c1_1.full_name 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T02:53:08.671+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=? 
        and a1_0.status<>'CANCELLED' 
    order by
        a1_0.appointment_date_time desc 
    limit
        ?
2025-06-20T02:53:08.680+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    where
        mp1_0.prescribed_to_id=? 
    order by
        mp1_0.created_at desc 
    limit
        ?
2025-06-20T02:53:08.687+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=? 
        and not(n1_0.seen) 
    order by
        n1_0.date desc 
    limit
        ?
2025-06-20T02:53:09.775+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:53:09.802+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T02:53:09.833+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:53:09.849+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        c1_1.full_name 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T02:53:09.853+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=? 
        and a1_0.status<>'CANCELLED' 
    order by
        a1_0.appointment_date_time desc 
    limit
        ?
2025-06-20T02:53:09.855+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    where
        mp1_0.prescribed_to_id=? 
    order by
        mp1_0.created_at desc 
    limit
        ?
2025-06-20T02:53:09.864+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=? 
        and not(n1_0.seen) 
    order by
        n1_0.date desc 
    limit
        ?
2025-06-20T02:53:41.972+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:53:42.002+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T02:53:42.040+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:53:42.053+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        c1_1.full_name 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T02:53:42.058+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=? 
        and a1_0.status<>'CANCELLED' 
    order by
        a1_0.appointment_date_time desc 
    limit
        ?
2025-06-20T02:53:42.062+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    where
        mp1_0.prescribed_to_id=? 
    order by
        mp1_0.created_at desc 
    limit
        ?
2025-06-20T02:53:42.066+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=? 
        and not(n1_0.seen) 
    order by
        n1_0.date desc 
    limit
        ?
2025-06-20T02:53:44.747+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:53:44.777+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T02:53:44.813+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:53:44.829+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        c1_1.full_name 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T02:53:44.833+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=? 
        and a1_0.status<>'CANCELLED' 
    order by
        a1_0.appointment_date_time desc 
    limit
        ?
2025-06-20T02:53:44.840+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    where
        mp1_0.prescribed_to_id=? 
    order by
        mp1_0.created_at desc 
    limit
        ?
2025-06-20T02:53:44.846+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=? 
        and not(n1_0.seen) 
    order by
        n1_0.date desc 
    limit
        ?
2025-06-20T02:53:49.683+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:53:49.728+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T02:53:50.288+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:53:50.330+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    left join
        clients c1_0 
            on c1_0.client_id=a1_0.client_id 
    where
        c1_0.client_id=?
2025-06-20T02:53:50.917+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:53:50.962+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T02:53:51.610+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:53:51.647+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        c1_1.full_name 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T02:53:51.659+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=? 
        and a1_0.status<>'CANCELLED' 
    order by
        a1_0.appointment_date_time desc 
    limit
        ?
2025-06-20T02:53:51.673+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    where
        mp1_0.prescribed_to_id=? 
    order by
        mp1_0.created_at desc 
    limit
        ?
2025-06-20T02:53:51.689+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=? 
        and not(n1_0.seen) 
    order by
        n1_0.date desc 
    limit
        ?
2025-06-20T02:53:54.431+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:53:54.453+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T02:53:54.914+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:53:54.935+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        c1_1.full_name 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T02:53:54.941+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=? 
        and a1_0.status<>'CANCELLED' 
    order by
        a1_0.appointment_date_time desc 
    limit
        ?
2025-06-20T02:53:54.945+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    where
        mp1_0.prescribed_to_id=? 
    order by
        mp1_0.created_at desc 
    limit
        ?
2025-06-20T02:53:54.952+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=? 
        and not(n1_0.seen) 
    order by
        n1_0.date desc 
    limit
        ?
2025-06-20T02:54:11.971+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:54:11.994+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T02:54:12.673+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:54:12.709+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    left join
        clients c1_0 
            on c1_0.client_id=a1_0.client_id 
    where
        c1_0.client_id=?
2025-06-20T02:54:13.589+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:54:13.590+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:54:13.634+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    left join
        clients pt1_0 
            on pt1_0.client_id=mp1_0.prescribed_to_id 
    where
        pt1_0.client_id=?
2025-06-20T02:54:13.636+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        lr1_0.id,
        lr1_0.created_at,
        lr1_0.notes,
        lr1_0.ordered_by_id,
        lr1_0.patient_id,
        lr1_0.reference_range,
        lr1_0.result_date,
        lr1_0.result_value,
        lr1_0.status,
        lr1_0.test_name,
        lr1_0.unit,
        lr1_0.updated_at,
        lr1_0.version 
    from
        lab_results lr1_0 
    left join
        clients p1_0 
            on p1_0.client_id=lr1_0.patient_id 
    where
        p1_0.client_id=?
2025-06-20T02:54:14.186+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:54:14.225+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=?
2025-06-20T02:54:15.454+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:54:15.491+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        c1_1.full_name 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T02:54:15.500+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=? 
        and a1_0.status<>'CANCELLED' 
    order by
        a1_0.appointment_date_time desc 
    limit
        ?
2025-06-20T02:54:15.514+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    where
        mp1_0.prescribed_to_id=? 
    order by
        mp1_0.created_at desc 
    limit
        ?
2025-06-20T02:54:15.534+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=? 
        and not(n1_0.seen) 
    order by
        n1_0.date desc 
    limit
        ?
2025-06-20T02:54:16.865+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:54:16.887+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T02:54:17.290+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:54:17.314+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        c1_1.full_name 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T02:54:17.322+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=? 
        and a1_0.status<>'CANCELLED' 
    order by
        a1_0.appointment_date_time desc 
    limit
        ?
2025-06-20T02:54:17.329+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    where
        mp1_0.prescribed_to_id=? 
    order by
        mp1_0.created_at desc 
    limit
        ?
2025-06-20T02:54:17.339+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=? 
        and not(n1_0.seen) 
    order by
        n1_0.date desc 
    limit
        ?
2025-06-20T02:56:13.624+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:56:13.641+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    left join
        clients c1_0 
            on c1_0.client_id=a1_0.client_id 
    where
        c1_0.client_id=?
2025-06-20T02:56:14.951+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:56:14.988+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        c1_1.full_name 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T02:56:14.998+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=? 
        and a1_0.status<>'CANCELLED' 
    order by
        a1_0.appointment_date_time desc 
    limit
        ?
2025-06-20T02:56:15.013+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    where
        mp1_0.prescribed_to_id=? 
    order by
        mp1_0.created_at desc 
    limit
        ?
2025-06-20T02:56:15.030+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=? 
        and not(n1_0.seen) 
    order by
        n1_0.date desc 
    limit
        ?
2025-06-20T02:56:29.790+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:56:29.833+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T02:56:30.581+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:56:30.618+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    left join
        clients c1_0 
            on c1_0.client_id=a1_0.client_id 
    where
        c1_0.client_id=?
2025-06-20T02:56:31.657+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:56:31.661+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:56:31.707+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    left join
        clients pt1_0 
            on pt1_0.client_id=mp1_0.prescribed_to_id 
    where
        pt1_0.client_id=?
2025-06-20T02:56:31.707+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        lr1_0.id,
        lr1_0.created_at,
        lr1_0.notes,
        lr1_0.ordered_by_id,
        lr1_0.patient_id,
        lr1_0.reference_range,
        lr1_0.result_date,
        lr1_0.result_value,
        lr1_0.status,
        lr1_0.test_name,
        lr1_0.unit,
        lr1_0.updated_at,
        lr1_0.version 
    from
        lab_results lr1_0 
    left join
        clients p1_0 
            on p1_0.client_id=lr1_0.patient_id 
    where
        p1_0.client_id=?
2025-06-20T02:56:32.340+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:56:32.379+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=?
2025-06-20T02:56:33.687+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:56:33.708+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        c1_1.full_name 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T02:56:33.714+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=? 
        and a1_0.status<>'CANCELLED' 
    order by
        a1_0.appointment_date_time desc 
    limit
        ?
2025-06-20T02:56:33.724+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    where
        mp1_0.prescribed_to_id=? 
    order by
        mp1_0.created_at desc 
    limit
        ?
2025-06-20T02:56:33.735+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=? 
        and not(n1_0.seen) 
    order by
        n1_0.date desc 
    limit
        ?
2025-06-20T02:56:39.393+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:56:39.429+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T02:56:39.980+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:56:40.021+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    left join
        clients c1_0 
            on c1_0.client_id=a1_0.client_id 
    where
        c1_0.client_id=?
2025-06-20T02:56:40.560+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:56:40.561+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:56:40.585+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    left join
        clients pt1_0 
            on pt1_0.client_id=mp1_0.prescribed_to_id 
    where
        pt1_0.client_id=?
2025-06-20T02:56:40.585+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        lr1_0.id,
        lr1_0.created_at,
        lr1_0.notes,
        lr1_0.ordered_by_id,
        lr1_0.patient_id,
        lr1_0.reference_range,
        lr1_0.result_date,
        lr1_0.result_value,
        lr1_0.status,
        lr1_0.test_name,
        lr1_0.unit,
        lr1_0.updated_at,
        lr1_0.version 
    from
        lab_results lr1_0 
    left join
        clients p1_0 
            on p1_0.client_id=lr1_0.patient_id 
    where
        p1_0.client_id=?
2025-06-20T02:56:41.070+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:56:41.107+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T02:56:41.788+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:56:41.828+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        c1_1.full_name 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T02:56:41.840+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=? 
        and a1_0.status<>'CANCELLED' 
    order by
        a1_0.appointment_date_time desc 
    limit
        ?
2025-06-20T02:56:41.854+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    where
        mp1_0.prescribed_to_id=? 
    order by
        mp1_0.created_at desc 
    limit
        ?
2025-06-20T02:56:41.868+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=? 
        and not(n1_0.seen) 
    order by
        n1_0.date desc 
    limit
        ?
2025-06-20T02:56:45.344+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:56:45.367+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T02:56:46.456+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:56:46.470+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        c1_1.full_name 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T02:56:46.474+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=? 
        and a1_0.status<>'CANCELLED' 
    order by
        a1_0.appointment_date_time desc 
    limit
        ?
2025-06-20T02:56:46.478+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    where
        mp1_0.prescribed_to_id=? 
    order by
        mp1_0.created_at desc 
    limit
        ?
2025-06-20T02:56:46.486+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=? 
        and not(n1_0.seen) 
    order by
        n1_0.date desc 
    limit
        ?
2025-06-20T02:59:31.038+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:59:31.053+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    left join
        clients c1_0 
            on c1_0.client_id=a1_0.client_id 
    where
        c1_0.client_id=?
2025-06-20T02:59:31.625+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:59:31.647+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T02:59:32.194+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T02:59:32.213+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        c1_1.full_name 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T02:59:32.217+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=? 
        and a1_0.status<>'CANCELLED' 
    order by
        a1_0.appointment_date_time desc 
    limit
        ?
2025-06-20T02:59:32.222+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    where
        mp1_0.prescribed_to_id=? 
    order by
        mp1_0.created_at desc 
    limit
        ?
2025-06-20T02:59:32.231+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=? 
        and not(n1_0.seen) 
    order by
        n1_0.date desc 
    limit
        ?
2025-06-20T03:24:14.131+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:24:14.161+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:24:14.192+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:24:14.206+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        c1_1.full_name 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:24:14.211+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=? 
        and a1_0.status<>'CANCELLED' 
    order by
        a1_0.appointment_date_time desc 
    limit
        ?
2025-06-20T03:24:14.216+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    where
        mp1_0.prescribed_to_id=? 
    order by
        mp1_0.created_at desc 
    limit
        ?
2025-06-20T03:24:14.223+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=? 
        and not(n1_0.seen) 
    order by
        n1_0.date desc 
    limit
        ?
2025-06-20T03:24:38.973+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:24:38.993+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:24:39.597+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:24:39.618+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    left join
        clients c1_0 
            on c1_0.client_id=a1_0.client_id 
    where
        c1_0.client_id=?
2025-06-20T03:24:40.219+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:24:40.258+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        c1_1.full_name 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:24:40.270+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=? 
        and a1_0.status<>'CANCELLED' 
    order by
        a1_0.appointment_date_time desc 
    limit
        ?
2025-06-20T03:24:40.285+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    where
        mp1_0.prescribed_to_id=? 
    order by
        mp1_0.created_at desc 
    limit
        ?
2025-06-20T03:24:40.305+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=? 
        and not(n1_0.seen) 
    order by
        n1_0.date desc 
    limit
        ?
2025-06-20T03:25:45.180+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:25:45.201+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:25:45.234+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:25:45.249+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        c1_1.full_name 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:25:45.251+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=? 
        and a1_0.status<>'CANCELLED' 
    order by
        a1_0.appointment_date_time desc 
    limit
        ?
2025-06-20T03:25:45.254+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    where
        mp1_0.prescribed_to_id=? 
    order by
        mp1_0.created_at desc 
    limit
        ?
2025-06-20T03:25:45.261+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=? 
        and not(n1_0.seen) 
    order by
        n1_0.date desc 
    limit
        ?
2025-06-20T03:26:12.135+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:26:12.152+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:26:12.175+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:26:12.184+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        c1_1.full_name 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:26:12.188+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=? 
        and a1_0.status<>'CANCELLED' 
    order by
        a1_0.appointment_date_time desc 
    limit
        ?
2025-06-20T03:26:12.191+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    where
        mp1_0.prescribed_to_id=? 
    order by
        mp1_0.created_at desc 
    limit
        ?
2025-06-20T03:26:12.193+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=? 
        and not(n1_0.seen) 
    order by
        n1_0.date desc 
    limit
        ?
2025-06-20T03:26:39.453+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:26:39.472+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:26:39.910+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:26:39.927+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    left join
        clients c1_0 
            on c1_0.client_id=a1_0.client_id 
    where
        c1_0.client_id=?
2025-06-20T03:26:40.330+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:26:40.331+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:26:40.345+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    left join
        clients pt1_0 
            on pt1_0.client_id=mp1_0.prescribed_to_id 
    where
        pt1_0.client_id=?
2025-06-20T03:26:40.472+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        lr1_0.id,
        lr1_0.created_at,
        lr1_0.notes,
        lr1_0.ordered_by_id,
        lr1_0.patient_id,
        lr1_0.reference_range,
        lr1_0.result_date,
        lr1_0.result_value,
        lr1_0.status,
        lr1_0.test_name,
        lr1_0.unit,
        lr1_0.updated_at,
        lr1_0.version 
    from
        lab_results lr1_0 
    left join
        clients p1_0 
            on p1_0.client_id=lr1_0.patient_id 
    where
        p1_0.client_id=?
2025-06-20T03:26:40.763+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:26:40.821+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=?
2025-06-20T03:26:41.711+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:26:41.727+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        fb1_0.id,
        fb1_0.author_id,
        fb1_0.comment,
        fb1_0.created_at,
        fb1_0.rating,
        fb1_0.type,
        fb1_0.written_to_id 
    from
        feedbacks fb1_0 
    join
        clients a1_0 
            on a1_0.client_id=fb1_0.author_id 
    where
        a1_0.client_id=?
2025-06-20T03:26:41.731+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:26:42.551+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:26:42.577+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        fb1_0.id,
        fb1_0.author_id,
        fb1_0.comment,
        fb1_0.created_at,
        fb1_0.rating,
        fb1_0.type,
        fb1_0.written_to_id 
    from
        feedbacks fb1_0 
    join
        clients a1_0 
            on a1_0.client_id=fb1_0.author_id 
    where
        a1_0.client_id=?
2025-06-20T03:26:42.582+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:26:44.011+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:26:44.026+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=?
2025-06-20T03:26:44.457+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:26:44.462+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:26:44.508+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    left join
        clients pt1_0 
            on pt1_0.client_id=mp1_0.prescribed_to_id 
    where
        pt1_0.client_id=?
2025-06-20T03:26:44.508+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        lr1_0.id,
        lr1_0.created_at,
        lr1_0.notes,
        lr1_0.ordered_by_id,
        lr1_0.patient_id,
        lr1_0.reference_range,
        lr1_0.result_date,
        lr1_0.result_value,
        lr1_0.status,
        lr1_0.test_name,
        lr1_0.unit,
        lr1_0.updated_at,
        lr1_0.version 
    from
        lab_results lr1_0 
    left join
        clients p1_0 
            on p1_0.client_id=lr1_0.patient_id 
    where
        p1_0.client_id=?
2025-06-20T03:26:44.844+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:26:44.877+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    left join
        clients c1_0 
            on c1_0.client_id=a1_0.client_id 
    where
        c1_0.client_id=?
2025-06-20T03:26:45.670+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:26:45.775+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        c1_1.full_name 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:26:45.779+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=? 
        and a1_0.status<>'CANCELLED' 
    order by
        a1_0.appointment_date_time desc 
    limit
        ?
2025-06-20T03:26:45.784+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    where
        mp1_0.prescribed_to_id=? 
    order by
        mp1_0.created_at desc 
    limit
        ?
2025-06-20T03:26:45.790+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=? 
        and not(n1_0.seen) 
    order by
        n1_0.date desc 
    limit
        ?
2025-06-20T03:26:46.247+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:26:46.269+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:26:47.701+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:26:47.723+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        c1_1.full_name 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:26:47.726+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=? 
        and a1_0.status<>'CANCELLED' 
    order by
        a1_0.appointment_date_time desc 
    limit
        ?
2025-06-20T03:26:47.730+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    where
        mp1_0.prescribed_to_id=? 
    order by
        mp1_0.created_at desc 
    limit
        ?
2025-06-20T03:26:47.737+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=? 
        and not(n1_0.seen) 
    order by
        n1_0.date desc 
    limit
        ?
2025-06-20T03:26:48.944+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:26:48.960+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:27:04.442+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:27:04.457+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        c1_1.full_name 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:27:04.460+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=? 
        and a1_0.status<>'CANCELLED' 
    order by
        a1_0.appointment_date_time desc 
    limit
        ?
2025-06-20T03:27:04.464+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    where
        mp1_0.prescribed_to_id=? 
    order by
        mp1_0.created_at desc 
    limit
        ?
2025-06-20T03:27:04.472+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=? 
        and not(n1_0.seen) 
    order by
        n1_0.date desc 
    limit
        ?
2025-06-20T03:27:33.224+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:27:33.241+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=?
2025-06-20T03:27:34.191+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:27:34.209+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        fb1_0.id,
        fb1_0.author_id,
        fb1_0.comment,
        fb1_0.created_at,
        fb1_0.rating,
        fb1_0.type,
        fb1_0.written_to_id 
    from
        feedbacks fb1_0 
    join
        clients a1_0 
            on a1_0.client_id=fb1_0.author_id 
    where
        a1_0.client_id=?
2025-06-20T03:27:34.213+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:27:36.622+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:27:36.648+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:27:37.930+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:27:37.952+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        c1_1.full_name 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:27:37.955+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=? 
        and a1_0.status<>'CANCELLED' 
    order by
        a1_0.appointment_date_time desc 
    limit
        ?
2025-06-20T03:27:37.961+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    where
        mp1_0.prescribed_to_id=? 
    order by
        mp1_0.created_at desc 
    limit
        ?
2025-06-20T03:27:37.968+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=? 
        and not(n1_0.seen) 
    order by
        n1_0.date desc 
    limit
        ?
2025-06-20T03:29:06.910+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:29:06.932+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:29:12.393+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:29:12.408+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        c1_1.full_name 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:29:12.410+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=? 
        and a1_0.status<>'CANCELLED' 
    order by
        a1_0.appointment_date_time desc 
    limit
        ?
2025-06-20T03:29:12.416+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    where
        mp1_0.prescribed_to_id=? 
    order by
        mp1_0.created_at desc 
    limit
        ?
2025-06-20T03:29:12.422+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=? 
        and not(n1_0.seen) 
    order by
        n1_0.date desc 
    limit
        ?
2025-06-20T03:29:13.010+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:29:13.024+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    left join
        clients c1_0 
            on c1_0.client_id=a1_0.client_id 
    where
        c1_0.client_id=?
2025-06-20T03:29:13.699+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:29:13.822+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:29:14.275+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:29:14.290+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        c1_1.full_name 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:29:14.293+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=? 
        and a1_0.status<>'CANCELLED' 
    order by
        a1_0.appointment_date_time desc 
    limit
        ?
2025-06-20T03:29:14.299+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    where
        mp1_0.prescribed_to_id=? 
    order by
        mp1_0.created_at desc 
    limit
        ?
2025-06-20T03:29:14.305+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=? 
        and not(n1_0.seen) 
    order by
        n1_0.date desc 
    limit
        ?
2025-06-20T03:29:37.279+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:29:37.300+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:29:48.505+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:29:48.527+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        c1_1.full_name 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:29:48.533+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=? 
        and a1_0.status<>'CANCELLED' 
    order by
        a1_0.appointment_date_time desc 
    limit
        ?
2025-06-20T03:29:48.543+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    where
        mp1_0.prescribed_to_id=? 
    order by
        mp1_0.created_at desc 
    limit
        ?
2025-06-20T03:29:48.553+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=? 
        and not(n1_0.seen) 
    order by
        n1_0.date desc 
    limit
        ?
2025-06-20T03:29:49.515+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:29:49.539+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:29:49.580+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:29:49.590+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        c1_1.full_name 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:29:49.594+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=? 
        and a1_0.status<>'CANCELLED' 
    order by
        a1_0.appointment_date_time desc 
    limit
        ?
2025-06-20T03:29:49.600+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    where
        mp1_0.prescribed_to_id=? 
    order by
        mp1_0.created_at desc 
    limit
        ?
2025-06-20T03:29:49.604+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=? 
        and not(n1_0.seen) 
    order by
        n1_0.date desc 
    limit
        ?
2025-06-20T03:29:57.848+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:29:57.871+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:29:57.913+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:29:57.926+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        c1_1.full_name 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:29:57.930+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=? 
        and a1_0.status<>'CANCELLED' 
    order by
        a1_0.appointment_date_time desc 
    limit
        ?
2025-06-20T03:29:57.933+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    where
        mp1_0.prescribed_to_id=? 
    order by
        mp1_0.created_at desc 
    limit
        ?
2025-06-20T03:29:57.938+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=? 
        and not(n1_0.seen) 
    order by
        n1_0.date desc 
    limit
        ?
2025-06-20T03:31:06.771+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:31:06.785+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    left join
        clients c1_0 
            on c1_0.client_id=a1_0.client_id 
    where
        c1_0.client_id=?
2025-06-20T03:31:08.330+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:31:08.344+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        c1_1.full_name 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:31:08.347+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=? 
        and a1_0.status<>'CANCELLED' 
    order by
        a1_0.appointment_date_time desc 
    limit
        ?
2025-06-20T03:31:08.354+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    where
        mp1_0.prescribed_to_id=? 
    order by
        mp1_0.created_at desc 
    limit
        ?
2025-06-20T03:31:08.359+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=? 
        and not(n1_0.seen) 
    order by
        n1_0.date desc 
    limit
        ?
2025-06-20T03:31:18.672+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:31:18.695+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:31:23.439+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:31:23.452+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        c1_1.full_name 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:31:23.457+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=? 
        and a1_0.status<>'CANCELLED' 
    order by
        a1_0.appointment_date_time desc 
    limit
        ?
2025-06-20T03:31:23.460+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    where
        mp1_0.prescribed_to_id=? 
    order by
        mp1_0.created_at desc 
    limit
        ?
2025-06-20T03:31:23.467+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=? 
        and not(n1_0.seen) 
    order by
        n1_0.date desc 
    limit
        ?
2025-06-20T03:34:20.885+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:34:20.931+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:34:21.525+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:34:21.563+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    left join
        clients c1_0 
            on c1_0.client_id=a1_0.client_id 
    where
        c1_0.client_id=?
2025-06-20T03:34:22.173+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:34:22.211+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        c1_1.full_name 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:34:22.221+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=? 
        and a1_0.status<>'CANCELLED' 
    order by
        a1_0.appointment_date_time desc 
    limit
        ?
2025-06-20T03:34:22.233+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    where
        mp1_0.prescribed_to_id=? 
    order by
        mp1_0.created_at desc 
    limit
        ?
2025-06-20T03:34:22.249+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=? 
        and not(n1_0.seen) 
    order by
        n1_0.date desc 
    limit
        ?
2025-06-20T03:34:25.427+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:34:25.449+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    left join
        clients c1_0 
            on c1_0.client_id=a1_0.client_id 
    where
        c1_0.client_id=?
2025-06-20T03:34:25.997+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:34:25.997+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:34:26.024+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    left join
        clients pt1_0 
            on pt1_0.client_id=mp1_0.prescribed_to_id 
    where
        pt1_0.client_id=?
2025-06-20T03:34:26.139+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        lr1_0.id,
        lr1_0.created_at,
        lr1_0.notes,
        lr1_0.ordered_by_id,
        lr1_0.patient_id,
        lr1_0.reference_range,
        lr1_0.result_date,
        lr1_0.result_value,
        lr1_0.status,
        lr1_0.test_name,
        lr1_0.unit,
        lr1_0.updated_at,
        lr1_0.version 
    from
        lab_results lr1_0 
    left join
        clients p1_0 
            on p1_0.client_id=lr1_0.patient_id 
    where
        p1_0.client_id=?
2025-06-20T03:34:26.487+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:34:26.501+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=?
2025-06-20T03:34:27.378+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:34:27.417+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        fb1_0.id,
        fb1_0.author_id,
        fb1_0.comment,
        fb1_0.created_at,
        fb1_0.rating,
        fb1_0.type,
        fb1_0.written_to_id 
    from
        feedbacks fb1_0 
    join
        clients a1_0 
            on a1_0.client_id=fb1_0.author_id 
    where
        a1_0.client_id=?
2025-06-20T03:34:27.435+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:34:28.263+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:34:28.298+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        fb1_0.id,
        fb1_0.author_id,
        fb1_0.comment,
        fb1_0.created_at,
        fb1_0.rating,
        fb1_0.type,
        fb1_0.written_to_id 
    from
        feedbacks fb1_0 
    join
        clients a1_0 
            on a1_0.client_id=fb1_0.author_id 
    where
        a1_0.client_id=?
2025-06-20T03:34:28.306+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:34:36.782+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:34:36.826+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        c1_1.full_name 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:34:36.832+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=? 
        and a1_0.status<>'CANCELLED' 
    order by
        a1_0.appointment_date_time desc 
    limit
        ?
2025-06-20T03:34:36.841+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    where
        mp1_0.prescribed_to_id=? 
    order by
        mp1_0.created_at desc 
    limit
        ?
2025-06-20T03:34:36.848+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=? 
        and not(n1_0.seen) 
    order by
        n1_0.date desc 
    limit
        ?
2025-06-20T03:36:31.326+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:36:31.354+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:36:31.409+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:36:31.429+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        c1_1.full_name 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:36:31.433+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=? 
        and a1_0.status<>'CANCELLED' 
    order by
        a1_0.appointment_date_time desc 
    limit
        ?
2025-06-20T03:36:31.437+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    where
        mp1_0.prescribed_to_id=? 
    order by
        mp1_0.created_at desc 
    limit
        ?
2025-06-20T03:36:31.446+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=? 
        and not(n1_0.seen) 
    order by
        n1_0.date desc 
    limit
        ?
2025-06-20T03:37:19.581+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:37:19.637+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:37:20.384+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:37:20.416+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    left join
        clients c1_0 
            on c1_0.client_id=a1_0.client_id 
    where
        c1_0.client_id=?
2025-06-20T03:37:21.189+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:37:21.224+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        c1_1.full_name 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:37:21.234+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=? 
        and a1_0.status<>'CANCELLED' 
    order by
        a1_0.appointment_date_time desc 
    limit
        ?
2025-06-20T03:37:21.247+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    where
        mp1_0.prescribed_to_id=? 
    order by
        mp1_0.created_at desc 
    limit
        ?
2025-06-20T03:37:21.264+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=? 
        and not(n1_0.seen) 
    order by
        n1_0.date desc 
    limit
        ?
2025-06-20T03:39:05.383+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:39:05.403+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:39:06.140+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:39:06.155+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    left join
        clients c1_0 
            on c1_0.client_id=a1_0.client_id 
    where
        c1_0.client_id=?
2025-06-20T03:39:06.727+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:39:06.732+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:39:06.770+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    left join
        clients pt1_0 
            on pt1_0.client_id=mp1_0.prescribed_to_id 
    where
        pt1_0.client_id=?
2025-06-20T03:39:06.786+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        lr1_0.id,
        lr1_0.created_at,
        lr1_0.notes,
        lr1_0.ordered_by_id,
        lr1_0.patient_id,
        lr1_0.reference_range,
        lr1_0.result_date,
        lr1_0.result_value,
        lr1_0.status,
        lr1_0.test_name,
        lr1_0.unit,
        lr1_0.updated_at,
        lr1_0.version 
    from
        lab_results lr1_0 
    left join
        clients p1_0 
            on p1_0.client_id=lr1_0.patient_id 
    where
        p1_0.client_id=?
2025-06-20T03:39:07.199+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:39:07.216+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=?
2025-06-20T03:39:08.086+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:39:08.099+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        fb1_0.id,
        fb1_0.author_id,
        fb1_0.comment,
        fb1_0.created_at,
        fb1_0.rating,
        fb1_0.type,
        fb1_0.written_to_id 
    from
        feedbacks fb1_0 
    join
        clients a1_0 
            on a1_0.client_id=fb1_0.author_id 
    where
        a1_0.client_id=?
2025-06-20T03:39:08.106+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:40:17.732+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:40:17.749+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        c1_1.full_name 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:40:17.752+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=? 
        and a1_0.status<>'CANCELLED' 
    order by
        a1_0.appointment_date_time desc 
    limit
        ?
2025-06-20T03:40:17.760+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    where
        mp1_0.prescribed_to_id=? 
    order by
        mp1_0.created_at desc 
    limit
        ?
2025-06-20T03:40:17.768+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=? 
        and not(n1_0.seen) 
    order by
        n1_0.date desc 
    limit
        ?
2025-06-20T03:40:19.158+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:40:19.182+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:40:19.969+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:40:19.982+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    left join
        clients c1_0 
            on c1_0.client_id=a1_0.client_id 
    where
        c1_0.client_id=?
2025-06-20T03:40:20.848+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:40:20.848+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:40:20.866+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        lr1_0.id,
        lr1_0.created_at,
        lr1_0.notes,
        lr1_0.ordered_by_id,
        lr1_0.patient_id,
        lr1_0.reference_range,
        lr1_0.result_date,
        lr1_0.result_value,
        lr1_0.status,
        lr1_0.test_name,
        lr1_0.unit,
        lr1_0.updated_at,
        lr1_0.version 
    from
        lab_results lr1_0 
    left join
        clients p1_0 
            on p1_0.client_id=lr1_0.patient_id 
    where
        p1_0.client_id=?
2025-06-20T03:40:20.866+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    left join
        clients pt1_0 
            on pt1_0.client_id=mp1_0.prescribed_to_id 
    where
        pt1_0.client_id=?
2025-06-20T03:40:21.309+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:40:21.350+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=?
2025-06-20T03:40:22.695+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:40:22.717+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        fb1_0.id,
        fb1_0.author_id,
        fb1_0.comment,
        fb1_0.created_at,
        fb1_0.rating,
        fb1_0.type,
        fb1_0.written_to_id 
    from
        feedbacks fb1_0 
    join
        clients a1_0 
            on a1_0.client_id=fb1_0.author_id 
    where
        a1_0.client_id=?
2025-06-20T03:40:22.724+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:41:00.733+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:41:00.745+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        c1_1.full_name 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:41:00.748+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=? 
        and a1_0.status<>'CANCELLED' 
    order by
        a1_0.appointment_date_time desc 
    limit
        ?
2025-06-20T03:41:00.753+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    where
        mp1_0.prescribed_to_id=? 
    order by
        mp1_0.created_at desc 
    limit
        ?
2025-06-20T03:41:00.762+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=? 
        and not(n1_0.seen) 
    order by
        n1_0.date desc 
    limit
        ?
2025-06-20T03:41:14.498+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:41:14.522+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:41:15.204+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:41:15.238+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    left join
        clients c1_0 
            on c1_0.client_id=a1_0.client_id 
    where
        c1_0.client_id=?
2025-06-20T03:41:15.838+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:41:15.841+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:41:15.864+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    left join
        clients pt1_0 
            on pt1_0.client_id=mp1_0.prescribed_to_id 
    where
        pt1_0.client_id=?
2025-06-20T03:41:15.867+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        lr1_0.id,
        lr1_0.created_at,
        lr1_0.notes,
        lr1_0.ordered_by_id,
        lr1_0.patient_id,
        lr1_0.reference_range,
        lr1_0.result_date,
        lr1_0.result_value,
        lr1_0.status,
        lr1_0.test_name,
        lr1_0.unit,
        lr1_0.updated_at,
        lr1_0.version 
    from
        lab_results lr1_0 
    left join
        clients p1_0 
            on p1_0.client_id=lr1_0.patient_id 
    where
        p1_0.client_id=?
2025-06-20T03:41:16.552+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:41:16.590+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=?
2025-06-20T03:41:17.866+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:41:17.881+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        fb1_0.id,
        fb1_0.author_id,
        fb1_0.comment,
        fb1_0.created_at,
        fb1_0.rating,
        fb1_0.type,
        fb1_0.written_to_id 
    from
        feedbacks fb1_0 
    join
        clients a1_0 
            on a1_0.client_id=fb1_0.author_id 
    where
        a1_0.client_id=?
2025-06-20T03:41:17.885+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:41:18.847+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:41:18.865+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        fb1_0.id,
        fb1_0.author_id,
        fb1_0.comment,
        fb1_0.created_at,
        fb1_0.rating,
        fb1_0.type,
        fb1_0.written_to_id 
    from
        feedbacks fb1_0 
    join
        clients a1_0 
            on a1_0.client_id=fb1_0.author_id 
    where
        a1_0.client_id=?
2025-06-20T03:41:18.872+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:41:19.961+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:41:19.988+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        c1_1.full_name 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:41:19.994+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=? 
        and a1_0.status<>'CANCELLED' 
    order by
        a1_0.appointment_date_time desc 
    limit
        ?
2025-06-20T03:41:20.003+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    where
        mp1_0.prescribed_to_id=? 
    order by
        mp1_0.created_at desc 
    limit
        ?
2025-06-20T03:41:20.013+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=? 
        and not(n1_0.seen) 
    order by
        n1_0.date desc 
    limit
        ?
2025-06-20T03:41:20.394+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:41:20.434+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:41:21.179+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:41:21.190+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    left join
        clients c1_0 
            on c1_0.client_id=a1_0.client_id 
    where
        c1_0.client_id=?
2025-06-20T03:41:22.162+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:41:22.175+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        c1_1.full_name 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:41:22.178+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=? 
        and a1_0.status<>'CANCELLED' 
    order by
        a1_0.appointment_date_time desc 
    limit
        ?
2025-06-20T03:41:22.181+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    where
        mp1_0.prescribed_to_id=? 
    order by
        mp1_0.created_at desc 
    limit
        ?
2025-06-20T03:41:22.188+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=? 
        and not(n1_0.seen) 
    order by
        n1_0.date desc 
    limit
        ?
2025-06-20T03:42:16.658+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:42:16.685+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:42:16.715+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:42:16.723+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        c1_1.full_name 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:42:16.726+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=? 
        and a1_0.status<>'CANCELLED' 
    order by
        a1_0.appointment_date_time desc 
    limit
        ?
2025-06-20T03:42:16.732+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    where
        mp1_0.prescribed_to_id=? 
    order by
        mp1_0.created_at desc 
    limit
        ?
2025-06-20T03:42:16.740+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=? 
        and not(n1_0.seen) 
    order by
        n1_0.date desc 
    limit
        ?
2025-06-20T03:42:51.323+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:42:51.344+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:42:52.310+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:42:52.328+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        c1_1.full_name 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:42:52.331+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=? 
        and a1_0.status<>'CANCELLED' 
    order by
        a1_0.appointment_date_time desc 
    limit
        ?
2025-06-20T03:42:52.336+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    where
        mp1_0.prescribed_to_id=? 
    order by
        mp1_0.created_at desc 
    limit
        ?
2025-06-20T03:42:52.346+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=? 
        and not(n1_0.seen) 
    order by
        n1_0.date desc 
    limit
        ?
2025-06-20T03:43:17.681+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:43:17.703+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:43:17.746+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:43:17.762+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        c1_1.full_name 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:43:17.764+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=? 
        and a1_0.status<>'CANCELLED' 
    order by
        a1_0.appointment_date_time desc 
    limit
        ?
2025-06-20T03:43:17.769+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    where
        mp1_0.prescribed_to_id=? 
    order by
        mp1_0.created_at desc 
    limit
        ?
2025-06-20T03:43:17.775+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=? 
        and not(n1_0.seen) 
    order by
        n1_0.date desc 
    limit
        ?
2025-06-20T03:43:40.457+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:43:40.482+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:43:40.525+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:43:40.539+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        c1_1.full_name 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:43:40.542+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=? 
        and a1_0.status<>'CANCELLED' 
    order by
        a1_0.appointment_date_time desc 
    limit
        ?
2025-06-20T03:43:40.545+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    where
        mp1_0.prescribed_to_id=? 
    order by
        mp1_0.created_at desc 
    limit
        ?
2025-06-20T03:43:40.550+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=? 
        and not(n1_0.seen) 
    order by
        n1_0.date desc 
    limit
        ?
2025-06-20T03:43:46.565+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:43:46.583+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:43:46.626+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:43:46.641+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        c1_1.full_name 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:43:46.644+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=? 
        and a1_0.status<>'CANCELLED' 
    order by
        a1_0.appointment_date_time desc 
    limit
        ?
2025-06-20T03:43:46.647+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    where
        mp1_0.prescribed_to_id=? 
    order by
        mp1_0.created_at desc 
    limit
        ?
2025-06-20T03:43:46.656+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=? 
        and not(n1_0.seen) 
    order by
        n1_0.date desc 
    limit
        ?
2025-06-20T03:43:52.442+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:43:52.466+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:43:52.513+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:43:52.527+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        c1_1.full_name 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:43:52.529+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=? 
        and a1_0.status<>'CANCELLED' 
    order by
        a1_0.appointment_date_time desc 
    limit
        ?
2025-06-20T03:43:52.537+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    where
        mp1_0.prescribed_to_id=? 
    order by
        mp1_0.created_at desc 
    limit
        ?
2025-06-20T03:43:52.542+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=? 
        and not(n1_0.seen) 
    order by
        n1_0.date desc 
    limit
        ?
2025-06-20T03:44:00.199+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:44:00.220+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:44:00.259+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:44:00.274+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        c1_1.full_name 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:44:00.277+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=? 
        and a1_0.status<>'CANCELLED' 
    order by
        a1_0.appointment_date_time desc 
    limit
        ?
2025-06-20T03:44:00.282+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    where
        mp1_0.prescribed_to_id=? 
    order by
        mp1_0.created_at desc 
    limit
        ?
2025-06-20T03:44:00.289+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=? 
        and not(n1_0.seen) 
    order by
        n1_0.date desc 
    limit
        ?
2025-06-20T03:44:09.321+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:44:09.343+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:44:09.378+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:44:09.391+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        c1_1.full_name 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:44:09.393+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=? 
        and a1_0.status<>'CANCELLED' 
    order by
        a1_0.appointment_date_time desc 
    limit
        ?
2025-06-20T03:44:09.401+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    where
        mp1_0.prescribed_to_id=? 
    order by
        mp1_0.created_at desc 
    limit
        ?
2025-06-20T03:44:09.405+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=? 
        and not(n1_0.seen) 
    order by
        n1_0.date desc 
    limit
        ?
2025-06-20T03:44:32.019+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:44:32.037+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:44:34.774+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:44:34.788+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        c1_1.full_name 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:44:34.791+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=? 
        and a1_0.status<>'CANCELLED' 
    order by
        a1_0.appointment_date_time desc 
    limit
        ?
2025-06-20T03:44:34.797+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    where
        mp1_0.prescribed_to_id=? 
    order by
        mp1_0.created_at desc 
    limit
        ?
2025-06-20T03:44:34.802+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=? 
        and not(n1_0.seen) 
    order by
        n1_0.date desc 
    limit
        ?
2025-06-20T03:44:52.424+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:44:52.443+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:46:16.128+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:46:16.143+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        c1_1.full_name 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:46:16.145+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=? 
        and a1_0.status<>'CANCELLED' 
    order by
        a1_0.appointment_date_time desc 
    limit
        ?
2025-06-20T03:46:16.151+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    where
        mp1_0.prescribed_to_id=? 
    order by
        mp1_0.created_at desc 
    limit
        ?
2025-06-20T03:46:16.155+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=? 
        and not(n1_0.seen) 
    order by
        n1_0.date desc 
    limit
        ?
2025-06-20T03:46:21.163+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:46:21.205+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:46:23.432+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:46:23.449+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    left join
        clients c1_0 
            on c1_0.client_id=a1_0.client_id 
    where
        c1_0.client_id=?
2025-06-20T03:46:26.098+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:46:26.098+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:46:26.117+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    left join
        clients pt1_0 
            on pt1_0.client_id=mp1_0.prescribed_to_id 
    where
        pt1_0.client_id=?
2025-06-20T03:46:26.117+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        lr1_0.id,
        lr1_0.created_at,
        lr1_0.notes,
        lr1_0.ordered_by_id,
        lr1_0.patient_id,
        lr1_0.reference_range,
        lr1_0.result_date,
        lr1_0.result_value,
        lr1_0.status,
        lr1_0.test_name,
        lr1_0.unit,
        lr1_0.updated_at,
        lr1_0.version 
    from
        lab_results lr1_0 
    left join
        clients p1_0 
            on p1_0.client_id=lr1_0.patient_id 
    where
        p1_0.client_id=?
2025-06-20T03:46:26.750+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:46:26.810+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=?
2025-06-20T03:46:27.716+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:46:27.737+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        fb1_0.id,
        fb1_0.author_id,
        fb1_0.comment,
        fb1_0.created_at,
        fb1_0.rating,
        fb1_0.type,
        fb1_0.written_to_id 
    from
        feedbacks fb1_0 
    join
        clients a1_0 
            on a1_0.client_id=fb1_0.author_id 
    where
        a1_0.client_id=?
2025-06-20T03:46:27.742+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:46:29.367+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:46:29.386+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        c1_1.full_name 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:46:29.390+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=? 
        and a1_0.status<>'CANCELLED' 
    order by
        a1_0.appointment_date_time desc 
    limit
        ?
2025-06-20T03:46:29.397+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    where
        mp1_0.prescribed_to_id=? 
    order by
        mp1_0.created_at desc 
    limit
        ?
2025-06-20T03:46:29.404+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=? 
        and not(n1_0.seen) 
    order by
        n1_0.date desc 
    limit
        ?
2025-06-20T03:46:46.160+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:46:46.178+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:46:47.614+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:46:47.652+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-8] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    left join
        clients c1_0 
            on c1_0.client_id=a1_0.client_id 
    where
        c1_0.client_id=?
2025-06-20T03:46:48.003+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:46:48.004+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:46:48.047+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    left join
        clients pt1_0 
            on pt1_0.client_id=mp1_0.prescribed_to_id 
    where
        pt1_0.client_id=?
2025-06-20T03:46:48.049+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        lr1_0.id,
        lr1_0.created_at,
        lr1_0.notes,
        lr1_0.ordered_by_id,
        lr1_0.patient_id,
        lr1_0.reference_range,
        lr1_0.result_date,
        lr1_0.result_value,
        lr1_0.status,
        lr1_0.test_name,
        lr1_0.unit,
        lr1_0.updated_at,
        lr1_0.version 
    from
        lab_results lr1_0 
    left join
        clients p1_0 
            on p1_0.client_id=lr1_0.patient_id 
    where
        p1_0.client_id=?
2025-06-20T03:46:48.393+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:46:48.417+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=?
2025-06-20T03:46:49.444+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:46:49.480+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        fb1_0.id,
        fb1_0.author_id,
        fb1_0.comment,
        fb1_0.created_at,
        fb1_0.rating,
        fb1_0.type,
        fb1_0.written_to_id 
    from
        feedbacks fb1_0 
    join
        clients a1_0 
            on a1_0.client_id=fb1_0.author_id 
    where
        a1_0.client_id=?
2025-06-20T03:46:49.491+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:46:57.188+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:46:57.188+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:46:57.204+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    left join
        clients pt1_0 
            on pt1_0.client_id=mp1_0.prescribed_to_id 
    where
        pt1_0.client_id=?
2025-06-20T03:46:57.204+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        lr1_0.id,
        lr1_0.created_at,
        lr1_0.notes,
        lr1_0.ordered_by_id,
        lr1_0.patient_id,
        lr1_0.reference_range,
        lr1_0.result_date,
        lr1_0.result_value,
        lr1_0.status,
        lr1_0.test_name,
        lr1_0.unit,
        lr1_0.updated_at,
        lr1_0.version 
    from
        lab_results lr1_0 
    left join
        clients p1_0 
            on p1_0.client_id=lr1_0.patient_id 
    where
        p1_0.client_id=?
2025-06-20T03:56:02.760+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:56:02.788+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:56:02.828+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:56:02.838+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        c1_1.full_name 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:56:02.840+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=? 
        and a1_0.status<>'CANCELLED' 
    order by
        a1_0.appointment_date_time desc 
    limit
        ?
2025-06-20T03:56:02.844+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    where
        mp1_0.prescribed_to_id=? 
    order by
        mp1_0.created_at desc 
    limit
        ?
2025-06-20T03:56:02.848+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=? 
        and not(n1_0.seen) 
    order by
        n1_0.date desc 
    limit
        ?
2025-06-20T03:57:04.889+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:57:04.925+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:57:05.916+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:57:05.951+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        c1_1.full_name 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:57:05.960+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=? 
        and a1_0.status<>'CANCELLED' 
    order by
        a1_0.appointment_date_time desc 
    limit
        ?
2025-06-20T03:57:05.973+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    where
        mp1_0.prescribed_to_id=? 
    order by
        mp1_0.created_at desc 
    limit
        ?
2025-06-20T03:57:05.989+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=? 
        and not(n1_0.seen) 
    order by
        n1_0.date desc 
    limit
        ?
2025-06-20T03:57:38.432+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:57:38.459+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:57:38.499+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:57:38.514+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        c1_1.full_name 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:57:38.517+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=? 
        and a1_0.status<>'CANCELLED' 
    order by
        a1_0.appointment_date_time desc 
    limit
        ?
2025-06-20T03:57:38.520+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    where
        mp1_0.prescribed_to_id=? 
    order by
        mp1_0.created_at desc 
    limit
        ?
2025-06-20T03:57:38.528+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=? 
        and not(n1_0.seen) 
    order by
        n1_0.date desc 
    limit
        ?
2025-06-20T03:57:43.838+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:57:43.858+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:57:44.414+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:57:44.424+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        c1_1.full_name 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:57:44.427+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=? 
        and a1_0.status<>'CANCELLED' 
    order by
        a1_0.appointment_date_time desc 
    limit
        ?
2025-06-20T03:57:44.430+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    where
        mp1_0.prescribed_to_id=? 
    order by
        mp1_0.created_at desc 
    limit
        ?
2025-06-20T03:57:44.434+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=? 
        and not(n1_0.seen) 
    order by
        n1_0.date desc 
    limit
        ?
2025-06-20T03:57:51.063+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:57:51.086+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:57:51.133+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:57:51.147+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        c1_1.full_name 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:57:51.150+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=? 
        and a1_0.status<>'CANCELLED' 
    order by
        a1_0.appointment_date_time desc 
    limit
        ?
2025-06-20T03:57:51.153+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    where
        mp1_0.prescribed_to_id=? 
    order by
        mp1_0.created_at desc 
    limit
        ?
2025-06-20T03:57:51.161+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=? 
        and not(n1_0.seen) 
    order by
        n1_0.date desc 
    limit
        ?
2025-06-20T03:57:56.364+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:57:56.382+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:57:56.422+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:57:56.432+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        c1_1.full_name 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:57:56.435+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=? 
        and a1_0.status<>'CANCELLED' 
    order by
        a1_0.appointment_date_time desc 
    limit
        ?
2025-06-20T03:57:56.440+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    where
        mp1_0.prescribed_to_id=? 
    order by
        mp1_0.created_at desc 
    limit
        ?
2025-06-20T03:57:56.445+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=? 
        and not(n1_0.seen) 
    order by
        n1_0.date desc 
    limit
        ?
2025-06-20T03:58:14.168+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:58:14.189+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:58:15.040+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:58:15.076+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    left join
        clients c1_0 
            on c1_0.client_id=a1_0.client_id 
    where
        c1_0.client_id=?
2025-06-20T03:58:16.106+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:58:16.106+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:58:16.144+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-6] org.hibernate.SQL                        : 
    select
        lr1_0.id,
        lr1_0.created_at,
        lr1_0.notes,
        lr1_0.ordered_by_id,
        lr1_0.patient_id,
        lr1_0.reference_range,
        lr1_0.result_date,
        lr1_0.result_value,
        lr1_0.status,
        lr1_0.test_name,
        lr1_0.unit,
        lr1_0.updated_at,
        lr1_0.version 
    from
        lab_results lr1_0 
    left join
        clients p1_0 
            on p1_0.client_id=lr1_0.patient_id 
    where
        p1_0.client_id=?
2025-06-20T03:58:16.147+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    left join
        clients pt1_0 
            on pt1_0.client_id=mp1_0.prescribed_to_id 
    where
        pt1_0.client_id=?
2025-06-20T03:58:16.653+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:58:16.692+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-4] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=?
2025-06-20T03:58:17.567+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:58:17.604+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        fb1_0.id,
        fb1_0.author_id,
        fb1_0.comment,
        fb1_0.created_at,
        fb1_0.rating,
        fb1_0.type,
        fb1_0.written_to_id 
    from
        feedbacks fb1_0 
    join
        clients a1_0 
            on a1_0.client_id=fb1_0.author_id 
    where
        a1_0.client_id=?
2025-06-20T03:58:17.613+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-10] org.hibernate.SQL                        : 
    select
        c1_0.client_id,
        c1_1.address,
        c1_1.created_at,
        c1_1.date_of_birth,
        c1_1.email,
        c1_1.full_name,
        c1_1.hashed_password,
        c1_1.phone_number,
        c1_1.status,
        c1_1.updated_at,
        c1_1.version,
        c1_0.blood_type,
        c1_0.contact_name,
        c1_0.contact_phone,
        c1_0.relationship,
        c1_0.membership_level 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:58:22.502+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        u1_0.id,
        u1_0.user_type,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.full_name,
        u1_0.hashed_password,
        u1_0.phone_number,
        u1_0.status,
        u1_0.updated_at,
        u1_0.version,
        u1_1.blood_type,
        u1_1.contact_name,
        u1_1.contact_phone,
        u1_1.relationship,
        u1_1.membership_level,
        d1_0.id,
        d1_0.contact_number,
        d1_0.created_at,
        d1_0.description,
        d1_0.head_doctor_id,
        d1_0.location,
        d1_0.name,
        d1_0.updated_at,
        d1_0.version,
        u1_2.medical_license_number,
        u1_2.specialization 
    from
        users u1_0 
    left join
        clients u1_1 
            on u1_0.id=u1_1.client_id 
    left join
        doctors u1_2 
            on u1_0.id=u1_2.doctor_id 
    left join
        departments d1_0 
            on d1_0.id=u1_2.department_id 
    where
        u1_0.id=?
2025-06-20T03:58:22.539+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        c1_1.full_name 
    from
        clients c1_0 
    join
        users c1_1 
            on c1_0.client_id=c1_1.id 
    where
        c1_0.client_id=?
2025-06-20T03:58:22.548+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        a1_0.id,
        a1_0.appointment_date_time,
        a1_0.client_id,
        a1_0.created_at,
        a1_0.department_id,
        a1_0.diagnosis,
        a1_0.doctor_id,
        a1_0.reason,
        a1_0.status,
        a1_0.type,
        a1_0.updated_at,
        a1_0.version 
    from
        appointments a1_0 
    where
        a1_0.client_id=? 
        and a1_0.status<>'CANCELLED' 
    order by
        a1_0.appointment_date_time desc 
    limit
        ?
2025-06-20T03:58:22.594+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        mp1_0.id,
        mp1_0.created_at,
        mp1_0.dosage,
        mp1_0.end_date,
        mp1_0.frequency,
        mp1_0.medication_name,
        mp1_0.notes,
        mp1_0.prescribed_by_id,
        mp1_0.prescribed_to_id,
        mp1_0.start_date,
        mp1_0.status,
        mp1_0.updated_at,
        mp1_0.version 
    from
        medical_prescriptions mp1_0 
    where
        mp1_0.prescribed_to_id=? 
    order by
        mp1_0.created_at desc 
    limit
        ?
2025-06-20T03:58:22.612+02:00 DEBUG 12320 --- [back] [http-nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        n1_0.id,
        n1_0.date,
        n1_0.message,
        n1_0.seen,
        n1_0.title,
        n1_0.type,
        n1_0.user_id 
    from
        notifications n1_0 
    left join
        users u1_0 
            on u1_0.id=n1_0.user_id 
    where
        u1_0.id=? 
        and not(n1_0.seen) 
    order by
        n1_0.date desc 
    limit
        ?
